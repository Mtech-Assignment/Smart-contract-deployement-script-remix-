{
	"id": "162c1f4d5b55d3ba69e322d2d1aa3985",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n/* Imports */\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/* Errors */\r\nerror NFTMarketplace__ItemPriceIsZero(string message);\r\nerror NFTMarketplace__ItemPriceNotMet(string message);\r\nerror NFTMarketplace__ListingPriceIsNotMet(string message);\r\nerror NFTMarketplace__YouAreNotOwnerOfThisItem(string message);\r\n\r\ncontract NFTMarketplace is ReentrancyGuard {\r\n\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private s_nftIds;\r\n    Counters.Counter private s_nftSold; // To count how many nfts are sold\r\n\r\n    address payable private owner;\r\n    uint256 listingPrice = 0.025 * (10 ** 18); // This is the base price every seller has to pay for every listing.\r\n\r\n    IERC20 public tradingToken;\r\n\r\n    constructor(address _erc20Address) {\r\n        tradingToken = IERC20(_erc20Address);\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    struct Item {\r\n        uint itemId;\r\n        address nftContract;\r\n        uint256 tokenId;\r\n        address seller;\r\n        address owner;\r\n        uint256 price;\r\n        bool sold;\r\n    }\r\n\r\n    mapping(uint256 => Item) private Items; // Main Mapping of all Items with tokenId\r\n\r\n    event ItemList(\r\n        uint indexed itemId,\r\n        address indexed nftAddress,\r\n        uint256 indexed tokenId,\r\n        address seller,\r\n        address owner,\r\n        uint256 price,\r\n        bool sold\r\n    );\r\n\r\n    event ItemBought(\r\n        address indexed nftAddress,\r\n        uint256 indexed tokenId,\r\n        address seller,\r\n        address owner,\r\n        uint256 price,\r\n        bool sold\r\n    );\r\n\r\n    event ItemResell(\r\n        address indexed nftAddress,\r\n        uint256 indexed tokenId,\r\n        address seller,\r\n        address owner,\r\n        uint256 price,\r\n        bool sold\r\n    );\r\n\r\n    function getListingPrice() external view returns (uint256) {\r\n        return listingPrice;\r\n    }\r\n\r\n    // Get all Listed Items\r\n    function getAllListedItems() external view returns (Item[] memory) {\r\n        uint itemCount = s_nftIds.current();\r\n        uint unSoldItemsCount = s_nftIds.current() - s_nftSold.current();\r\n        uint currentIndex = 0;\r\n\r\n        Item[] memory items = new Item[](unSoldItemsCount);\r\n        for (uint i = 0; i < itemCount; i++) {\r\n            if (Items[i + 1].owner == address(this)) {\r\n                uint currentId = Items[i + 1].itemId;\r\n                Item memory currentItem = Items[currentId];\r\n                items[currentIndex] = currentItem;\r\n                currentIndex += 1;\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    // Get Items of the owner who have purchased the items;\r\n    function getOwnerListedItems() external view returns (Item[] memory) {\r\n        uint totalListedItems = s_nftIds.current();\r\n        uint itemCount = 0;\r\n        uint currentIndex = 0;\r\n\r\n        for (uint256 i = 0; i < totalListedItems; i++) {\r\n            if (Items[i + 1].owner == msg.sender) {\r\n                itemCount += 1;\r\n            }\r\n        }\r\n\r\n        Item[] memory items = new Item[](itemCount);\r\n        for (uint i = 0; i < totalListedItems; i++) {\r\n            if (Items[i + 1].owner == msg.sender) {\r\n                uint currentId = Items[i + 1].itemId;\r\n                Item memory currentItem = Items[currentId];\r\n                items[currentIndex] = currentItem;\r\n                currentIndex += 1;\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    // Get Items of the seller who have listed items;\r\n    function getSellerListedItems() external view returns (Item[] memory) {\r\n        uint totalListedItems = s_nftIds.current();\r\n        uint itemCount = 0;\r\n        uint currentIndex = 0;\r\n\r\n        for (uint256 i = 0; i < totalListedItems; i++) {\r\n            if (Items[i + 1].seller == msg.sender) {\r\n                itemCount += 1;\r\n            }\r\n        }\r\n\r\n        Item[] memory items = new Item[](itemCount);\r\n        for (uint i = 0; i < totalListedItems; i++) {\r\n            if (Items[i + 1].seller == msg.sender) {\r\n                uint currentId = Items[i + 1].itemId;\r\n                Item memory currentItem = Items[currentId];\r\n                items[currentIndex] = currentItem;\r\n                currentIndex += 1;\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    function getParticularItem(uint256 _itemId) external view returns(Item memory){\r\n        return Items[_itemId];\r\n    }\r\n\r\n    // List a item;\r\n    function listItem(\r\n        address _nftAddress,\r\n        uint256 _tokenId,\r\n        uint256 _price\r\n    ) public nonReentrant {\r\n        if (_price == 0) { // price in wei\r\n            revert NFTMarketplace__ItemPriceIsZero(\"Item Price is zero\");\r\n        }\r\n\r\n        // in case of using ether as the marketplace trading\r\n        // if (msg.value != listingPrice) { \r\n        //     revert NFTMarketplace__ListingPriceIsNotMet();\r\n        // }\r\n\r\n        // check if listingPrice is approved by the sender\r\n        if (tradingToken.allowance(msg.sender, address(this)) < listingPrice) {\r\n            revert NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\");\r\n        }\r\n\r\n        // transfer the CSDP token from user to the contract address\r\n        tradingToken.transferFrom(msg.sender, address(this), listingPrice);\r\n        s_nftIds.increment();\r\n        uint newNftId = s_nftIds.current();\r\n\r\n        Items[newNftId] = Item(\r\n            newNftId,\r\n            _nftAddress,\r\n            _tokenId,\r\n            msg.sender,\r\n            address(this),\r\n            _price,\r\n            false\r\n        );\r\n\r\n        IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId);\r\n\r\n        emit ItemList(\r\n            newNftId,\r\n            _nftAddress,\r\n            _tokenId,\r\n            msg.sender,\r\n            address(this),\r\n            _price,\r\n            false\r\n        );\r\n\r\n        // after listing of item transfer the listing price to owner of the marketplace\r\n        // payable(owner).transfer(msg.value); // for ether \r\n        tradingToken.transfer(owner, listingPrice);  // for custom token\r\n    }\r\n\r\n    // Buy Item\r\n    function buyItem(address _nftAddress, uint256 _itemId)\r\n        external\r\n        nonReentrant\r\n    {\r\n        uint256 price = Items[_itemId].price;\r\n        uint256 tokenId = Items[_itemId].tokenId;\r\n        address seller = Items[_itemId].seller;\r\n        // if (msg.value != price) {\r\n        //     revert NFTMarketplace__ItemPriceNotMet();\r\n        // }\r\n\r\n        // check if listingPrice is approved by the sender\r\n        if (tradingToken.allowance(msg.sender, address(this)) < price) {\r\n            revert NFTMarketplace__ListingPriceIsNotMet(\"Listing Price is not met\");\r\n        }\r\n\r\n        // transfer the CSDP token from user to the contract address\r\n        tradingToken.transferFrom(msg.sender, address(this), price);\r\n\r\n        // seller.transfer(msg.value);\r\n        IERC721(_nftAddress).transferFrom(address(this), msg.sender, tokenId);\r\n        tradingToken.transfer(seller, price);  // transfer CSDP to the seller of the item listed\r\n        Items[_itemId].owner = msg.sender;\r\n        Items[_itemId].sold = true;\r\n        s_nftSold.increment();\r\n\r\n        emit ItemBought(\r\n            _nftAddress,\r\n            tokenId,\r\n            address(this),\r\n            msg.sender,\r\n            price,\r\n            true\r\n        );\r\n    }\r\n\r\n    // Resell\r\n    function resellItem(\r\n        address _nftAddress,\r\n        uint256 _itemId,\r\n        uint256 _price\r\n    ) public nonReentrant {\r\n        if (Items[_itemId].owner != msg.sender) {\r\n            revert NFTMarketplace__YouAreNotOwnerOfThisItem(\"You are not the owner of this item\");\r\n        }\r\n        // if (msg.value != listingPrice) {\r\n        //     revert NFTMarketplace__ListingPriceIsNotMet();\r\n        // }\r\n        \r\n        // check if listingPrice is approved by the sender\r\n        if (tradingToken.allowance(msg.sender, address(this)) < listingPrice) {\r\n            revert NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\");\r\n        }\r\n\r\n        // transfer the CSDP token from user to the contract address\r\n        tradingToken.transferFrom(msg.sender, address(this), listingPrice);\r\n        Items[_itemId].sold = false;\r\n        Items[_itemId].price = _price;\r\n        Items[_itemId].seller = msg.sender;\r\n        Items[_itemId].owner = address(this);\r\n        s_nftSold.decrement();\r\n\r\n        uint _tokenId = Items[_itemId].tokenId;\r\n        IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId);\r\n\r\n        emit ItemResell(_nftAddress, _tokenId, msg.sender, address(this), _price, false);\r\n        // payable(owner).transfer(msg.value); for ether\r\n        tradingToken.transfer(owner, listingPrice);  // for custom token\r\n    }\r\n\r\n    function unlistItem(uint256 _itemId) external {\r\n        if (Items[_itemId].seller != msg.sender && Items[_itemId].owner != msg.sender) {\r\n            revert NFTMarketplace__YouAreNotOwnerOfThisItem(\"You are not the owner of this item\");\r\n        }\r\n        // can't transfer the nft back to owner as it will consume gas\r\n        delete Items[_itemId];\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 147,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 312,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 314,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 318,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 322,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ERC721Utils": {
					"abi": [],
					"devdoc": {
						"details": "Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204fd447e68949a5f4f7f6a94159073d3523ea67908f0255f17cc82c4350416d5f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204fd447e68949a5f4f7f6a94159073d3523ea67908f0255f17cc82c4350416d5f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xD4 SELFBALANCE 0xE6 DUP10 BLOBHASH 0xA5 DELEGATECALL 0xF7 0xF6 0xA9 COINBASE MSIZE SMOD RETURNDATASIZE CALLDATALOAD 0x23 0xEA PUSH8 0x908F0255F17CC82C NUMBER POP COINBASE PUSH14 0x5F64736F6C634300081A00330000 ",
							"sourceMap": "431:1480:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1480:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204fd447e68949a5f4f7f6a94159073d3523ea67908f0255f17cc82c4350416d5f64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xD4 SELFBALANCE 0xE6 DUP10 BLOBHASH 0xA5 DELEGATECALL 0xF7 0xF6 0xA9 COINBASE MSIZE SMOD RETURNDATASIZE CALLDATALOAD 0x23 0xEA PUSH8 0x908F0255F17CC82C NUMBER POP COINBASE PUSH14 0x5F64736F6C634300081A00330000 ",
							"sourceMap": "431:1480:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"checkOnERC721Received(address,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204fd447e68949a5f4f7f6a94159073d3523ea67908f0255f17cc82c4350416d5f64736f6c634300081a0033",
									".code": [
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d31aab87eff1a67f22f0fbcd0791406a9d3bf7d865c35e343948853b87055f6e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d31aab87eff1a67f22f0fbcd0791406a9d3bf7d865c35e343948853b87055f6e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 BYTE 0xAB DUP8 0xEF CALL 0xA6 PUSH32 0x22F0FBCD0791406A9D3BF7D865C35E343948853B87055F6E64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d31aab87eff1a67f22f0fbcd0791406a9d3bf7d865c35e343948853b87055f6e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 BYTE 0xAB DUP8 0xEF CALL 0xA6 PUSH32 0x22F0FBCD0791406A9D3BF7D865C35E343948853B87055F6E64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "424:971:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d31aab87eff1a67f22f0fbcd0791406a9d3bf7d865c35e343948853b87055f6e64736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122049db7be255564b18b33c0f84a547e54bca47eb358f2c24348440db5a4e9fe0e264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122049db7be255564b18b33c0f84a547e54bca47eb358f2c24348440db5a4e9fe0e264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xDB PUSH28 0xE255564B18B33C0F84A547E54BCA47EB358F2C24348440DB5A4E9FE0 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122049db7be255564b18b33c0f84a547e54bca47eb358f2c24348440db5a4e9fe0e264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xDB PUSH28 0xE255564B18B33C0F84A547E54BCA47EB358F2C24348440DB5A4E9FE0 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049db7be255564b18b33c0f84a547e54bca47eb358f2c24348440db5a4e9fe0e264736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY REVERT 0xD4 PUSH21 0x49EEA188394CF3FAFE88E8CEF6E2C9FE1BFFAA2FF6 PUSH11 0x356BEFAF47BD64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY REVERT 0xD4 PUSH21 0x49EEA188394CF3FAFE88E8CEF6E2C9FE1BFFAA2FF6 PUSH11 0x356BEFAF47BD64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cfdd47449eea188394cf3fafe88e8cef6e2c9fe1bffaa2ff66a356befaf47bd64736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095753a7d5298a939bcc1ff6f209522e4ba5ba2334894ba3f94dfa1c52c0427cc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122095753a7d5298a939bcc1ff6f209522e4ba5ba2334894ba3f94dfa1c52c0427cc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH22 0x3A7D5298A939BCC1FF6F209522E4BA5BA2334894BA3F SWAP5 0xDF LOG1 0xC5 0x2C DIV 0x27 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122095753a7d5298a939bcc1ff6f209522e4ba5ba2334894ba3f94dfa1c52c0427cc64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH22 0x3A7D5298A939BCC1FF6F209522E4BA5BA2334894BA3F SWAP5 0xDF LOG1 0xC5 0x2C DIV 0x27 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095753a7d5298a939bcc1ff6f209522e4ba5ba2334894ba3f94dfa1c52c0427cc64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Marketplace.sol": {
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc20Address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "NFTMarketplace__ItemPriceIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "NFTMarketplace__ListingPriceIsNotMet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "NFTMarketplace__YouAreNotOwnerOfThisItem",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "sold",
									"type": "bool"
								}
							],
							"name": "ItemBought",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "sold",
									"type": "bool"
								}
							],
							"name": "ItemList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "sold",
									"type": "bool"
								}
							],
							"name": "ItemResell",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_itemId",
									"type": "uint256"
								}
							],
							"name": "buyItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllListedItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sold",
											"type": "bool"
										}
									],
									"internalType": "struct NFTMarketplace.Item[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getListingPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwnerListedItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sold",
											"type": "bool"
										}
									],
									"internalType": "struct NFTMarketplace.Item[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_itemId",
									"type": "uint256"
								}
							],
							"name": "getParticularItem",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sold",
											"type": "bool"
										}
									],
									"internalType": "struct NFTMarketplace.Item",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSellerListedItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sold",
											"type": "bool"
										}
									],
									"internalType": "struct NFTMarketplace.Item[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "listItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_itemId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "resellItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_itemId",
									"type": "uint256"
								}
							],
							"name": "unlistItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Marketplace.sol\":566:9332  contract NFTMarketplace is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Marketplace.sol\":837:855  0.025 * (10 ** 18) */\n  0x58d15e17628000\n    /* \"contracts/Marketplace.sol\":814:855  uint256 listingPrice = 0.025 * (10 ** 18) */\n  0x04\n  sstore\n    /* \"contracts/Marketplace.sol\":968:1096  constructor(address _erc20Address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"contracts/Marketplace.sol\":1014:1026  tradingToken */\n  0x05\n    /* \"contracts/Marketplace.sol\":1014:1050  tradingToken = IERC20(_erc20Address) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Marketplace.sol\":1061:1066  owner */\n  0x03\n    /* \"contracts/Marketplace.sol\":1061:1088  owner = payable(msg.sender) */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/Marketplace.sol\":1077:1087  msg.sender */\n  caller\n    /* \"contracts/Marketplace.sol\":1061:1088  owner = payable(msg.sender) */\n  or\n  swap1\n  sstore\n    /* \"contracts/Marketplace.sol\":566:9332  contract NFTMarketplace is ReentrancyGuard {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_11:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_12:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n    /* \"contracts/Marketplace.sol\":566:9332  contract NFTMarketplace is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Marketplace.sol\":566:9332  contract NFTMarketplace is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89bfd38f\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x89bfd38f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8f0af0f9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9f37092a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2a7a2b4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf9319c53\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x12e85585\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2ad8a220\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3b1b1ad0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4d757a1c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5a599da8\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Marketplace.sol\":2008:2105  function getListingPrice() external view returns (uint256) {... */\n    tag_3:\n        /* \"contracts/Marketplace.sol\":2085:2097  listingPrice */\n      sload(0x04)\n        /* \"contracts/Marketplace.sol\":2008:2105  function getListingPrice() external view returns (uint256) {... */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Marketplace.sol\":2008:2105  function getListingPrice() external view returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace.sol\":933:959  IERC20 public tradingToken */\n    tag_4:\n      sload(0x05)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":374:406   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":356:407   */\n      dup2\n      mstore\n        /* \"#utility.yul\":344:346   */\n      0x20\n        /* \"#utility.yul\":329:347   */\n      add\n        /* \"contracts/Marketplace.sol\":933:959  IERC20 public tradingToken */\n      tag_16\n        /* \"#utility.yul\":196:413   */\n      jump\n        /* \"contracts/Marketplace.sol\":2142:2792  function getAllListedItems() external view returns (Item[] memory) {... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":2861:3641  function getOwnerListedItems() external view returns (Item[] memory) {... */\n    tag_6:\n      tag_22\n      tag_27\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":8970:9329  function unlistItem(uint256 _itemId) external {... */\n    tag_7:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Marketplace.sol\":4644:6286  function listItem(... */\n    tag_8:\n      tag_29\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":7586:8962  function resellItem(... */\n    tag_9:\n      tag_29\n      tag_38\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":6311:7563  function buyItem(address _nftAddress, uint256 _itemId)... */\n    tag_10:\n      tag_29\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":4497:4615  function getParticularItem(uint256 _itemId) external view returns(Item memory){... */\n    tag_11:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":3704:4489  function getSellerListedItems() external view returns (Item[] memory) {... */\n    tag_12:\n      tag_22\n      tag_50\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":2142:2792  function getAllListedItems() external view returns (Item[] memory) {... */\n    tag_23:\n        /* \"contracts/Marketplace.sol\":2194:2207  Item[] memory */\n      0x60\n        /* \"contracts/Marketplace.sol\":2220:2234  uint itemCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":2237:2255  s_nftIds.current() */\n      tag_54\n        /* \"contracts/Marketplace.sol\":2237:2245  s_nftIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":2237:2255  s_nftIds.current() */\n    tag_54:\n        /* \"contracts/Marketplace.sol\":2220:2255  uint itemCount = s_nftIds.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2266:2287  uint unSoldItemsCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":2311:2330  s_nftSold.current() */\n      tag_56\n        /* \"contracts/Marketplace.sol\":2311:2320  s_nftSold */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":2311:2330  s_nftSold.current() */\n    tag_56:\n        /* \"contracts/Marketplace.sol\":2290:2298  s_nftIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/Marketplace.sol\":2290:2330  s_nftIds.current() - s_nftSold.current() */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/Marketplace.sol\":2266:2330  uint unSoldItemsCount = s_nftIds.current() - s_nftSold.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2341:2358  uint currentIndex */\n      0x00\n        /* \"contracts/Marketplace.sol\":2375:2394  Item[] memory items */\n      dup1\n        /* \"contracts/Marketplace.sol\":2408:2424  unSoldItemsCount */\n      dup3\n        /* \"contracts/Marketplace.sol\":2397:2425  new Item[](unSoldItemsCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_61\n      jumpi\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup2\n      0x20\n      add\n    tag_64:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_64\n      jumpi\n      swap1\n      pop\n    tag_63:\n      pop\n        /* \"contracts/Marketplace.sol\":2375:2425  Item[] memory items = new Item[](unSoldItemsCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2441:2447  uint i */\n      0x00\n        /* \"contracts/Marketplace.sol\":2436:2760  for (uint i = 0; i < itemCount; i++) {... */\n    tag_67:\n        /* \"contracts/Marketplace.sol\":2457:2466  itemCount */\n      dup5\n        /* \"contracts/Marketplace.sol\":2453:2454  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":2453:2466  i < itemCount */\n      lt\n        /* \"contracts/Marketplace.sol\":2436:2760  for (uint i = 0; i < itemCount; i++) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/Marketplace.sol\":2522:2526  this */\n      address\n        /* \"contracts/Marketplace.sol\":2492:2497  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":2492:2504  Items[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":2498:2503  i + 1 */\n      tag_70\n        /* \"contracts/Marketplace.sol\":2498:2499  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":2502:2503  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":2498:2503  i + 1 */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/Marketplace.sol\":2492:2504  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":2492:2510  Items[i + 1].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":2492:2527  Items[i + 1].owner == address(this) */\n      sub\n        /* \"contracts/Marketplace.sol\":2488:2749  if (Items[i + 1].owner == address(this)) {... */\n      tag_72\n      jumpi\n        /* \"contracts/Marketplace.sol\":2548:2562  uint currentId */\n      0x00\n        /* \"contracts/Marketplace.sol\":2565:2570  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":2548:2562  uint currentId */\n      dup2\n        /* \"contracts/Marketplace.sol\":2571:2576  i + 1 */\n      tag_73\n        /* \"contracts/Marketplace.sol\":2571:2572  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":2575:2576  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":2571:2576  i + 1 */\n      tag_71\n      jump\t// in\n    tag_73:\n        /* \"contracts/Marketplace.sol\":2565:2577  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Marketplace.sol\":2565:2584  Items[i + 1].itemId */\n      sload\n        /* \"contracts/Marketplace.sol\":2629:2645  Items[currentId] */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/Marketplace.sol\":2629:2634  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":2629:2645  Items[currentId] */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":2603:2645  Item memory currentItem = Items[currentId] */\n      dup4\n      mload\n      0xe0\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap7\n      dup3\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap5\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup6\n      and\n      0x60\n      dup6\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap5\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup5\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      swap3\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"contracts/Marketplace.sol\":2664:2683  items[currentIndex] */\n      dup5\n      mload\n        /* \"contracts/Marketplace.sol\":2565:2584  Items[i + 1].itemId */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Marketplace.sol\":2603:2645  Item memory currentItem = Items[currentId] */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Marketplace.sol\":2664:2669  items */\n      dup6\n      swap1\n        /* \"contracts/Marketplace.sol\":2670:2682  currentIndex */\n      dup8\n      swap1\n        /* \"contracts/Marketplace.sol\":2664:2683  items[currentIndex] */\n      dup2\n      lt\n      tag_75\n      jumpi\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Marketplace.sol\":2664:2697  items[currentIndex] = currentItem */\n      mstore\n        /* \"contracts/Marketplace.sol\":2716:2733  currentIndex += 1 */\n      tag_77\n        /* \"contracts/Marketplace.sol\":2732:2733  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":2716:2733  currentIndex += 1 */\n      dup7\n      tag_71\n      jump\t// in\n    tag_77:\n      swap5\n      pop\n        /* \"contracts/Marketplace.sol\":2529:2749  {... */\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":2488:2749  if (Items[i + 1].owner == address(this)) {... */\n    tag_72:\n        /* \"contracts/Marketplace.sol\":2468:2471  i++ */\n      0x01\n      add\n        /* \"contracts/Marketplace.sol\":2436:2760  for (uint i = 0; i < itemCount; i++) {... */\n      jump(tag_67)\n    tag_68:\n      pop\n        /* \"contracts/Marketplace.sol\":2779:2784  items */\n      swap5\n        /* \"contracts/Marketplace.sol\":2142:2792  function getAllListedItems() external view returns (Item[] memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":2861:3641  function getOwnerListedItems() external view returns (Item[] memory) {... */\n    tag_27:\n        /* \"contracts/Marketplace.sol\":2915:2928  Item[] memory */\n      0x60\n        /* \"contracts/Marketplace.sol\":2941:2962  uint totalListedItems */\n      0x00\n        /* \"contracts/Marketplace.sol\":2965:2983  s_nftIds.current() */\n      tag_79\n        /* \"contracts/Marketplace.sol\":2965:2973  s_nftIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":2965:2983  s_nftIds.current() */\n    tag_79:\n        /* \"contracts/Marketplace.sol\":2941:2983  uint totalListedItems = s_nftIds.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":2994:3008  uint itemCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":3023:3040  uint currentIndex */\n      dup1\n        /* \"contracts/Marketplace.sol\":3062:3071  uint256 i */\n      0x00\n        /* \"contracts/Marketplace.sol\":3057:3217  for (uint256 i = 0; i < totalListedItems; i++) {... */\n    tag_80:\n        /* \"contracts/Marketplace.sol\":3081:3097  totalListedItems */\n      dup4\n        /* \"contracts/Marketplace.sol\":3077:3078  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":3077:3097  i < totalListedItems */\n      lt\n        /* \"contracts/Marketplace.sol\":3057:3217  for (uint256 i = 0; i < totalListedItems; i++) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/Marketplace.sol\":3145:3155  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3123:3128  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":3123:3135  Items[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3129:3134  i + 1 */\n      tag_83\n        /* \"contracts/Marketplace.sol\":3129:3130  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":3133:3134  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3129:3134  i + 1 */\n      tag_71\n      jump\t// in\n    tag_83:\n        /* \"contracts/Marketplace.sol\":3123:3135  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3123:3141  Items[i + 1].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":3123:3155  Items[i + 1].owner == msg.sender */\n      sub\n        /* \"contracts/Marketplace.sol\":3119:3206  if (Items[i + 1].owner == msg.sender) {... */\n      tag_84\n      jumpi\n        /* \"contracts/Marketplace.sol\":3176:3190  itemCount += 1 */\n      tag_85\n        /* \"contracts/Marketplace.sol\":3189:3190  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3176:3190  itemCount += 1 */\n      dup5\n      tag_71\n      jump\t// in\n    tag_85:\n      swap3\n      pop\n        /* \"contracts/Marketplace.sol\":3119:3206  if (Items[i + 1].owner == msg.sender) {... */\n    tag_84:\n        /* \"contracts/Marketplace.sol\":3099:3102  i++ */\n      0x01\n      add\n        /* \"contracts/Marketplace.sol\":3057:3217  for (uint256 i = 0; i < totalListedItems; i++) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"contracts/Marketplace.sol\":3229:3248  Item[] memory items */\n      0x00\n        /* \"contracts/Marketplace.sol\":3262:3271  itemCount */\n      dup3\n        /* \"contracts/Marketplace.sol\":3251:3272  new Item[](itemCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      tag_87\n      tag_62\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup2\n      0x20\n      add\n    tag_89:\n      tag_90\n      tag_66\n      jump\t// in\n    tag_90:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_89\n      jumpi\n      swap1\n      pop\n    tag_88:\n      pop\n        /* \"contracts/Marketplace.sol\":3229:3272  Item[] memory items = new Item[](itemCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":3288:3294  uint i */\n      0x00\n        /* \"contracts/Marketplace.sol\":3283:3611  for (uint i = 0; i < totalListedItems; i++) {... */\n    tag_91:\n        /* \"contracts/Marketplace.sol\":3304:3320  totalListedItems */\n      dup5\n        /* \"contracts/Marketplace.sol\":3300:3301  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":3300:3320  i < totalListedItems */\n      lt\n        /* \"contracts/Marketplace.sol\":3283:3611  for (uint i = 0; i < totalListedItems; i++) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/Marketplace.sol\":3368:3378  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3346:3351  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":3346:3358  Items[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3352:3357  i + 1 */\n      tag_94\n        /* \"contracts/Marketplace.sol\":3352:3353  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":3356:3357  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3352:3357  i + 1 */\n      tag_71\n      jump\t// in\n    tag_94:\n        /* \"contracts/Marketplace.sol\":3346:3358  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3346:3364  Items[i + 1].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":3346:3378  Items[i + 1].owner == msg.sender */\n      sub\n        /* \"contracts/Marketplace.sol\":3342:3600  if (Items[i + 1].owner == msg.sender) {... */\n      tag_95\n      jumpi\n        /* \"contracts/Marketplace.sol\":3399:3413  uint currentId */\n      0x00\n        /* \"contracts/Marketplace.sol\":3416:3421  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":3399:3413  uint currentId */\n      dup2\n        /* \"contracts/Marketplace.sol\":3422:3427  i + 1 */\n      tag_96\n        /* \"contracts/Marketplace.sol\":3422:3423  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":3426:3427  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3422:3427  i + 1 */\n      tag_71\n      jump\t// in\n    tag_96:\n        /* \"contracts/Marketplace.sol\":3416:3428  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Marketplace.sol\":3416:3435  Items[i + 1].itemId */\n      sload\n        /* \"contracts/Marketplace.sol\":3480:3496  Items[currentId] */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/Marketplace.sol\":3480:3485  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":3480:3496  Items[currentId] */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":3454:3496  Item memory currentItem = Items[currentId] */\n      dup4\n      mload\n      0xe0\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap7\n      dup3\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap5\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup6\n      and\n      0x60\n      dup6\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap5\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup5\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      swap3\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"contracts/Marketplace.sol\":3515:3534  items[currentIndex] */\n      dup5\n      mload\n        /* \"contracts/Marketplace.sol\":3416:3435  Items[i + 1].itemId */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Marketplace.sol\":3454:3496  Item memory currentItem = Items[currentId] */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Marketplace.sol\":3515:3520  items */\n      dup6\n      swap1\n        /* \"contracts/Marketplace.sol\":3521:3533  currentIndex */\n      dup8\n      swap1\n        /* \"contracts/Marketplace.sol\":3515:3534  items[currentIndex] */\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_76\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Marketplace.sol\":3515:3548  items[currentIndex] = currentItem */\n      mstore\n        /* \"contracts/Marketplace.sol\":3567:3584  currentIndex += 1 */\n      tag_99\n        /* \"contracts/Marketplace.sol\":3583:3584  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3567:3584  currentIndex += 1 */\n      dup7\n      tag_71\n      jump\t// in\n    tag_99:\n      swap5\n      pop\n        /* \"contracts/Marketplace.sol\":3380:3600  {... */\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":3342:3600  if (Items[i + 1].owner == msg.sender) {... */\n    tag_95:\n        /* \"contracts/Marketplace.sol\":3322:3325  i++ */\n      0x01\n      add\n        /* \"contracts/Marketplace.sol\":3283:3611  for (uint i = 0; i < totalListedItems; i++) {... */\n      jump(tag_91)\n        /* \"contracts/Marketplace.sol\":8970:9329  function unlistItem(uint256 _itemId) external {... */\n    tag_32:\n        /* \"contracts/Marketplace.sol\":9031:9045  Items[_itemId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":9031:9036  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":9031:9045  Items[_itemId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":9031:9052  Items[_itemId].seller */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":9056:9066  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":9031:9066  Items[_itemId].seller != msg.sender */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Marketplace.sol\":9031:9104  Items[_itemId].seller != msg.sender && Items[_itemId].owner != msg.sender */\n      tag_101\n      jumpi\n      pop\n        /* \"contracts/Marketplace.sol\":9070:9084  Items[_itemId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":9070:9075  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":9070:9084  Items[_itemId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":9070:9090  Items[_itemId].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":9094:9104  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":9070:9104  Items[_itemId].owner != msg.sender */\n      eq\n      iszero\n        /* \"contracts/Marketplace.sol\":9031:9104  Items[_itemId].seller != msg.sender && Items[_itemId].owner != msg.sender */\n    tag_101:\n        /* \"contracts/Marketplace.sol\":9027:9218  if (Items[_itemId].seller != msg.sender && Items[_itemId].owner != msg.sender) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"contracts/Marketplace.sol\":9128:9206  NFTMarketplace__YouAreNotOwnerOfThisItem(\"You are not the owner of this item\") */\n      mload(0x40)\n      shl(0xe0, 0x47ad5e4f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Marketplace.sol\":9027:9218  if (Items[_itemId].seller != msg.sender && Items[_itemId].owner != msg.sender) {... */\n    tag_102:\n        /* \"contracts/Marketplace.sol\":9307:9321  Items[_itemId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":9307:9312  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":9307:9321  Items[_itemId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Marketplace.sol\":9300:9321  delete Items[_itemId] */\n      dup3\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      0x02\n      dup3\n      add\n      dup5\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x05\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":8970:9329  function unlistItem(uint256 _itemId) external {... */\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":4644:6286  function listItem(... */\n    tag_36:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_106\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/Marketplace.sol\":4786:4792  _price */\n      dup1\n        /* \"contracts/Marketplace.sol\":4796:4797  0 */\n      0x00\n        /* \"contracts/Marketplace.sol\":4786:4797  _price == 0 */\n      sub\n        /* \"contracts/Marketplace.sol\":4782:4902  if (_price == 0) { // price in wei... */\n      tag_109\n      jumpi\n        /* \"contracts/Marketplace.sol\":4837:4890  NFTMarketplace__ItemPriceIsZero(\"Item Price is zero\") */\n      mload(0x40)\n      shl(0xe1, 0x0cc29701)\n      dup2\n      mstore\n        /* \"#utility.yul\":4266:4268   */\n      0x20\n        /* \"contracts/Marketplace.sol\":4837:4890  NFTMarketplace__ItemPriceIsZero(\"Item Price is zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4248:4269   */\n      mstore\n        /* \"#utility.yul\":4305:4307   */\n      0x12\n        /* \"#utility.yul\":4285:4303   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4278:4308   */\n      mstore\n      shl(0x70, 0x4974656d205072696365206973207a65726f)\n        /* \"#utility.yul\":4324:4342   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4317:4365   */\n      mstore\n        /* \"#utility.yul\":4382:4400   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":4837:4890  NFTMarketplace__ItemPriceIsZero(\"Item Price is zero\") */\n      tag_103\n        /* \"#utility.yul\":4064:4406   */\n      jump\n        /* \"contracts/Marketplace.sol\":4782:4902  if (_price == 0) { // price in wei... */\n    tag_109:\n        /* \"contracts/Marketplace.sol\":5217:5229  listingPrice */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":5165:5177  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":5165:5214  tradingToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":5188:5198  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":5165:5214  tradingToken.allowance(msg.sender, address(this)) */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":4585:4636   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Marketplace.sol\":5208:5212  this */\n      address\n        /* \"#utility.yul\":4652:4670   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":4645:4705   */\n      mstore\n        /* \"contracts/Marketplace.sol\":5217:5229  listingPrice */\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":5165:5177  tradingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":5165:5187  tradingToken.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":4558:4576   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":5165:5214  tradingToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"contracts/Marketplace.sol\":5165:5229  tradingToken.allowance(msg.sender, address(this)) < listingPrice */\n      lt\n        /* \"contracts/Marketplace.sol\":5161:5329  if (tradingToken.allowance(msg.sender, address(this)) < listingPrice) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"contracts/Marketplace.sol\":5253:5317  NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\") */\n      mload(0x40)\n      shl(0xe1, 0x03f36f1b)\n      dup2\n      mstore\n        /* \"#utility.yul\":5107:5109   */\n      0x20\n        /* \"contracts/Marketplace.sol\":5253:5317  NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5089:5110   */\n      mstore\n        /* \"#utility.yul\":5146:5148   */\n      0x18\n        /* \"#utility.yul\":5126:5144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5119:5149   */\n      mstore\n      shl(0x42, 0x131a5cdd1a5b99c81c1c9a58d9481a5cc81b9bdd081b595d)\n        /* \"#utility.yul\":5165:5183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5158:5212   */\n      mstore\n        /* \"#utility.yul\":5229:5247   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":5253:5317  NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\") */\n      tag_103\n        /* \"#utility.yul\":4905:5253   */\n      jump\n        /* \"contracts/Marketplace.sol\":5161:5329  if (tradingToken.allowance(msg.sender, address(this)) < listingPrice) {... */\n    tag_118:\n        /* \"contracts/Marketplace.sol\":5411:5423  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":5464:5476  listingPrice */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":5411:5477  tradingToken.transferFrom(msg.sender, address(this), listingPrice) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":5411:5423  tradingToken */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/Marketplace.sol\":5411:5436  tradingToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"contracts/Marketplace.sol\":5411:5477  tradingToken.transferFrom(msg.sender, address(this), listingPrice) */\n      tag_121\n      swap3\n        /* \"contracts/Marketplace.sol\":5437:5447  msg.sender */\n      caller\n      swap3\n        /* \"contracts/Marketplace.sol\":5457:5461  this */\n      address\n      swap3\n        /* \"contracts/Marketplace.sol\":5411:5477  tradingToken.transferFrom(msg.sender, address(this), listingPrice) */\n      add\n      tag_122\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      pop\n        /* \"contracts/Marketplace.sol\":5488:5508  s_nftIds.increment() */\n      tag_127\n        /* \"contracts/Marketplace.sol\":5488:5496  s_nftIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Marketplace.sol\":5488:5508  s_nftIds.increment() */\n    tag_127:\n        /* \"contracts/Marketplace.sol\":5519:5532  uint newNftId */\n      0x00\n        /* \"contracts/Marketplace.sol\":5535:5553  s_nftIds.current() */\n      tag_129\n        /* \"contracts/Marketplace.sol\":5535:5543  s_nftIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":5535:5553  s_nftIds.current() */\n    tag_129:\n        /* \"contracts/Marketplace.sol\":5584:5765  Item(... */\n      0x40\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup9\n      and\n      0x20\n      dup1\n      dup5\n      add\n      dup3\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      dup11\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":5675:5685  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":5584:5765  Item(... */\n      0x60\n      dup8\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":5708:5712  this */\n      address\n        /* \"contracts/Marketplace.sol\":5584:5765  Item(... */\n      0x80\n      dup10\n      add\n      dup2\n      dup2\n      mstore\n      0xa0\n      dup11\n      add\n      dup15\n      dup2\n      mstore\n      0x00\n      0xc0\n      dup13\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":5566:5581  Items[newNftId] */\n      dup15\n      dup3\n      mstore\n        /* \"contracts/Marketplace.sol\":5566:5571  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":5566:5581  Items[newNftId] */\n      swap10\n      dup11\n      swap1\n      mstore\n      swap1\n      dup14\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":5566:5765  Items[newNftId] = Item(... */\n      swap12\n      mload\n      dup13\n      sstore\n      swap7\n      mload\n        /* \"contracts/Marketplace.sol\":5584:5765  Item(... */\n      0x01\n        /* \"contracts/Marketplace.sol\":5566:5765  Items[newNftId] = Item(... */\n      dup13\n      add\n      dup1\n      sload\n      swap2\n      dup13\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      swap6\n      mload\n      0x02\n      dup13\n      add\n      sstore\n      swap3\n      mload\n      0x03\n      dup12\n      add\n      dup1\n      sload\n      swap2\n      dup12\n      and\n      swap2\n      dup8\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      mload\n      0x04\n      dup1\n      dup12\n      add\n      dup1\n      sload\n      swap3\n      swap1\n      swap11\n      and\n      swap2\n      swap1\n      swap6\n      and\n      or\n      swap1\n      swap8\n      sstore\n      mload\n      0x05\n      dup9\n      add\n      sstore\n      swap2\n      mload\n      swap6\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      swap6\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap7\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Marketplace.sol\":5778:5848  IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId) */\n      swap4\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":5519:5553  uint newNftId = s_nftIds.current() */\n      swap5\n      swap6\n      pop\n        /* \"contracts/Marketplace.sol\":5584:5765  Item(... */\n      swap4\n        /* \"contracts/Marketplace.sol\":5778:5811  IERC721(_nftAddress).transferFrom */\n      0x23b872dd\n      swap4\n        /* \"contracts/Marketplace.sol\":5778:5848  IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId) */\n      tag_130\n      swap4\n        /* \"contracts/Marketplace.sol\":5675:5685  msg.sender */\n      swap3\n        /* \"contracts/Marketplace.sol\":5708:5712  this */\n      swap2\n        /* \"contracts/Marketplace.sol\":5652:5660  _tokenId */\n      dup10\n      swap2\n        /* \"contracts/Marketplace.sol\":5778:5848  IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId) */\n      add\n      tag_122\n      jump\t// in\n    tag_130:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":5938:5946  _tokenId */\n      dup3\n        /* \"contracts/Marketplace.sol\":5912:5923  _nftAddress */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":5866:6051  ItemList(... */\n      and\n        /* \"contracts/Marketplace.sol\":5889:5897  newNftId */\n      dup3\n        /* \"contracts/Marketplace.sol\":5866:6051  ItemList(... */\n      0xf8551f8be25732324fcda411a126b3c851e038b0ff8d097a3951dded3772f43f\n        /* \"contracts/Marketplace.sol\":5961:5971  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":5994:5998  this */\n      address\n        /* \"contracts/Marketplace.sol\":6014:6020  _price */\n      dup8\n        /* \"contracts/Marketplace.sol\":6035:6040  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":5866:6051  ItemList(... */\n      mload(0x40)\n      tag_134\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Marketplace.sol\":6215:6227  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":6237:6242  owner */\n      sload(0x03)\n        /* \"contracts/Marketplace.sol\":6244:6256  listingPrice */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":6215:6257  tradingToken.transfer(owner, listingPrice) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":6237:6242  owner */\n      swap4\n      dup5\n      and\n        /* \"contracts/Marketplace.sol\":6215:6257  tradingToken.transfer(owner, listingPrice) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":6556:6607   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6623:6641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6616:6650   */\n      mstore\n        /* \"contracts/Marketplace.sol\":6215:6227  tradingToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":6215:6236  tradingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":6529:6547   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":6215:6257  tradingToken.transfer(owner, listingPrice) */\n    tag_136:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_140:\n      pop\n        /* \"contracts/Marketplace.sol\":4771:6286  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_141\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_141:\n        /* \"contracts/Marketplace.sol\":4644:6286  function listItem(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":7586:8962  function resellItem(... */\n    tag_39:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Marketplace.sol\":7729:7743  Items[_itemId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":7729:7734  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":7729:7743  Items[_itemId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":7729:7749  Items[_itemId].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":7753:7763  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":7729:7763  Items[_itemId].owner != msg.sender */\n      eq\n        /* \"contracts/Marketplace.sol\":7725:7877  if (Items[_itemId].owner != msg.sender) {... */\n      tag_146\n      jumpi\n        /* \"contracts/Marketplace.sol\":7787:7865  NFTMarketplace__YouAreNotOwnerOfThisItem(\"You are not the owner of this item\") */\n      mload(0x40)\n      shl(0xe0, 0x47ad5e4f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n        /* \"contracts/Marketplace.sol\":7725:7877  if (Items[_itemId].owner != msg.sender) {... */\n    tag_146:\n        /* \"contracts/Marketplace.sol\":8135:8147  listingPrice */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":8083:8095  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":8083:8132  tradingToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":8106:8116  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":8083:8132  tradingToken.allowance(msg.sender, address(this)) */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":4585:4636   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Marketplace.sol\":8126:8130  this */\n      address\n        /* \"#utility.yul\":4652:4670   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":4645:4705   */\n      mstore\n        /* \"contracts/Marketplace.sol\":8135:8147  listingPrice */\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":8083:8095  tradingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":8083:8105  tradingToken.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":4558:4576   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":8083:8132  tradingToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_151:\n        /* \"contracts/Marketplace.sol\":8083:8147  tradingToken.allowance(msg.sender, address(this)) < listingPrice */\n      lt\n        /* \"contracts/Marketplace.sol\":8079:8247  if (tradingToken.allowance(msg.sender, address(this)) < listingPrice) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"contracts/Marketplace.sol\":8171:8235  NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\") */\n      mload(0x40)\n      shl(0xe1, 0x03f36f1b)\n      dup2\n      mstore\n        /* \"#utility.yul\":5107:5109   */\n      0x20\n        /* \"contracts/Marketplace.sol\":8171:8235  NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5089:5110   */\n      mstore\n        /* \"#utility.yul\":5146:5148   */\n      0x18\n        /* \"#utility.yul\":5126:5144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5119:5149   */\n      mstore\n      shl(0x42, 0x131a5cdd1a5b99c81c1c9a58d9481a5cc81b9bdd081b595d)\n        /* \"#utility.yul\":5165:5183   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5158:5212   */\n      mstore\n        /* \"#utility.yul\":5229:5247   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":8171:8235  NFTMarketplace__ListingPriceIsNotMet(\"Listing price is not met\") */\n      tag_103\n        /* \"#utility.yul\":4905:5253   */\n      jump\n        /* \"contracts/Marketplace.sol\":8079:8247  if (tradingToken.allowance(msg.sender, address(this)) < listingPrice) {... */\n    tag_152:\n        /* \"contracts/Marketplace.sol\":8329:8341  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":8382:8394  listingPrice */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":8329:8395  tradingToken.transferFrom(msg.sender, address(this), listingPrice) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":8329:8341  tradingToken */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/Marketplace.sol\":8329:8354  tradingToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"contracts/Marketplace.sol\":8329:8395  tradingToken.transferFrom(msg.sender, address(this), listingPrice) */\n      tag_154\n      swap3\n        /* \"contracts/Marketplace.sol\":8355:8365  msg.sender */\n      caller\n      swap3\n        /* \"contracts/Marketplace.sol\":8375:8379  this */\n      address\n      swap3\n        /* \"contracts/Marketplace.sol\":8329:8395  tradingToken.transferFrom(msg.sender, address(this), listingPrice) */\n      add\n      tag_122\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_157:\n      pop\n        /* \"contracts/Marketplace.sol\":8428:8433  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":8406:8420  Items[_itemId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":8406:8411  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":8406:8420  Items[_itemId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Marketplace.sol\":8406:8425  Items[_itemId].sold */\n      swap1\n      dup2\n      add\n        /* \"contracts/Marketplace.sol\":8406:8433  Items[_itemId].sold = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":8444:8464  Items[_itemId].price */\n      0x05\n      dup2\n      add\n        /* \"contracts/Marketplace.sol\":8444:8473  Items[_itemId].price = _price */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":8484:8505  Items[_itemId].seller */\n      0x03\n      dup2\n      add\n        /* \"contracts/Marketplace.sol\":8484:8518  Items[_itemId].seller = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":8508:8518  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":8484:8518  Items[_itemId].seller = msg.sender */\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Marketplace.sol\":8529:8549  Items[_itemId].owner */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"contracts/Marketplace.sol\":8529:8565  Items[_itemId].owner = address(this) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n        /* \"contracts/Marketplace.sol\":8560:8564  this */\n      address\n        /* \"contracts/Marketplace.sol\":8529:8565  Items[_itemId].owner = address(this) */\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":8576:8597  s_nftSold.decrement() */\n      tag_158\n      0x02\n        /* \"contracts/Marketplace.sol\":8576:8595  s_nftSold.decrement */\n      tag_159\n        /* \"contracts/Marketplace.sol\":8576:8597  s_nftSold.decrement() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/Marketplace.sol\":8610:8623  uint _tokenId */\n      0x00\n        /* \"contracts/Marketplace.sol\":8626:8640  Items[_itemId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":8626:8631  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":8626:8640  Items[_itemId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":8626:8648  Items[_itemId].tokenId */\n      0x02\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":8659:8729  IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":8659:8692  IERC721(_nftAddress).transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/Marketplace.sol\":8659:8729  IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId) */\n      tag_160\n      swap1\n        /* \"contracts/Marketplace.sol\":8693:8703  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Marketplace.sol\":8713:8717  this */\n      address\n      swap1\n        /* \"contracts/Marketplace.sol\":8626:8648  Items[_itemId].tokenId */\n      dup7\n      swap1\n        /* \"contracts/Marketplace.sol\":8659:8729  IERC721(_nftAddress).transferFrom(msg.sender, address(this), _tokenId) */\n      0x04\n      add\n      tag_122\n      jump\t// in\n    tag_160:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":8771:8779  _tokenId */\n      dup1\n        /* \"contracts/Marketplace.sol\":8758:8769  _nftAddress */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":8747:8822  ItemResell(_nftAddress, _tokenId, msg.sender, address(this), _price, false) */\n      and\n      0x052679d6cf973dff612de0d67ad1642e7b8b401dcb1c41ea86bf35b82ac6bf88\n        /* \"contracts/Marketplace.sol\":8781:8791  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":8801:8805  this */\n      address\n        /* \"contracts/Marketplace.sol\":8808:8814  _price */\n      dup7\n        /* \"contracts/Marketplace.sol\":8816:8821  false */\n      0x00\n        /* \"contracts/Marketplace.sol\":8747:8822  ItemResell(_nftAddress, _tokenId, msg.sender, address(this), _price, false) */\n      mload(0x40)\n      tag_164\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Marketplace.sol\":8891:8903  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":8913:8918  owner */\n      sload(0x03)\n        /* \"contracts/Marketplace.sol\":8920:8932  listingPrice */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Marketplace.sol\":8891:8933  tradingToken.transfer(owner, listingPrice) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":8913:8918  owner */\n      swap4\n      dup5\n      and\n        /* \"contracts/Marketplace.sol\":8891:8933  tradingToken.transfer(owner, listingPrice) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":6556:6607   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6623:6641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6616:6650   */\n      mstore\n        /* \"contracts/Marketplace.sol\":8891:8903  tradingToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":8891:8912  tradingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":6529:6547   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":8891:8933  tradingToken.transfer(owner, listingPrice) */\n      tag_136\n        /* \"#utility.yul\":6374:6656   */\n      jump\n        /* \"contracts/Marketplace.sol\":6311:7563  function buyItem(address _nftAddress, uint256 _itemId)... */\n    tag_43:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_171\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Marketplace.sol\":6422:6435  uint256 price */\n      0x00\n        /* \"contracts/Marketplace.sol\":6438:6452  Items[_itemId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":6438:6443  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":6438:6452  Items[_itemId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":6438:6458  Items[_itemId].price */\n      0x05\n      dup1\n      dup3\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":6487:6509  Items[_itemId].tokenId */\n      0x02\n      dup4\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":6537:6558  Items[_itemId].seller */\n      0x03\n      swap1\n      swap4\n      add\n      sload\n        /* \"contracts/Marketplace.sol\":6745:6757  tradingToken */\n      swap2\n      sload\n        /* \"contracts/Marketplace.sol\":6745:6794  tradingToken.allowance(msg.sender, address(this)) */\n      swap4\n      mload\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":6768:6778  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":6745:6794  tradingToken.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4585:4636   */\n      mstore\n        /* \"contracts/Marketplace.sol\":6788:6792  this */\n      address\n        /* \"#utility.yul\":4652:4670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4645:4705   */\n      mstore\n        /* \"contracts/Marketplace.sol\":6438:6458  Items[_itemId].price */\n      swap1\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":6537:6558  Items[_itemId].seller */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/Marketplace.sol\":6438:6458  Items[_itemId].price */\n      dup6\n      swap3\n        /* \"contracts/Marketplace.sol\":6745:6757  tradingToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":6745:6767  tradingToken.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":4558:4576   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":6745:6794  tradingToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_176:\n        /* \"contracts/Marketplace.sol\":6745:6802  tradingToken.allowance(msg.sender, address(this)) < price */\n      lt\n        /* \"contracts/Marketplace.sol\":6741:6902  if (tradingToken.allowance(msg.sender, address(this)) < price) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/Marketplace.sol\":6826:6890  NFTMarketplace__ListingPriceIsNotMet(\"Listing Price is not met\") */\n      mload(0x40)\n      shl(0xe1, 0x03f36f1b)\n      dup2\n      mstore\n        /* \"#utility.yul\":6863:6865   */\n      0x20\n        /* \"contracts/Marketplace.sol\":6826:6890  NFTMarketplace__ListingPriceIsNotMet(\"Listing Price is not met\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6845:6866   */\n      mstore\n        /* \"#utility.yul\":6902:6904   */\n      0x18\n        /* \"#utility.yul\":6882:6900   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6875:6905   */\n      mstore\n        /* \"#utility.yul\":6941:6967   */\n      0x4c697374696e67205072696365206973206e6f74206d65740000000000000000\n        /* \"#utility.yul\":6921:6939   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6914:6968   */\n      mstore\n        /* \"#utility.yul\":6985:7003   */\n      0x64\n      add\n        /* \"contracts/Marketplace.sol\":6826:6890  NFTMarketplace__ListingPriceIsNotMet(\"Listing Price is not met\") */\n      tag_103\n        /* \"#utility.yul\":6661:7009   */\n      jump\n        /* \"contracts/Marketplace.sol\":6741:6902  if (tradingToken.allowance(msg.sender, address(this)) < price) {... */\n    tag_177:\n        /* \"contracts/Marketplace.sol\":6984:6996  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":6984:7043  tradingToken.transferFrom(msg.sender, address(this), price) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":6984:6996  tradingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace.sol\":6984:7009  tradingToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/Marketplace.sol\":6984:7043  tradingToken.transferFrom(msg.sender, address(this), price) */\n      tag_180\n      swap1\n        /* \"contracts/Marketplace.sol\":7010:7020  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Marketplace.sol\":7030:7034  this */\n      address\n      swap1\n        /* \"contracts/Marketplace.sol\":7037:7042  price */\n      dup9\n      swap1\n        /* \"contracts/Marketplace.sol\":6984:7043  tradingToken.transferFrom(msg.sender, address(this), price) */\n      0x04\n      add\n      tag_122\n      jump\t// in\n    tag_180:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_183:\n      pop\n        /* \"contracts/Marketplace.sol\":7096:7165  IERC721(_nftAddress).transferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":7096:7129  IERC721(_nftAddress).transferFrom */\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/Marketplace.sol\":7096:7165  IERC721(_nftAddress).transferFrom(address(this), msg.sender, tokenId) */\n      tag_184\n      swap1\n        /* \"contracts/Marketplace.sol\":7138:7142  this */\n      address\n      swap1\n        /* \"contracts/Marketplace.sol\":7145:7155  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Marketplace.sol\":7157:7164  tokenId */\n      dup8\n      swap1\n        /* \"contracts/Marketplace.sol\":7096:7165  IERC721(_nftAddress).transferFrom(address(this), msg.sender, tokenId) */\n      0x04\n      add\n      tag_122\n      jump\t// in\n    tag_184:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":7176:7188  tradingToken */\n      sload(0x05)\n        /* \"contracts/Marketplace.sol\":7176:7212  tradingToken.transfer(seller, price) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6574:6606   */\n      dup6\n      dup2\n      and\n        /* \"contracts/Marketplace.sol\":7176:7212  tradingToken.transfer(seller, price) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6556:6607   */\n      mstore\n        /* \"#utility.yul\":6623:6641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6616:6650   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/Marketplace.sol\":7176:7188  tradingToken */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"contracts/Marketplace.sol\":7176:7197  tradingToken.transfer */\n      0xa9059cbb\n      swap2\n      pop\n        /* \"#utility.yul\":6529:6547   */\n      0x44\n      add\n        /* \"contracts/Marketplace.sol\":7176:7212  tradingToken.transfer(seller, price) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_192:\n      pop\n        /* \"contracts/Marketplace.sol\":7274:7288  Items[_itemId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":7274:7279  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":7274:7288  Items[_itemId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Marketplace.sol\":7274:7294  Items[_itemId].owner */\n      0x04\n      dup2\n      add\n        /* \"contracts/Marketplace.sol\":7274:7307  Items[_itemId].owner = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/Marketplace.sol\":7297:7307  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":7274:7307  Items[_itemId].owner = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":7318:7337  Items[_itemId].sold */\n      add\n        /* \"contracts/Marketplace.sol\":7318:7344  Items[_itemId].sold = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Marketplace.sol\":7274:7307  Items[_itemId].owner = msg.sender */\n      0x01\n        /* \"contracts/Marketplace.sol\":7318:7344  Items[_itemId].sold = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace.sol\":7355:7376  s_nftSold.increment() */\n      tag_193\n        /* \"contracts/Marketplace.sol\":7355:7364  s_nftSold */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Marketplace.sol\":7355:7376  s_nftSold.increment() */\n    tag_193:\n        /* \"contracts/Marketplace.sol\":7445:7452  tokenId */\n      dup2\n        /* \"contracts/Marketplace.sol\":7419:7430  _nftAddress */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace.sol\":7394:7555  ItemBought(... */\n      and\n      0x9a9f9faf9d964b2fb1888cdf05202baf5a1b99d45f7afd6a5e062ac544b3c150\n        /* \"contracts/Marketplace.sol\":7475:7479  this */\n      address\n        /* \"contracts/Marketplace.sol\":7495:7505  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":7520:7525  price */\n      dup8\n        /* \"contracts/Marketplace.sol\":7540:7544  true */\n      0x01\n        /* \"contracts/Marketplace.sol\":7394:7555  ItemBought(... */\n      mload(0x40)\n      tag_194\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Marketplace.sol\":6411:7563  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_195\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_195:\n        /* \"contracts/Marketplace.sol\":6311:7563  function buyItem(address _nftAddress, uint256 _itemId)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":4497:4615  function getParticularItem(uint256 _itemId) external view returns(Item memory){... */\n    tag_46:\n        /* \"contracts/Marketplace.sol\":4563:4574  Item memory */\n      tag_196\n      tag_66\n      jump\t// in\n    tag_196:\n      pop\n        /* \"contracts/Marketplace.sol\":4593:4607  Items[_itemId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace.sol\":4593:4598  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":4593:4607  Items[_itemId] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":4586:4607  return Items[_itemId] */\n      dup4\n      mload\n      0xe0\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap5\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup3\n      and\n      0x60\n      dup6\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap2\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xc0\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/Marketplace.sol\":4497:4615  function getParticularItem(uint256 _itemId) external view returns(Item memory){... */\n      jump\t// out\n        /* \"contracts/Marketplace.sol\":3704:4489  function getSellerListedItems() external view returns (Item[] memory) {... */\n    tag_50:\n        /* \"contracts/Marketplace.sol\":3759:3772  Item[] memory */\n      0x60\n        /* \"contracts/Marketplace.sol\":3785:3806  uint totalListedItems */\n      0x00\n        /* \"contracts/Marketplace.sol\":3809:3827  s_nftIds.current() */\n      tag_199\n        /* \"contracts/Marketplace.sol\":3809:3817  s_nftIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace.sol\":3809:3827  s_nftIds.current() */\n    tag_199:\n        /* \"contracts/Marketplace.sol\":3785:3827  uint totalListedItems = s_nftIds.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":3838:3852  uint itemCount */\n      0x00\n        /* \"contracts/Marketplace.sol\":3867:3884  uint currentIndex */\n      dup1\n        /* \"contracts/Marketplace.sol\":3906:3915  uint256 i */\n      0x00\n        /* \"contracts/Marketplace.sol\":3901:4062  for (uint256 i = 0; i < totalListedItems; i++) {... */\n    tag_200:\n        /* \"contracts/Marketplace.sol\":3925:3941  totalListedItems */\n      dup4\n        /* \"contracts/Marketplace.sol\":3921:3922  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":3921:3941  i < totalListedItems */\n      lt\n        /* \"contracts/Marketplace.sol\":3901:4062  for (uint256 i = 0; i < totalListedItems; i++) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/Marketplace.sol\":3990:4000  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":3967:3972  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":3967:3979  Items[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":3973:3978  i + 1 */\n      tag_203\n        /* \"contracts/Marketplace.sol\":3973:3974  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":3977:3978  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":3973:3978  i + 1 */\n      tag_71\n      jump\t// in\n    tag_203:\n        /* \"contracts/Marketplace.sol\":3967:3979  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":3967:3986  Items[i + 1].seller */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":3967:4000  Items[i + 1].seller == msg.sender */\n      sub\n        /* \"contracts/Marketplace.sol\":3963:4051  if (Items[i + 1].seller == msg.sender) {... */\n      tag_204\n      jumpi\n        /* \"contracts/Marketplace.sol\":4021:4035  itemCount += 1 */\n      tag_205\n        /* \"contracts/Marketplace.sol\":4034:4035  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":4021:4035  itemCount += 1 */\n      dup5\n      tag_71\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n        /* \"contracts/Marketplace.sol\":3963:4051  if (Items[i + 1].seller == msg.sender) {... */\n    tag_204:\n        /* \"contracts/Marketplace.sol\":3943:3946  i++ */\n      0x01\n      add\n        /* \"contracts/Marketplace.sol\":3901:4062  for (uint256 i = 0; i < totalListedItems; i++) {... */\n      jump(tag_200)\n    tag_201:\n      pop\n        /* \"contracts/Marketplace.sol\":4074:4093  Item[] memory items */\n      0x00\n        /* \"contracts/Marketplace.sol\":4107:4116  itemCount */\n      dup3\n        /* \"contracts/Marketplace.sol\":4096:4117  new Item[](itemCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_207\n      jumpi\n      tag_207\n      tag_62\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup2\n      0x20\n      add\n    tag_209:\n      tag_210\n      tag_66\n      jump\t// in\n    tag_210:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_209\n      jumpi\n      swap1\n      pop\n    tag_208:\n      pop\n        /* \"contracts/Marketplace.sol\":4074:4117  Item[] memory items = new Item[](itemCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace.sol\":4133:4139  uint i */\n      0x00\n        /* \"contracts/Marketplace.sol\":4128:4457  for (uint i = 0; i < totalListedItems; i++) {... */\n    tag_211:\n        /* \"contracts/Marketplace.sol\":4149:4165  totalListedItems */\n      dup5\n        /* \"contracts/Marketplace.sol\":4145:4146  i */\n      dup2\n        /* \"contracts/Marketplace.sol\":4145:4165  i < totalListedItems */\n      lt\n        /* \"contracts/Marketplace.sol\":4128:4457  for (uint i = 0; i < totalListedItems; i++) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/Marketplace.sol\":4214:4224  msg.sender */\n      caller\n        /* \"contracts/Marketplace.sol\":4191:4196  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":4191:4203  Items[i + 1] */\n      0x00\n        /* \"contracts/Marketplace.sol\":4197:4202  i + 1 */\n      tag_214\n        /* \"contracts/Marketplace.sol\":4197:4198  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":4201:4202  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":4197:4202  i + 1 */\n      tag_71\n      jump\t// in\n    tag_214:\n        /* \"contracts/Marketplace.sol\":4191:4203  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace.sol\":4191:4210  Items[i + 1].seller */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace.sol\":4191:4224  Items[i + 1].seller == msg.sender */\n      sub\n        /* \"contracts/Marketplace.sol\":4187:4446  if (Items[i + 1].seller == msg.sender) {... */\n      tag_215\n      jumpi\n        /* \"contracts/Marketplace.sol\":4245:4259  uint currentId */\n      0x00\n        /* \"contracts/Marketplace.sol\":4262:4267  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":4245:4259  uint currentId */\n      dup2\n        /* \"contracts/Marketplace.sol\":4268:4273  i + 1 */\n      tag_216\n        /* \"contracts/Marketplace.sol\":4268:4269  i */\n      dup5\n        /* \"contracts/Marketplace.sol\":4272:4273  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":4268:4273  i + 1 */\n      tag_71\n      jump\t// in\n    tag_216:\n        /* \"contracts/Marketplace.sol\":4262:4274  Items[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Marketplace.sol\":4262:4281  Items[i + 1].itemId */\n      sload\n        /* \"contracts/Marketplace.sol\":4326:4342  Items[currentId] */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/Marketplace.sol\":4326:4331  Items */\n      0x06\n        /* \"contracts/Marketplace.sol\":4326:4342  Items[currentId] */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Marketplace.sol\":4300:4342  Item memory currentItem = Items[currentId] */\n      dup4\n      mload\n      0xe0\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap7\n      dup3\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap5\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup6\n      and\n      0x60\n      dup6\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap5\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup5\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      swap3\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"contracts/Marketplace.sol\":4361:4380  items[currentIndex] */\n      dup5\n      mload\n        /* \"contracts/Marketplace.sol\":4262:4281  Items[i + 1].itemId */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Marketplace.sol\":4300:4342  Item memory currentItem = Items[currentId] */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Marketplace.sol\":4361:4366  items */\n      dup6\n      swap1\n        /* \"contracts/Marketplace.sol\":4367:4379  currentIndex */\n      dup8\n      swap1\n        /* \"contracts/Marketplace.sol\":4361:4380  items[currentIndex] */\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_218\n      tag_76\n      jump\t// in\n    tag_218:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Marketplace.sol\":4361:4394  items[currentIndex] = currentItem */\n      mstore\n        /* \"contracts/Marketplace.sol\":4413:4430  currentIndex += 1 */\n      tag_219\n        /* \"contracts/Marketplace.sol\":4429:4430  1 */\n      0x01\n        /* \"contracts/Marketplace.sol\":4413:4430  currentIndex += 1 */\n      dup7\n      tag_71\n      jump\t// in\n    tag_219:\n      swap5\n      pop\n        /* \"contracts/Marketplace.sol\":4226:4446  {... */\n      pop\n      pop\n        /* \"contracts/Marketplace.sol\":4187:4446  if (Items[i + 1].seller == msg.sender) {... */\n    tag_215:\n        /* \"contracts/Marketplace.sol\":4167:4170  i++ */\n      0x01\n      add\n        /* \"contracts/Marketplace.sol\":4128:4457  for (uint i = 0; i < totalListedItems; i++) {... */\n      jump(tag_211)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7495:7497   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7477:7498   */\n      mstore\n        /* \"#utility.yul\":7534:7536   */\n      0x1f\n        /* \"#utility.yul\":7514:7532   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7507:7537   */\n      mstore\n        /* \"#utility.yul\":7573:7606   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7553:7571   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7546:7607   */\n      mstore\n        /* \"#utility.yul\":7624:7642   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_103\n        /* \"#utility.yul\":7293:7648   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_222:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1167  counter._value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1194  value > 0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7855:7857   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7837:7858   */\n      mstore\n        /* \"#utility.yul\":7894:7896   */\n      0x1b\n        /* \"#utility.yul\":7874:7892   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7867:7897   */\n      mstore\n        /* \"#utility.yul\":7933:7962   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":7913:7931   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7906:7963   */\n      mstore\n        /* \"#utility.yul\":7980:7998   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_103\n        /* \"#utility.yul\":7653:8004   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n    tag_228:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1286  value - 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      jump\t// out\n    tag_66:\n      0x40\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xc0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":418:937   */\n    tag_231:\n        /* \"#utility.yul\":488:500   */\n      dup1\n      mload\n        /* \"#utility.yul\":476:501   */\n      dup3\n      mstore\n        /* \"#utility.yul\":554:558   */\n      0x20\n        /* \"#utility.yul\":543:559   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":537:560   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":533:582   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":517:531   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":510:583   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":632:636   */\n      0x40\n        /* \"#utility.yul\":621:637   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":615:638   */\n      mload\n        /* \"#utility.yul\":599:613   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":592:639   */\n      mstore\n        /* \"#utility.yul\":692:696   */\n      0x60\n        /* \"#utility.yul\":681:697   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":675:698   */\n      mload\n        /* \"#utility.yul\":671:720   */\n      dup3\n      and\n        /* \"#utility.yul\":655:669   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":648:721   */\n      mstore\n        /* \"#utility.yul\":774:778   */\n      0x80\n        /* \"#utility.yul\":763:779   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":757:780   */\n      mload\n        /* \"#utility.yul\":753:802   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":737:751   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":730:803   */\n      mstore\n        /* \"#utility.yul\":570:573   */\n      0xa0\n        /* \"#utility.yul\":841:857   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":835:858   */\n      mload\n        /* \"#utility.yul\":819:833   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":812:859   */\n      mstore\n        /* \"#utility.yul\":922:926   */\n      0xc0\n        /* \"#utility.yul\":911:927   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":905:928   */\n      mload\n        /* \"#utility.yul\":898:929   */\n      iszero\n        /* \"#utility.yul\":891:930   */\n      iszero\n        /* \"#utility.yul\":875:889   */\n      swap2\n      add\n        /* \"#utility.yul\":868:931   */\n      mstore\n        /* \"#utility.yul\":418:937   */\n      jump\t// out\n        /* \"#utility.yul\":942:1615   */\n    tag_25:\n        /* \"#utility.yul\":1176:1178   */\n      0x20\n        /* \"#utility.yul\":1188:1209   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1258:1271   */\n      dup3\n      mload\n        /* \"#utility.yul\":1161:1179   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1280:1302   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1128:1132   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1359:1374   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1333:1335   */\n      0x40\n        /* \"#utility.yul\":1318:1336   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1128:1132   */\n      dup4\n        /* \"#utility.yul\":1402:1589   */\n    tag_239:\n        /* \"#utility.yul\":1416:1422   */\n      dup2\n        /* \"#utility.yul\":1413:1414   */\n      dup2\n        /* \"#utility.yul\":1410:1423   */\n      lt\n        /* \"#utility.yul\":1402:1589   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1465:1507   */\n      tag_242\n        /* \"#utility.yul\":1503:1506   */\n      dup4\n        /* \"#utility.yul\":1494:1500   */\n      dup6\n        /* \"#utility.yul\":1488:1501   */\n      mload\n        /* \"#utility.yul\":1465:1507   */\n      tag_231\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1576:1578   */\n      0x20\n        /* \"#utility.yul\":1564:1579   */\n      swap4\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1536:1540   */\n      0xe0\n        /* \"#utility.yul\":1527:1541   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1438:1439   */\n      0x01\n        /* \"#utility.yul\":1431:1440   */\n      add\n        /* \"#utility.yul\":1402:1589   */\n      jump(tag_239)\n    tag_241:\n      pop\n        /* \"#utility.yul\":1606:1609   */\n      swap1\n      swap6\n        /* \"#utility.yul\":942:1615   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1846   */\n    tag_31:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1720:1729   */\n      dup3\n        /* \"#utility.yul\":1711:1718   */\n      dup5\n        /* \"#utility.yul\":1707:1730   */\n      sub\n        /* \"#utility.yul\":1703:1735   */\n      slt\n        /* \"#utility.yul\":1700:1752   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1748:1749   */\n      0x00\n        /* \"#utility.yul\":1745:1746   */\n      dup1\n        /* \"#utility.yul\":1738:1750   */\n      revert\n        /* \"#utility.yul\":1700:1752   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":1793:1816   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1620:1846   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1851:2024   */\n    tag_232:\n        /* \"#utility.yul\":1919:1939   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1968:1999   */\n      dup2\n      and\n        /* \"#utility.yul\":1958:2000   */\n      dup2\n      eq\n        /* \"#utility.yul\":1948:2018   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2014:2015   */\n      0x00\n        /* \"#utility.yul\":2011:2012   */\n      dup1\n        /* \"#utility.yul\":2004:2016   */\n      revert\n        /* \"#utility.yul\":1948:2018   */\n    tag_246:\n        /* \"#utility.yul\":1851:2024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2449   */\n    tag_35:\n        /* \"#utility.yul\":2106:2112   */\n      0x00\n        /* \"#utility.yul\":2114:2120   */\n      dup1\n        /* \"#utility.yul\":2122:2128   */\n      0x00\n        /* \"#utility.yul\":2175:2177   */\n      0x60\n        /* \"#utility.yul\":2163:2172   */\n      dup5\n        /* \"#utility.yul\":2154:2161   */\n      dup7\n        /* \"#utility.yul\":2150:2173   */\n      sub\n        /* \"#utility.yul\":2146:2178   */\n      slt\n        /* \"#utility.yul\":2143:2195   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2191:2192   */\n      0x00\n        /* \"#utility.yul\":2188:2189   */\n      dup1\n        /* \"#utility.yul\":2181:2193   */\n      revert\n        /* \"#utility.yul\":2143:2195   */\n    tag_248:\n        /* \"#utility.yul\":2214:2243   */\n      tag_249\n        /* \"#utility.yul\":2233:2242   */\n      dup5\n        /* \"#utility.yul\":2214:2243   */\n      tag_232\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2204:2243   */\n      swap6\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      dup6\n      add\n        /* \"#utility.yul\":2284:2316   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2398:2416   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2385:2417   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2029:2449   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2454:2754   */\n    tag_42:\n        /* \"#utility.yul\":2522:2528   */\n      0x00\n        /* \"#utility.yul\":2530:2536   */\n      dup1\n        /* \"#utility.yul\":2583:2585   */\n      0x40\n        /* \"#utility.yul\":2571:2580   */\n      dup4\n        /* \"#utility.yul\":2562:2569   */\n      dup6\n        /* \"#utility.yul\":2558:2581   */\n      sub\n        /* \"#utility.yul\":2554:2586   */\n      slt\n        /* \"#utility.yul\":2551:2603   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2599:2600   */\n      0x00\n        /* \"#utility.yul\":2596:2597   */\n      dup1\n        /* \"#utility.yul\":2589:2601   */\n      revert\n        /* \"#utility.yul\":2551:2603   */\n    tag_251:\n        /* \"#utility.yul\":2622:2651   */\n      tag_252\n        /* \"#utility.yul\":2641:2650   */\n      dup4\n        /* \"#utility.yul\":2622:2651   */\n      tag_232\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2612:2651   */\n      swap5\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2692:2724   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2454:2754   */\n      jump\t// out\n        /* \"#utility.yul\":2759:2997   */\n    tag_48:\n        /* \"#utility.yul\":2937:2940   */\n      0xe0\n        /* \"#utility.yul\":2922:2941   */\n      dup2\n      add\n        /* \"#utility.yul\":2950:2991   */\n      tag_254\n        /* \"#utility.yul\":2926:2935   */\n      dup3\n        /* \"#utility.yul\":2973:2979   */\n      dup5\n        /* \"#utility.yul\":2950:2991   */\n      tag_231\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2759:2997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3002:3129   */\n    tag_233:\n        /* \"#utility.yul\":3063:3073   */\n      0x4e487b71\n        /* \"#utility.yul\":3058:3061   */\n      0xe0\n        /* \"#utility.yul\":3054:3074   */\n      shl\n        /* \"#utility.yul\":3051:3052   */\n      0x00\n        /* \"#utility.yul\":3044:3075   */\n      mstore\n        /* \"#utility.yul\":3094:3098   */\n      0x11\n        /* \"#utility.yul\":3091:3092   */\n      0x04\n        /* \"#utility.yul\":3084:3099   */\n      mstore\n        /* \"#utility.yul\":3118:3122   */\n      0x24\n        /* \"#utility.yul\":3115:3116   */\n      0x00\n        /* \"#utility.yul\":3108:3123   */\n      revert\n        /* \"#utility.yul\":3134:3262   */\n    tag_59:\n        /* \"#utility.yul\":3201:3210   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3222:3233   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3219:3256   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3236:3254   */\n      tag_254\n      tag_233\n      jump\t// in\n        /* \"#utility.yul\":3267:3394   */\n    tag_62:\n        /* \"#utility.yul\":3328:3338   */\n      0x4e487b71\n        /* \"#utility.yul\":3323:3326   */\n      0xe0\n        /* \"#utility.yul\":3319:3339   */\n      shl\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3309:3340   */\n      mstore\n        /* \"#utility.yul\":3359:3363   */\n      0x41\n        /* \"#utility.yul\":3356:3357   */\n      0x04\n        /* \"#utility.yul\":3349:3364   */\n      mstore\n        /* \"#utility.yul\":3383:3387   */\n      0x24\n        /* \"#utility.yul\":3380:3381   */\n      0x00\n        /* \"#utility.yul\":3373:3388   */\n      revert\n        /* \"#utility.yul\":3399:3524   */\n    tag_71:\n        /* \"#utility.yul\":3464:3473   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3485:3495   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3482:3518   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3498:3516   */\n      tag_254\n      tag_233\n      jump\t// in\n        /* \"#utility.yul\":3529:3656   */\n    tag_76:\n        /* \"#utility.yul\":3590:3600   */\n      0x4e487b71\n        /* \"#utility.yul\":3585:3588   */\n      0xe0\n        /* \"#utility.yul\":3581:3601   */\n      shl\n        /* \"#utility.yul\":3578:3579   */\n      0x00\n        /* \"#utility.yul\":3571:3602   */\n      mstore\n        /* \"#utility.yul\":3621:3625   */\n      0x32\n        /* \"#utility.yul\":3618:3619   */\n      0x04\n        /* \"#utility.yul\":3611:3626   */\n      mstore\n        /* \"#utility.yul\":3645:3649   */\n      0x24\n        /* \"#utility.yul\":3642:3643   */\n      0x00\n        /* \"#utility.yul\":3635:3650   */\n      revert\n        /* \"#utility.yul\":3661:4059   */\n    tag_104:\n        /* \"#utility.yul\":3863:3865   */\n      0x20\n        /* \"#utility.yul\":3845:3866   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3902:3904   */\n      0x22\n        /* \"#utility.yul\":3882:3900   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3875:3905   */\n      mstore\n        /* \"#utility.yul\":3941:3975   */\n      0x596f7520617265206e6f7420746865206f776e6572206f662074686973206974\n        /* \"#utility.yul\":3936:3938   */\n      0x40\n        /* \"#utility.yul\":3921:3939   */\n      dup3\n      add\n        /* \"#utility.yul\":3914:3976   */\n      mstore\n      shl(0xf0, 0x656d)\n        /* \"#utility.yul\":4007:4009   */\n      0x60\n        /* \"#utility.yul\":3992:4010   */\n      dup3\n      add\n        /* \"#utility.yul\":3985:4017   */\n      mstore\n        /* \"#utility.yul\":4049:4052   */\n      0x80\n        /* \"#utility.yul\":4034:4053   */\n      add\n      swap1\n        /* \"#utility.yul\":3661:4059   */\n      jump\t// out\n        /* \"#utility.yul\":4716:4900   */\n    tag_117:\n        /* \"#utility.yul\":4786:4792   */\n      0x00\n        /* \"#utility.yul\":4839:4841   */\n      0x20\n        /* \"#utility.yul\":4827:4836   */\n      dup3\n        /* \"#utility.yul\":4818:4825   */\n      dup5\n        /* \"#utility.yul\":4814:4837   */\n      sub\n        /* \"#utility.yul\":4810:4842   */\n      slt\n        /* \"#utility.yul\":4807:4859   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4855:4856   */\n      0x00\n        /* \"#utility.yul\":4852:4853   */\n      dup1\n        /* \"#utility.yul\":4845:4857   */\n      revert\n        /* \"#utility.yul\":4807:4859   */\n    tag_268:\n      pop\n        /* \"#utility.yul\":4878:4894   */\n      mload\n      swap2\n        /* \"#utility.yul\":4716:4900   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5258:5629   */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5478:5510   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":5460:5511   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5547:5579   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"#utility.yul\":5527:5545   */\n      dup3\n      add\n        /* \"#utility.yul\":5520:5580   */\n      mstore\n        /* \"#utility.yul\":5611:5613   */\n      0x40\n        /* \"#utility.yul\":5596:5614   */\n      dup2\n      add\n        /* \"#utility.yul\":5589:5623   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5448:5450   */\n      0x60\n        /* \"#utility.yul\":5433:5451   */\n      add\n      swap1\n        /* \"#utility.yul\":5258:5629   */\n      jump\t// out\n        /* \"#utility.yul\":5634:5911   */\n    tag_126:\n        /* \"#utility.yul\":5701:5707   */\n      0x00\n        /* \"#utility.yul\":5754:5756   */\n      0x20\n        /* \"#utility.yul\":5742:5751   */\n      dup3\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5729:5752   */\n      sub\n        /* \"#utility.yul\":5725:5757   */\n      slt\n        /* \"#utility.yul\":5722:5774   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5767:5768   */\n      dup1\n        /* \"#utility.yul\":5760:5772   */\n      revert\n        /* \"#utility.yul\":5722:5774   */\n    tag_272:\n        /* \"#utility.yul\":5802:5811   */\n      dup2\n        /* \"#utility.yul\":5796:5812   */\n      mload\n        /* \"#utility.yul\":5855:5860   */\n      dup1\n        /* \"#utility.yul\":5848:5861   */\n      iszero\n        /* \"#utility.yul\":5841:5862   */\n      iszero\n        /* \"#utility.yul\":5834:5839   */\n      dup2\n        /* \"#utility.yul\":5831:5863   */\n      eq\n        /* \"#utility.yul\":5821:5881   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5877:5878   */\n      0x00\n        /* \"#utility.yul\":5874:5875   */\n      dup1\n        /* \"#utility.yul\":5867:5879   */\n      revert\n        /* \"#utility.yul\":5821:5881   */\n    tag_273:\n        /* \"#utility.yul\":5900:5905   */\n      swap4\n        /* \"#utility.yul\":5634:5911   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5916:6369   */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6159:6191   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":6141:6192   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6228:6260   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6223:6225   */\n      0x20\n        /* \"#utility.yul\":6208:6226   */\n      dup4\n      add\n        /* \"#utility.yul\":6201:6261   */\n      mstore\n        /* \"#utility.yul\":6292:6294   */\n      0x40\n        /* \"#utility.yul\":6277:6295   */\n      dup3\n      add\n        /* \"#utility.yul\":6270:6304   */\n      mstore\n        /* \"#utility.yul\":6347:6361   */\n      swap1\n      iszero\n        /* \"#utility.yul\":6340:6362   */\n      iszero\n        /* \"#utility.yul\":6335:6337   */\n      0x60\n        /* \"#utility.yul\":6320:6338   */\n      dup3\n      add\n        /* \"#utility.yul\":6313:6363   */\n      mstore\n        /* \"#utility.yul\":6128:6131   */\n      0x80\n        /* \"#utility.yul\":6113:6132   */\n      add\n      swap1\n        /* \"#utility.yul\":5916:6369   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be722109414db35402ceb552184be9bf3575d6917b1a0f07aecd414452fbb34064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3097": {
									"entryPoint": null,
									"id": 3097,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:16",
										"nodeType": "YulBlock",
										"src": "0:306:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:16",
													"nodeType": "YulBlock",
													"src": "95:209:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:16",
																"nodeType": "YulBlock",
																"src": "141:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:16",
																					"nodeType": "YulLiteral",
																					"src": "150:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:16",
																					"nodeType": "YulLiteral",
																					"src": "153:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:16"
																			},
																			"nativeSrc": "143:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:16"
																		},
																		"nativeSrc": "143:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:16"
																		},
																		"nativeSrc": "112:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:16",
																		"nodeType": "YulLiteral",
																		"src": "137:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:16"
																},
																"nativeSrc": "108:32:16",
																"nodeType": "YulFunctionCall",
																"src": "108:32:16"
															},
															"nativeSrc": "105:52:16",
															"nodeType": "YulIf",
															"src": "105:52:16"
														},
														{
															"nativeSrc": "166:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:16"
																},
																"nativeSrc": "179:16:16",
																"nodeType": "YulFunctionCall",
																"src": "179:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:16",
																	"nodeType": "YulTypedName",
																	"src": "170:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:16",
																"nodeType": "YulBlock",
																"src": "258:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:16",
																					"nodeType": "YulLiteral",
																					"src": "267:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:16",
																					"nodeType": "YulLiteral",
																					"src": "270:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:16"
																			},
																			"nativeSrc": "260:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:16"
																		},
																		"nativeSrc": "260:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:16",
																										"nodeType": "YulLiteral",
																										"src": "243:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:16",
																										"nodeType": "YulLiteral",
																										"src": "248:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:16"
																								},
																								"nativeSrc": "239:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:16",
																								"nodeType": "YulLiteral",
																								"src": "252:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:16"
																						},
																						"nativeSrc": "235:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:16"
																				},
																				"nativeSrc": "224:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:16"
																		},
																		"nativeSrc": "214:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:16"
																},
																"nativeSrc": "207:50:16",
																"nodeType": "YulFunctionCall",
																"src": "207:50:16"
															},
															"nativeSrc": "204:70:16",
															"nodeType": "YulIf",
															"src": "204:70:16"
														},
														{
															"nativeSrc": "283:15:16",
															"nodeType": "YulAssignment",
															"src": "283:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:16",
																"nodeType": "YulIdentifier",
																"src": "293:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:16",
														"nodeType": "YulTypedName",
														"src": "61:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:16",
														"nodeType": "YulTypedName",
														"src": "72:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:16",
														"nodeType": "YulTypedName",
														"src": "84:6:16",
														"type": ""
													}
												],
												"src": "14:290:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526658d15e176280006004553480156019575f80fd5b506040516114e73803806114e78339810160408190526036916067565b60015f55600580546001600160a01b039092166001600160a01b031992831617905560038054909116331790556092565b5f602082840312156076575f80fd5b81516001600160a01b0381168114608b575f80fd5b9392505050565b6114488061009f5f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806389bfd38f1161006357806389bfd38f146101125780638f0af0f9146101255780639f37092a14610138578063f2a7a2b41461014b578063f9319c531461016b575f80fd5b806312e855851461009f5780632ad8a220146100b55780633b1b1ad0146100e05780634d757a1c146100f55780635a599da8146100fd575b5f80fd5b6004546040519081526020015b60405180910390f35b6005546100c8906001600160a01b031681565b6040516001600160a01b0390911681526020016100ac565b6100e8610173565b6040516100ac91906111f9565b6100e8610300565b61011061010b366004611246565b6104bd565b005b610110610120366004611278565b61057c565b610110610133366004611278565b6108fa565b6101106101463660046112a8565b610bb9565b61015e610159366004611246565b610e83565b6040516100ac91906112d0565b6100e8610efe565b60605f61017f60015490565b90505f61018b60025490565b60015461019891906112f8565b90505f808267ffffffffffffffff8111156101b5576101b561130b565b6040519080825280602002602001820160405280156101ee57816020015b6101db611168565b8152602001906001900390816101d35790505b5090505f5b848110156102f7573060065f61020a84600161131f565b815260208101919091526040015f20600401546001600160a01b0316036102ef575f60068161023a84600161131f565b815260208082019290925260409081015f90812054808252600680855291839020835160e0810185528154815260018201546001600160a01b039081169682019690965260028201549481019490945260038101548516606085015260048101549094166080840152600584015460a084015292015460ff16151560c082015284519192509081908590879081106102d4576102d4611332565b60209081029190910101526102ea60018661131f565b945050505b6001016101f3565b50949350505050565b60605f61030c60015490565b90505f805f5b83811015610360573360065f61032984600161131f565b815260208101919091526040015f20600401546001600160a01b0316036103585761035560018461131f565b92505b600101610312565b505f8267ffffffffffffffff81111561037b5761037b61130b565b6040519080825280602002602001820160405280156103b457816020015b6103a1611168565b8152602001906001900390816103995790505b5090505f5b848110156102f7573360065f6103d084600161131f565b815260208101919091526040015f20600401546001600160a01b0316036104b5575f60068161040084600161131f565b815260208082019290925260409081015f90812054808252600680855291839020835160e0810185528154815260018201546001600160a01b039081169682019690965260028201549481019490945260038101548516606085015260048101549094166080840152600584015460a084015292015460ff16151560c0820152845191925090819085908790811061049a5761049a611332565b60209081029190910101526104b060018661131f565b945050505b6001016103b9565b5f818152600660205260409020600301546001600160a01b031633148015906104ff57505f818152600660205260409020600401546001600160a01b03163314155b15610526576040516347ad5e4f60e01b815260040161051d90611346565b60405180910390fd5b5f90815260066020819052604082208281556001810180546001600160a01b031990811690915560028201849055600382018054821690556004820180549091169055600581019290925501805460ff19169055565b6105846110bb565b805f036105c957604051630cc2970160e11b81526020600482015260126024820152714974656d205072696365206973207a65726f60701b604482015260640161051d565b60048054600554604051636eb1769f60e11b8152339381019390935230602484015290916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa15801561061d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106419190611388565b101561068b576040516303f36f1b60e11b8152602060048201526018602482015277131a5cdd1a5b99c81c1c9a58d9481a5cc81b9bdd081b595d60421b604482015260640161051d565b600554600480546040516323b872dd60e01b81526001600160a01b03909316926323b872dd926106bf92339230920161139f565b6020604051808303815f875af11580156106db573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ff91906113c3565b5061070e600180546001019055565b5f61071860015490565b6040805160e0810182528281526001600160a01b0380881660208084018281528486018a81523360608701818152306080890181815260a08a018e81525f60c08c018181528e82526006998a9052908d90209b518c55965160018c018054918c166001600160a01b0319928316179055955160028c0155925160038b018054918b16918716919091179055516004808b01805492909a169190951617909755516005880155915195909201805495151560ff199096169590951790945593516323b872dd60e01b8152949550936323b872dd936107f993929189910161139f565b5f604051808303815f87803b158015610810575f80fd5b505af1158015610822573d5f803e3d5ffd5b5050505082846001600160a01b0316827ff8551f8be25732324fcda411a126b3c851e038b0ff8d097a3951dded3772f43f3330875f60405161086794939291906113e9565b60405180910390a46005546003546004805460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044015b6020604051808303815f875af11580156108c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ea91906113c3565b50506108f560015f55565b505050565b6109026110bb565b5f828152600660205260409020600401546001600160a01b0316331461093b576040516347ad5e4f60e01b815260040161051d90611346565b60048054600554604051636eb1769f60e11b8152339381019390935230602484015290916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa15801561098f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b39190611388565b10156109fd576040516303f36f1b60e11b8152602060048201526018602482015277131a5cdd1a5b99c81c1c9a58d9481a5cc81b9bdd081b595d60421b604482015260640161051d565b600554600480546040516323b872dd60e01b81526001600160a01b03909316926323b872dd92610a3192339230920161139f565b6020604051808303815f875af1158015610a4d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a7191906113c3565b505f828152600660208190526040909120908101805460ff19169055600581018290556003810180546001600160a01b031990811633179091556004909101805490911630179055610ac36002611112565b5f82815260066020526040908190206002015490516323b872dd60e01b81526001600160a01b038516906323b872dd90610b059033903090869060040161139f565b5f604051808303815f87803b158015610b1c575f80fd5b505af1158015610b2e573d5f803e3d5ffd5b5050505080846001600160a01b03167f052679d6cf973dff612de0d67ad1642e7b8b401dcb1c41ea86bf35b82ac6bf883330865f604051610b7294939291906113e9565b60405180910390a36005546003546004805460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044016108aa565b610bc16110bb565b5f8181526006602052604090819020600580820154600283015460039093015491549351636eb1769f60e11b815233600482015230602482015290936001600160a01b0392831692859291169063dd62ed3e90604401602060405180830381865afa158015610c32573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c569190611388565b1015610ca5576040516303f36f1b60e11b815260206004820152601860248201527f4c697374696e67205072696365206973206e6f74206d65740000000000000000604482015260640161051d565b6005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610cd99033903090889060040161139f565b6020604051808303815f875af1158015610cf5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d1991906113c3565b506040516323b872dd60e01b81526001600160a01b038616906323b872dd90610d4a9030903390879060040161139f565b5f604051808303815f87803b158015610d61575f80fd5b505af1158015610d73573d5f803e3d5ffd5b505060055460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201889052909116925063a9059cbb91506044016020604051808303815f875af1158015610dc7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610deb91906113c3565b505f8481526006602081905260409091206004810180546001600160a01b0319163317905501805460ff19166001179055610e2a600280546001019055565b81856001600160a01b03167f9a9f9faf9d964b2fb1888cdf05202baf5a1b99d45f7afd6a5e062ac544b3c1503033876001604051610e6b94939291906113e9565b60405180910390a3505050610e7f60015f55565b5050565b610e8b611168565b505f90815260066020818152604092839020835160e0810185528154815260018201546001600160a01b039081169382019390935260028201549481019490945260038101548216606085015260048101549091166080840152600581015460a0840152015460ff16151560c082015290565b60605f610f0a60015490565b90505f805f5b83811015610f5e573360065f610f2784600161131f565b815260208101919091526040015f20600301546001600160a01b031603610f5657610f5360018461131f565b92505b600101610f10565b505f8267ffffffffffffffff811115610f7957610f7961130b565b604051908082528060200260200182016040528015610fb257816020015b610f9f611168565b815260200190600190039081610f975790505b5090505f5b848110156102f7573360065f610fce84600161131f565b815260208101919091526040015f20600301546001600160a01b0316036110b3575f600681610ffe84600161131f565b815260208082019290925260409081015f90812054808252600680855291839020835160e0810185528154815260018201546001600160a01b039081169682019690965260028201549481019490945260038101548516606085015260048101549094166080840152600584015460a084015292015460ff16151560c0820152845191925090819085908790811061109857611098611332565b60209081029190910101526110ae60018661131f565b945050505b600101610fb7565b60025f540361110c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161051d565b60025f55565b8054806111615760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161051d565b5f19019055565b6040805160e0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b805182526020808201516001600160a01b0390811691840191909152604080830151908401526060808301518216908401526080808301519091169083015260a0808201519083015260c0908101511515910152565b602080825282518282018190525f918401906040840190835b8181101561123b576112258385516111a3565b6020939093019260e09290920191600101611212565b509095945050505050565b5f60208284031215611256575f80fd5b5035919050565b80356001600160a01b0381168114611273575f80fd5b919050565b5f805f6060848603121561128a575f80fd5b6112938461125d565b95602085013595506040909401359392505050565b5f80604083850312156112b9575f80fd5b6112c28361125d565b946020939093013593505050565b60e081016112de82846111a3565b92915050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156112de576112de6112e4565b634e487b7160e01b5f52604160045260245ffd5b808201808211156112de576112de6112e4565b634e487b7160e01b5f52603260045260245ffd5b60208082526022908201527f596f7520617265206e6f7420746865206f776e6572206f662074686973206974604082015261656d60f01b606082015260800190565b5f60208284031215611398575f80fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f602082840312156113d3575f80fd5b815180151581146113e2575f80fd5b9392505050565b6001600160a01b039485168152929093166020830152604082015290151560608201526080019056fea2646970667358221220be722109414db35402ceb552184be9bf3575d6917b1a0f07aecd414452fbb34064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x58D15E17628000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x14E7 CODESIZE SUB DUP1 PUSH2 0x14E7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x36 SWAP2 PUSH1 0x67 JUMP JUMPDEST PUSH1 0x1 PUSH0 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH1 0x92 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x76 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x8B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1448 DUP1 PUSH2 0x9F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89BFD38F GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x89BFD38F EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x8F0AF0F9 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x9F37092A EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF2A7A2B4 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF9319C53 EQ PUSH2 0x16B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12E85585 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2AD8A220 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x3B1B1AD0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x4D757A1C EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x5A599DA8 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x300 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x110 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x110 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x17F PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B5 JUMPI PUSH2 0x1B5 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1DB PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI ADDRESS PUSH1 0x6 PUSH0 PUSH2 0x20A DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x2EF JUMPI PUSH0 PUSH1 0x6 DUP2 PUSH2 0x23A DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x6 DUP1 DUP6 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP7 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x2D4 JUMPI PUSH2 0x2D4 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x2EA PUSH1 0x1 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F3 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x30C PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x360 JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0x329 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x358 JUMPI PUSH2 0x355 PUSH1 0x1 DUP5 PUSH2 0x131F JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x312 JUMP JUMPDEST POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3B4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3A1 PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x399 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0x3D0 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4B5 JUMPI PUSH0 PUSH1 0x6 DUP2 PUSH2 0x400 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x6 DUP1 DUP6 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP7 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x49A PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4B0 PUSH1 0x1 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x4FF JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47AD5E4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x584 PUSH2 0x10BB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCC29701 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4974656D205072696365206973207A65726F PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F36F1B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x131A5CDD1A5B99C81C1C9A58D9481A5CC81B9BDD081B595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x6BF SWAP3 CALLER SWAP3 ADDRESS SWAP3 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH2 0x70E PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x718 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP11 DUP2 MSTORE CALLER PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE ADDRESS PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP11 ADD DUP15 DUP2 MSTORE PUSH0 PUSH1 0xC0 DUP13 ADD DUP2 DUP2 MSTORE DUP15 DUP3 MSTORE PUSH1 0x6 SWAP10 DUP11 SWAP1 MSTORE SWAP1 DUP14 SWAP1 KECCAK256 SWAP12 MLOAD DUP13 SSTORE SWAP7 MLOAD PUSH1 0x1 DUP13 ADD DUP1 SLOAD SWAP2 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP6 MLOAD PUSH1 0x2 DUP13 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 DUP12 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP1 DUP12 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP11 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP8 SSTORE MLOAD PUSH1 0x5 DUP9 ADD SSTORE SWAP2 MLOAD SWAP6 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP6 POP SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x7F9 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 ADD PUSH2 0x139F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x810 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x822 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0xF8551F8BE25732324FCDA411A126B3C851E038B0FF8D097A3951DDED3772F43F CALLER ADDRESS DUP8 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x867 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP POP PUSH2 0x8F5 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x902 PUSH2 0x10BB JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH4 0x47AD5E4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST LT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F36F1B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x131A5CDD1A5B99C81C1C9A58D9481A5CC81B9BDD081B595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xA31 SWAP3 CALLER SWAP3 ADDRESS SWAP3 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND ADDRESS OR SWAP1 SSTORE PUSH2 0xAC3 PUSH1 0x2 PUSH2 0x1112 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xB05 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x139F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x52679D6CF973DFF612DE0D67AD1642E7B8B401DCB1C41EA86BF35B82AC6BF88 CALLER ADDRESS DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xB72 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0x10BB JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SLOAD SWAP4 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 SWAP3 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC32 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC56 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST LT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F36F1B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697374696E67205072696365206973206E6F74206D65740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xCD9 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD4A SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x139F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD61 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE2A PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9A9F9FAF9D964B2FB1888CDF05202BAF5A1B99D45F7AFD6A5E062AC544B3C150 ADDRESS CALLER DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE6B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xE7F PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE8B PUSH2 0x1168 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xF0A PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF5E JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0xF27 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF56 JUMPI PUSH2 0xF53 PUSH1 0x1 DUP5 PUSH2 0x131F JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF10 JUMP JUMPDEST POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF79 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFB2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF9F PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF97 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0xFCE DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x10B3 JUMPI PUSH0 PUSH1 0x6 DUP2 PUSH2 0xFFE DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x6 DUP1 DUP6 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP7 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x1098 JUMPI PUSH2 0x1098 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x10AE PUSH1 0x1 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x123B JUMPI PUSH2 0x1225 DUP4 DUP6 MLOAD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0xE0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1212 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1273 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x128A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1293 DUP5 PUSH2 0x125D JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C2 DUP4 PUSH2 0x125D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD PUSH2 0x12DE DUP3 DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DE PUSH2 0x12E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DE PUSH2 0x12E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973206974 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x656D PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH19 0x2109414DB35402CEB552184BE9BF3575D6917B BYTE 0xF SMOD 0xAE 0xCD COINBASE PREVRANDAO MSTORE 0xFB 0xB3 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "566:8766:15:-:0;;;837:18;814:41;;968:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;1014:12:15;:36;;-1:-1:-1;;;;;1014:36:15;;;-1:-1:-1;;;;;;1014:36:15;;;;;;1061:5;:27;;;;;1077:10;1061:27;;;566:8766;;14:290:16;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:16;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:16:o;:::-;566:8766:15;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_nonReentrantAfter_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_181": {
									"entryPoint": 4283,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyItem_3725": {
									"entryPoint": 3001,
									"id": 3725,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_1524": {
									"entryPoint": null,
									"id": 1524,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_1566": {
									"entryPoint": 4370,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getAllListedItems_3262": {
									"entryPoint": 371,
									"id": 3262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getListingPrice_3169": {
									"entryPoint": null,
									"id": 3169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwnerListedItems_3374": {
									"entryPoint": 768,
									"id": 3374,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getParticularItem_3499": {
									"entryPoint": 3715,
									"id": 3499,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getSellerListedItems_3486": {
									"entryPoint": 3838,
									"id": 3486,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1538": {
									"entryPoint": null,
									"id": 1538,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@listItem_3612": {
									"entryPoint": 1404,
									"id": 3612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@resellItem_3856": {
									"entryPoint": 2298,
									"id": 3856,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tradingToken_3077": {
									"entryPoint": null,
									"id": 3077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unlistItem_3888": {
									"entryPoint": 1213,
									"id": 3888,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_Item": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$279__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26c10054244c2acbf2a9a08ccdf7f5bfa4dc8d416cce2204430e2dabe22a96eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c2070eb6044bab832f5a7b52eb617410e2bfe7b6a3d87012b83b486a16fa344__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5729c5951217e82698b009f0228c772240632422f06d27d3078726c074a78ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f99fcefe44b2d6c729beaa170337e140da4ca44ee3c99eaaa4bafcc0b9e7c622__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Item_$3112_memory_ptr__to_t_struct$_Item_$3112_memory_ptr__fromStack_reversed": {
									"entryPoint": 4816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8006:16",
										"nodeType": "YulBlock",
										"src": "0:8006:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:16",
													"nodeType": "YulBlock",
													"src": "115:76:16",
													"statements": [
														{
															"nativeSrc": "125:26:16",
															"nodeType": "YulAssignment",
															"src": "125:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:16",
																		"nodeType": "YulLiteral",
																		"src": "148:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:16"
																},
																"nativeSrc": "133:18:16",
																"nodeType": "YulFunctionCall",
																"src": "133:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:16"
																},
																"nativeSrc": "160:25:16",
																"nodeType": "YulFunctionCall",
																"src": "160:25:16"
															},
															"nativeSrc": "160:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:16",
														"nodeType": "YulTypedName",
														"src": "84:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:16",
														"nodeType": "YulTypedName",
														"src": "95:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:16",
														"nodeType": "YulTypedName",
														"src": "106:4:16",
														"type": ""
													}
												],
												"src": "14:177:16"
											},
											{
												"body": {
													"nativeSrc": "311:102:16",
													"nodeType": "YulBlock",
													"src": "311:102:16",
													"statements": [
														{
															"nativeSrc": "321:26:16",
															"nodeType": "YulAssignment",
															"src": "321:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "333:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "333:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "344:2:16",
																		"nodeType": "YulLiteral",
																		"src": "344:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "329:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "329:3:16"
																},
																"nativeSrc": "329:18:16",
																"nodeType": "YulFunctionCall",
																"src": "329:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "321:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "321:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "363:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "363:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "378:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "378:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "394:3:16",
																								"nodeType": "YulLiteral",
																								"src": "394:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "399:1:16",
																								"nodeType": "YulLiteral",
																								"src": "399:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "390:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "390:3:16"
																						},
																						"nativeSrc": "390:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "390:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "403:1:16",
																						"nodeType": "YulLiteral",
																						"src": "403:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "386:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "386:3:16"
																				},
																				"nativeSrc": "386:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "386:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "374:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:16"
																		},
																		"nativeSrc": "374:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "374:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "356:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:16"
																},
																"nativeSrc": "356:51:16",
																"nodeType": "YulFunctionCall",
																"src": "356:51:16"
															},
															"nativeSrc": "356:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "356:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$279__to_t_address__fromStack_reversed",
												"nativeSrc": "196:217:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "280:9:16",
														"nodeType": "YulTypedName",
														"src": "280:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "291:6:16",
														"nodeType": "YulTypedName",
														"src": "291:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "302:4:16",
														"nodeType": "YulTypedName",
														"src": "302:4:16",
														"type": ""
													}
												],
												"src": "196:217:16"
											},
											{
												"body": {
													"nativeSrc": "466:471:16",
													"nodeType": "YulBlock",
													"src": "466:471:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "483:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "483:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "494:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "494:5:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "488:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "488:5:16"
																		},
																		"nativeSrc": "488:12:16",
																		"nodeType": "YulFunctionCall",
																		"src": "488:12:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "476:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:16"
																},
																"nativeSrc": "476:25:16",
																"nodeType": "YulFunctionCall",
																"src": "476:25:16"
															},
															"nativeSrc": "476:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "476:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "521:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "521:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "526:4:16",
																				"nodeType": "YulLiteral",
																				"src": "526:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "517:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "517:3:16"
																		},
																		"nativeSrc": "517:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "517:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "547:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "547:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "554:4:16",
																								"nodeType": "YulLiteral",
																								"src": "554:4:16",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "543:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "543:3:16"
																						},
																						"nativeSrc": "543:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "543:16:16"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "537:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "537:5:16"
																				},
																				"nativeSrc": "537:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "537:23:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "570:3:16",
																								"nodeType": "YulLiteral",
																								"src": "570:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "575:1:16",
																								"nodeType": "YulLiteral",
																								"src": "575:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "566:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "566:3:16"
																						},
																						"nativeSrc": "566:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "566:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "579:1:16",
																						"nodeType": "YulLiteral",
																						"src": "579:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "562:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "562:3:16"
																				},
																				"nativeSrc": "562:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "562:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "533:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "533:3:16"
																		},
																		"nativeSrc": "533:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "533:49:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "510:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "510:6:16"
																},
																"nativeSrc": "510:73:16",
																"nodeType": "YulFunctionCall",
																"src": "510:73:16"
															},
															"nativeSrc": "510:73:16",
															"nodeType": "YulExpressionStatement",
															"src": "510:73:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "603:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "603:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "608:4:16",
																				"nodeType": "YulLiteral",
																				"src": "608:4:16",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "599:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "599:3:16"
																		},
																		"nativeSrc": "599:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "599:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "625:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "625:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "632:4:16",
																						"nodeType": "YulLiteral",
																						"src": "632:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "621:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "621:3:16"
																				},
																				"nativeSrc": "621:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "621:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "615:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "615:5:16"
																		},
																		"nativeSrc": "615:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "615:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "592:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "592:6:16"
																},
																"nativeSrc": "592:47:16",
																"nodeType": "YulFunctionCall",
																"src": "592:47:16"
															},
															"nativeSrc": "592:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "592:47:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "659:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "659:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "664:4:16",
																				"nodeType": "YulLiteral",
																				"src": "664:4:16",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "655:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "655:3:16"
																		},
																		"nativeSrc": "655:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "655:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "685:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "685:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "692:4:16",
																								"nodeType": "YulLiteral",
																								"src": "692:4:16",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "681:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "681:3:16"
																						},
																						"nativeSrc": "681:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "681:16:16"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "675:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "675:5:16"
																				},
																				"nativeSrc": "675:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "675:23:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "708:3:16",
																								"nodeType": "YulLiteral",
																								"src": "708:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "713:1:16",
																								"nodeType": "YulLiteral",
																								"src": "713:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "704:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "704:3:16"
																						},
																						"nativeSrc": "704:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "704:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "717:1:16",
																						"nodeType": "YulLiteral",
																						"src": "717:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "700:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "700:3:16"
																				},
																				"nativeSrc": "700:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "700:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "671:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "671:3:16"
																		},
																		"nativeSrc": "671:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "671:49:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:16"
																},
																"nativeSrc": "648:73:16",
																"nodeType": "YulFunctionCall",
																"src": "648:73:16"
															},
															"nativeSrc": "648:73:16",
															"nodeType": "YulExpressionStatement",
															"src": "648:73:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "741:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "741:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "746:4:16",
																				"nodeType": "YulLiteral",
																				"src": "746:4:16",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "737:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:16"
																		},
																		"nativeSrc": "737:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "737:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "767:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "767:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "774:4:16",
																								"nodeType": "YulLiteral",
																								"src": "774:4:16",
																								"type": "",
																								"value": "0x80"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "763:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "763:3:16"
																						},
																						"nativeSrc": "763:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "763:16:16"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "757:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "757:5:16"
																				},
																				"nativeSrc": "757:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "757:23:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "790:3:16",
																								"nodeType": "YulLiteral",
																								"src": "790:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "795:1:16",
																								"nodeType": "YulLiteral",
																								"src": "795:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "786:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "786:3:16"
																						},
																						"nativeSrc": "786:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "786:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "799:1:16",
																						"nodeType": "YulLiteral",
																						"src": "799:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "782:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "782:3:16"
																				},
																				"nativeSrc": "782:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "782:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "753:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "753:3:16"
																		},
																		"nativeSrc": "753:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "753:49:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "730:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "730:6:16"
																},
																"nativeSrc": "730:73:16",
																"nodeType": "YulFunctionCall",
																"src": "730:73:16"
															},
															"nativeSrc": "730:73:16",
															"nodeType": "YulExpressionStatement",
															"src": "730:73:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "823:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "823:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "828:4:16",
																				"nodeType": "YulLiteral",
																				"src": "828:4:16",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "819:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:16"
																		},
																		"nativeSrc": "819:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "819:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "845:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "845:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "852:4:16",
																						"nodeType": "YulLiteral",
																						"src": "852:4:16",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "841:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "841:3:16"
																				},
																				"nativeSrc": "841:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "841:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "835:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "835:5:16"
																		},
																		"nativeSrc": "835:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "835:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "812:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "812:6:16"
																},
																"nativeSrc": "812:47:16",
																"nodeType": "YulFunctionCall",
																"src": "812:47:16"
															},
															"nativeSrc": "812:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "812:47:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "879:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "879:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "884:4:16",
																				"nodeType": "YulLiteral",
																				"src": "884:4:16",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "875:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "875:3:16"
																		},
																		"nativeSrc": "875:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "875:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value",
																										"nativeSrc": "915:5:16",
																										"nodeType": "YulIdentifier",
																										"src": "915:5:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "922:4:16",
																										"nodeType": "YulLiteral",
																										"src": "922:4:16",
																										"type": "",
																										"value": "0xc0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "911:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "911:3:16"
																								},
																								"nativeSrc": "911:16:16",
																								"nodeType": "YulFunctionCall",
																								"src": "911:16:16"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "905:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "905:5:16"
																						},
																						"nativeSrc": "905:23:16",
																						"nodeType": "YulFunctionCall",
																						"src": "905:23:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "898:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "898:6:16"
																				},
																				"nativeSrc": "898:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "898:31:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "891:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "891:6:16"
																		},
																		"nativeSrc": "891:39:16",
																		"nodeType": "YulFunctionCall",
																		"src": "891:39:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "868:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:16"
																},
																"nativeSrc": "868:63:16",
																"nodeType": "YulFunctionCall",
																"src": "868:63:16"
															},
															"nativeSrc": "868:63:16",
															"nodeType": "YulExpressionStatement",
															"src": "868:63:16"
														}
													]
												},
												"name": "abi_encode_struct_Item",
												"nativeSrc": "418:519:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "450:5:16",
														"nodeType": "YulTypedName",
														"src": "450:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "457:3:16",
														"nodeType": "YulTypedName",
														"src": "457:3:16",
														"type": ""
													}
												],
												"src": "418:519:16"
											},
											{
												"body": {
													"nativeSrc": "1137:478:16",
													"nodeType": "YulBlock",
													"src": "1137:478:16",
													"statements": [
														{
															"nativeSrc": "1147:32:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1147:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1165:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1165:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1176:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1176:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1161:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1161:3:16"
																},
																"nativeSrc": "1161:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1161:18:16"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "1151:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1151:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1195:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1195:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1206:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1206:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1188:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1188:6:16"
																},
																"nativeSrc": "1188:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1188:21:16"
															},
															"nativeSrc": "1188:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "1188:21:16"
														},
														{
															"nativeSrc": "1218:17:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1218:17:16",
															"value": {
																"name": "tail_1",
																"nativeSrc": "1229:6:16",
																"nodeType": "YulIdentifier",
																"src": "1229:6:16"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "1222:3:16",
																	"nodeType": "YulTypedName",
																	"src": "1222:3:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1244:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1244:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1264:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1264:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1258:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1258:5:16"
																},
																"nativeSrc": "1258:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1258:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1248:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1248:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "1287:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1287:6:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1295:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1295:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1280:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:16"
																},
																"nativeSrc": "1280:22:16",
																"nodeType": "YulFunctionCall",
																"src": "1280:22:16"
															},
															"nativeSrc": "1280:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "1280:22:16"
														},
														{
															"nativeSrc": "1311:25:16",
															"nodeType": "YulAssignment",
															"src": "1311:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1322:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1322:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1333:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1318:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1318:3:16"
																},
																"nativeSrc": "1318:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1318:18:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1311:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1311:3:16"
																}
															]
														},
														{
															"nativeSrc": "1345:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1345:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1363:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1363:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1371:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1371:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1359:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1359:3:16"
																},
																"nativeSrc": "1359:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1359:15:16"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1349:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1349:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1383:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1392:1:16",
																"nodeType": "YulLiteral",
																"src": "1392:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1387:1:16",
																	"nodeType": "YulTypedName",
																	"src": "1387:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1451:138:16",
																"nodeType": "YulBlock",
																"src": "1451:138:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "1494:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "1494:6:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1488:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1488:5:16"
																					},
																					"nativeSrc": "1488:13:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1488:13:16"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "1503:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1503:3:16"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_Item",
																				"nativeSrc": "1465:22:16",
																				"nodeType": "YulIdentifier",
																				"src": "1465:22:16"
																			},
																			"nativeSrc": "1465:42:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1465:42:16"
																		},
																		"nativeSrc": "1465:42:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1465:42:16"
																	},
																	{
																		"nativeSrc": "1520:21:16",
																		"nodeType": "YulAssignment",
																		"src": "1520:21:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1531:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1531:3:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1536:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1536:4:16",
																					"type": "",
																					"value": "0xe0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1527:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1527:3:16"
																			},
																			"nativeSrc": "1527:14:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1527:14:16"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1520:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1520:3:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1554:25:16",
																		"nodeType": "YulAssignment",
																		"src": "1554:25:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1568:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1568:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1576:2:16",
																					"nodeType": "YulLiteral",
																					"src": "1576:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1564:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1564:3:16"
																			},
																			"nativeSrc": "1564:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:15:16"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1554:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1554:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1413:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1413:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1416:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1416:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1410:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1410:2:16"
																},
																"nativeSrc": "1410:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1410:13:16"
															},
															"nativeSrc": "1402:187:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1424:18:16",
																"nodeType": "YulBlock",
																"src": "1424:18:16",
																"statements": [
																	{
																		"nativeSrc": "1426:14:16",
																		"nodeType": "YulAssignment",
																		"src": "1426:14:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1435:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "1435:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1438:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1438:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1431:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1431:3:16"
																			},
																			"nativeSrc": "1431:9:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1431:9:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1426:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "1426:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1406:3:16",
																"nodeType": "YulBlock",
																"src": "1406:3:16",
																"statements": []
															},
															"src": "1402:187:16"
														},
														{
															"nativeSrc": "1598:11:16",
															"nodeType": "YulAssignment",
															"src": "1598:11:16",
															"value": {
																"name": "pos",
																"nativeSrc": "1606:3:16",
																"nodeType": "YulIdentifier",
																"src": "1606:3:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1598:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1598:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "942:673:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1106:9:16",
														"nodeType": "YulTypedName",
														"src": "1106:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1117:6:16",
														"nodeType": "YulTypedName",
														"src": "1117:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1128:4:16",
														"nodeType": "YulTypedName",
														"src": "1128:4:16",
														"type": ""
													}
												],
												"src": "942:673:16"
											},
											{
												"body": {
													"nativeSrc": "1690:156:16",
													"nodeType": "YulBlock",
													"src": "1690:156:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1736:16:16",
																"nodeType": "YulBlock",
																"src": "1736:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1745:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1745:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1748:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1748:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1738:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:16"
																			},
																			"nativeSrc": "1738:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1738:12:16"
																		},
																		"nativeSrc": "1738:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1738:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1711:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1720:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1707:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:16"
																		},
																		"nativeSrc": "1707:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1703:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:16"
																},
																"nativeSrc": "1703:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1703:32:16"
															},
															"nativeSrc": "1700:52:16",
															"nodeType": "YulIf",
															"src": "1700:52:16"
														},
														{
															"nativeSrc": "1761:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1761:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1774:1:16",
																"nodeType": "YulLiteral",
																"src": "1774:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1765:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1765:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1784:32:16",
															"nodeType": "YulAssignment",
															"src": "1784:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1806:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1793:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1793:12:16"
																},
																"nativeSrc": "1793:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1793:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1784:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1784:5:16"
																}
															]
														},
														{
															"nativeSrc": "1825:15:16",
															"nodeType": "YulAssignment",
															"src": "1825:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1835:5:16",
																"nodeType": "YulIdentifier",
																"src": "1835:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1825:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1620:226:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:16",
														"nodeType": "YulTypedName",
														"src": "1656:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:16",
														"nodeType": "YulTypedName",
														"src": "1667:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:16",
														"nodeType": "YulTypedName",
														"src": "1679:6:16",
														"type": ""
													}
												],
												"src": "1620:226:16"
											},
											{
												"body": {
													"nativeSrc": "1900:124:16",
													"nodeType": "YulBlock",
													"src": "1900:124:16",
													"statements": [
														{
															"nativeSrc": "1910:29:16",
															"nodeType": "YulAssignment",
															"src": "1910:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1932:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1932:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1919:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1919:12:16"
																},
																"nativeSrc": "1919:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1919:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1910:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1910:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2002:16:16",
																"nodeType": "YulBlock",
																"src": "2002:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2011:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2011:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2014:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2014:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2004:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2004:6:16"
																			},
																			"nativeSrc": "2004:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2004:12:16"
																		},
																		"nativeSrc": "2004:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2004:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1961:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1961:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1972:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1972:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1987:3:16",
																										"nodeType": "YulLiteral",
																										"src": "1987:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1992:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1992:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1983:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:16"
																								},
																								"nativeSrc": "1983:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1983:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1996:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1996:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1979:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1979:3:16"
																						},
																						"nativeSrc": "1979:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1979:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1968:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1968:3:16"
																				},
																				"nativeSrc": "1968:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1968:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1958:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1958:2:16"
																		},
																		"nativeSrc": "1958:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1958:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1951:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1951:6:16"
																},
																"nativeSrc": "1951:50:16",
																"nodeType": "YulFunctionCall",
																"src": "1951:50:16"
															},
															"nativeSrc": "1948:70:16",
															"nodeType": "YulIf",
															"src": "1948:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1851:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1879:6:16",
														"nodeType": "YulTypedName",
														"src": "1879:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1890:5:16",
														"nodeType": "YulTypedName",
														"src": "1890:5:16",
														"type": ""
													}
												],
												"src": "1851:173:16"
											},
											{
												"body": {
													"nativeSrc": "2133:316:16",
													"nodeType": "YulBlock",
													"src": "2133:316:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2179:16:16",
																"nodeType": "YulBlock",
																"src": "2179:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2188:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2191:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2191:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2181:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2181:6:16"
																			},
																			"nativeSrc": "2181:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2181:12:16"
																		},
																		"nativeSrc": "2181:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2181:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2154:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2154:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2163:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2150:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:16"
																		},
																		"nativeSrc": "2150:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2146:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2146:3:16"
																},
																"nativeSrc": "2146:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2146:32:16"
															},
															"nativeSrc": "2143:52:16",
															"nodeType": "YulIf",
															"src": "2143:52:16"
														},
														{
															"nativeSrc": "2204:39:16",
															"nodeType": "YulAssignment",
															"src": "2204:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2233:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2233:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2214:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2214:18:16"
																},
																"nativeSrc": "2214:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2214:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2204:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:16"
																}
															]
														},
														{
															"nativeSrc": "2252:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2252:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2265:1:16",
																"nodeType": "YulLiteral",
																"src": "2265:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2256:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2256:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2275:41:16",
															"nodeType": "YulAssignment",
															"src": "2275:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2301:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2312:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2312:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2297:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:16"
																		},
																		"nativeSrc": "2297:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2297:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2284:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:16"
																},
																"nativeSrc": "2284:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2284:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2275:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2275:5:16"
																}
															]
														},
														{
															"nativeSrc": "2325:15:16",
															"nodeType": "YulAssignment",
															"src": "2325:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2335:5:16",
																"nodeType": "YulIdentifier",
																"src": "2335:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2325:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:16"
																}
															]
														},
														{
															"nativeSrc": "2349:16:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2349:16:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2364:1:16",
																"nodeType": "YulLiteral",
																"src": "2364:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2353:7:16",
																	"nodeType": "YulTypedName",
																	"src": "2353:7:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2374:43:16",
															"nodeType": "YulAssignment",
															"src": "2374:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2402:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2402:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2413:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2413:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2398:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:16"
																		},
																		"nativeSrc": "2398:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2398:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2385:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2385:12:16"
																},
																"nativeSrc": "2385:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2385:32:16"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2374:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2374:7:16"
																}
															]
														},
														{
															"nativeSrc": "2426:17:16",
															"nodeType": "YulAssignment",
															"src": "2426:17:16",
															"value": {
																"name": "value_1",
																"nativeSrc": "2436:7:16",
																"nodeType": "YulIdentifier",
																"src": "2436:7:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2426:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "2029:420:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2083:9:16",
														"nodeType": "YulTypedName",
														"src": "2083:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2094:7:16",
														"nodeType": "YulTypedName",
														"src": "2094:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2106:6:16",
														"nodeType": "YulTypedName",
														"src": "2106:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2114:6:16",
														"nodeType": "YulTypedName",
														"src": "2114:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2122:6:16",
														"nodeType": "YulTypedName",
														"src": "2122:6:16",
														"type": ""
													}
												],
												"src": "2029:420:16"
											},
											{
												"body": {
													"nativeSrc": "2541:213:16",
													"nodeType": "YulBlock",
													"src": "2541:213:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2587:16:16",
																"nodeType": "YulBlock",
																"src": "2587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2596:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2589:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2589:6:16"
																			},
																			"nativeSrc": "2589:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2589:12:16"
																		},
																		"nativeSrc": "2589:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2562:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2562:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2571:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2571:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2558:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2558:3:16"
																		},
																		"nativeSrc": "2558:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2558:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2583:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2583:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2554:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2554:3:16"
																},
																"nativeSrc": "2554:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2554:32:16"
															},
															"nativeSrc": "2551:52:16",
															"nodeType": "YulIf",
															"src": "2551:52:16"
														},
														{
															"nativeSrc": "2612:39:16",
															"nodeType": "YulAssignment",
															"src": "2612:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2641:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2641:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2622:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2622:18:16"
																},
																"nativeSrc": "2622:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2622:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2612:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:16"
																}
															]
														},
														{
															"nativeSrc": "2660:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2660:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2673:1:16",
																"nodeType": "YulLiteral",
																"src": "2673:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2664:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2664:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2683:41:16",
															"nodeType": "YulAssignment",
															"src": "2683:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2709:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2720:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2705:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:16"
																		},
																		"nativeSrc": "2705:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2692:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2692:12:16"
																},
																"nativeSrc": "2692:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2692:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2683:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2683:5:16"
																}
															]
														},
														{
															"nativeSrc": "2733:15:16",
															"nodeType": "YulAssignment",
															"src": "2733:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2743:5:16",
																"nodeType": "YulIdentifier",
																"src": "2743:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2733:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2733:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2454:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2499:9:16",
														"nodeType": "YulTypedName",
														"src": "2499:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2510:7:16",
														"nodeType": "YulTypedName",
														"src": "2510:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2522:6:16",
														"nodeType": "YulTypedName",
														"src": "2522:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2530:6:16",
														"nodeType": "YulTypedName",
														"src": "2530:6:16",
														"type": ""
													}
												],
												"src": "2454:300:16"
											},
											{
												"body": {
													"nativeSrc": "2904:93:16",
													"nodeType": "YulBlock",
													"src": "2904:93:16",
													"statements": [
														{
															"nativeSrc": "2914:27:16",
															"nodeType": "YulAssignment",
															"src": "2914:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2926:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:3:16",
																		"nodeType": "YulLiteral",
																		"src": "2937:3:16",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2922:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:16"
																},
																"nativeSrc": "2922:19:16",
																"nodeType": "YulFunctionCall",
																"src": "2922:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2914:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2973:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2973:6:16"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "2981:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Item",
																	"nativeSrc": "2950:22:16",
																	"nodeType": "YulIdentifier",
																	"src": "2950:22:16"
																},
																"nativeSrc": "2950:41:16",
																"nodeType": "YulFunctionCall",
																"src": "2950:41:16"
															},
															"nativeSrc": "2950:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "2950:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Item_$3112_memory_ptr__to_t_struct$_Item_$3112_memory_ptr__fromStack_reversed",
												"nativeSrc": "2759:238:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2873:9:16",
														"nodeType": "YulTypedName",
														"src": "2873:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2884:6:16",
														"nodeType": "YulTypedName",
														"src": "2884:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2895:4:16",
														"nodeType": "YulTypedName",
														"src": "2895:4:16",
														"type": ""
													}
												],
												"src": "2759:238:16"
											},
											{
												"body": {
													"nativeSrc": "3034:95:16",
													"nodeType": "YulBlock",
													"src": "3034:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3051:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3051:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3058:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3058:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3063:10:16",
																				"nodeType": "YulLiteral",
																				"src": "3063:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3054:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:16"
																		},
																		"nativeSrc": "3054:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3054:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3044:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:16"
																},
																"nativeSrc": "3044:31:16",
																"nodeType": "YulFunctionCall",
																"src": "3044:31:16"
															},
															"nativeSrc": "3044:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "3044:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3091:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3091:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3094:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3094:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3084:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:16"
																},
																"nativeSrc": "3084:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3084:15:16"
															},
															"nativeSrc": "3084:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3084:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3115:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3115:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3118:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3118:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3108:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3108:6:16"
																},
																"nativeSrc": "3108:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3108:15:16"
															},
															"nativeSrc": "3108:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3108:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3002:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "3002:127:16"
											},
											{
												"body": {
													"nativeSrc": "3183:79:16",
													"nodeType": "YulBlock",
													"src": "3183:79:16",
													"statements": [
														{
															"nativeSrc": "3193:17:16",
															"nodeType": "YulAssignment",
															"src": "3193:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3205:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3205:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3208:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3208:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3201:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:16"
																},
																"nativeSrc": "3201:9:16",
																"nodeType": "YulFunctionCall",
																"src": "3201:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3193:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3193:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3234:22:16",
																"nodeType": "YulBlock",
																"src": "3234:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3236:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "3236:16:16"
																			},
																			"nativeSrc": "3236:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3236:18:16"
																		},
																		"nativeSrc": "3236:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3236:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3225:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3225:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3231:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3231:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3222:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3222:2:16"
																},
																"nativeSrc": "3222:11:16",
																"nodeType": "YulFunctionCall",
																"src": "3222:11:16"
															},
															"nativeSrc": "3219:37:16",
															"nodeType": "YulIf",
															"src": "3219:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3134:128:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3165:1:16",
														"nodeType": "YulTypedName",
														"src": "3165:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3168:1:16",
														"nodeType": "YulTypedName",
														"src": "3168:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3174:4:16",
														"nodeType": "YulTypedName",
														"src": "3174:4:16",
														"type": ""
													}
												],
												"src": "3134:128:16"
											},
											{
												"body": {
													"nativeSrc": "3299:95:16",
													"nodeType": "YulBlock",
													"src": "3299:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3316:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3316:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3323:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3323:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3328:10:16",
																				"nodeType": "YulLiteral",
																				"src": "3328:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3319:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:16"
																		},
																		"nativeSrc": "3319:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3319:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3309:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3309:6:16"
																},
																"nativeSrc": "3309:31:16",
																"nodeType": "YulFunctionCall",
																"src": "3309:31:16"
															},
															"nativeSrc": "3309:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "3309:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3356:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3356:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3359:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3349:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:16"
																},
																"nativeSrc": "3349:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3349:15:16"
															},
															"nativeSrc": "3349:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3349:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3380:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3380:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3383:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3383:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3373:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3373:6:16"
																},
																"nativeSrc": "3373:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3373:15:16"
															},
															"nativeSrc": "3373:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3373:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3267:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "3267:127:16"
											},
											{
												"body": {
													"nativeSrc": "3447:77:16",
													"nodeType": "YulBlock",
													"src": "3447:77:16",
													"statements": [
														{
															"nativeSrc": "3457:16:16",
															"nodeType": "YulAssignment",
															"src": "3457:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3468:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3468:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3471:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3471:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3464:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:16"
																},
																"nativeSrc": "3464:9:16",
																"nodeType": "YulFunctionCall",
																"src": "3464:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3457:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3496:22:16",
																"nodeType": "YulBlock",
																"src": "3496:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3498:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "3498:16:16"
																			},
																			"nativeSrc": "3498:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3498:18:16"
																		},
																		"nativeSrc": "3498:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3498:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3488:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3488:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3491:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3491:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3485:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3485:2:16"
																},
																"nativeSrc": "3485:10:16",
																"nodeType": "YulFunctionCall",
																"src": "3485:10:16"
															},
															"nativeSrc": "3482:36:16",
															"nodeType": "YulIf",
															"src": "3482:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3399:125:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3430:1:16",
														"nodeType": "YulTypedName",
														"src": "3430:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3433:1:16",
														"nodeType": "YulTypedName",
														"src": "3433:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3439:3:16",
														"nodeType": "YulTypedName",
														"src": "3439:3:16",
														"type": ""
													}
												],
												"src": "3399:125:16"
											},
											{
												"body": {
													"nativeSrc": "3561:95:16",
													"nodeType": "YulBlock",
													"src": "3561:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3578:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3578:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3585:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3585:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:10:16",
																				"nodeType": "YulLiteral",
																				"src": "3590:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3581:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:16"
																		},
																		"nativeSrc": "3581:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3571:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3571:6:16"
																},
																"nativeSrc": "3571:31:16",
																"nodeType": "YulFunctionCall",
																"src": "3571:31:16"
															},
															"nativeSrc": "3571:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "3571:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3618:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3618:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3621:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3621:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3611:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:16"
																},
																"nativeSrc": "3611:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3611:15:16"
															},
															"nativeSrc": "3611:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3611:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3642:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3645:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3635:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:16"
																},
																"nativeSrc": "3635:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3635:15:16"
															},
															"nativeSrc": "3635:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3635:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3529:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "3529:127:16"
											},
											{
												"body": {
													"nativeSrc": "3835:224:16",
													"nodeType": "YulBlock",
													"src": "3835:224:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3852:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3852:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3863:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3863:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3845:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:16"
																},
																"nativeSrc": "3845:21:16",
																"nodeType": "YulFunctionCall",
																"src": "3845:21:16"
															},
															"nativeSrc": "3845:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "3845:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3886:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3886:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3897:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3897:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3882:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3882:3:16"
																		},
																		"nativeSrc": "3882:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3882:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3902:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3902:2:16",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3875:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3875:6:16"
																},
																"nativeSrc": "3875:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3875:30:16"
															},
															"nativeSrc": "3875:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "3875:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3925:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3925:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3936:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3936:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3921:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3921:3:16"
																		},
																		"nativeSrc": "3921:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3921:18:16"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973206974",
																		"kind": "string",
																		"nativeSrc": "3941:34:16",
																		"nodeType": "YulLiteral",
																		"src": "3941:34:16",
																		"type": "",
																		"value": "You are not the owner of this it"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3914:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:16"
																},
																"nativeSrc": "3914:62:16",
																"nodeType": "YulFunctionCall",
																"src": "3914:62:16"
															},
															"nativeSrc": "3914:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "3914:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3996:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4007:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4007:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3992:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3992:3:16"
																		},
																		"nativeSrc": "3992:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:18:16"
																	},
																	{
																		"hexValue": "656d",
																		"kind": "string",
																		"nativeSrc": "4012:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4012:4:16",
																		"type": "",
																		"value": "em"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3985:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3985:6:16"
																},
																"nativeSrc": "3985:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3985:32:16"
															},
															"nativeSrc": "3985:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "3985:32:16"
														},
														{
															"nativeSrc": "4026:27:16",
															"nodeType": "YulAssignment",
															"src": "4026:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4038:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4038:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4049:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4049:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4034:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:16"
																},
																"nativeSrc": "4034:19:16",
																"nodeType": "YulFunctionCall",
																"src": "4034:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4026:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4026:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5729c5951217e82698b009f0228c772240632422f06d27d3078726c074a78ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3661:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3812:9:16",
														"nodeType": "YulTypedName",
														"src": "3812:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3826:4:16",
														"nodeType": "YulTypedName",
														"src": "3826:4:16",
														"type": ""
													}
												],
												"src": "3661:398:16"
											},
											{
												"body": {
													"nativeSrc": "4238:168:16",
													"nodeType": "YulBlock",
													"src": "4238:168:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4255:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4255:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4266:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4266:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4248:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4248:6:16"
																},
																"nativeSrc": "4248:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4248:21:16"
															},
															"nativeSrc": "4248:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "4248:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4289:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4289:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4300:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4300:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4285:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4285:3:16"
																		},
																		"nativeSrc": "4285:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4305:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:16",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4278:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:16"
																},
																"nativeSrc": "4278:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4278:30:16"
															},
															"nativeSrc": "4278:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "4278:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4328:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4328:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4339:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4339:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4324:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:16"
																		},
																		"nativeSrc": "4324:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4324:18:16"
																	},
																	{
																		"hexValue": "4974656d205072696365206973207a65726f",
																		"kind": "string",
																		"nativeSrc": "4344:20:16",
																		"nodeType": "YulLiteral",
																		"src": "4344:20:16",
																		"type": "",
																		"value": "Item Price is zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4317:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4317:6:16"
																},
																"nativeSrc": "4317:48:16",
																"nodeType": "YulFunctionCall",
																"src": "4317:48:16"
															},
															"nativeSrc": "4317:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "4317:48:16"
														},
														{
															"nativeSrc": "4374:26:16",
															"nodeType": "YulAssignment",
															"src": "4374:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4386:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4386:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4397:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4382:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4382:3:16"
																},
																"nativeSrc": "4382:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4382:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4374:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4374:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f99fcefe44b2d6c729beaa170337e140da4ca44ee3c99eaaa4bafcc0b9e7c622__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4064:342:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4215:9:16",
														"nodeType": "YulTypedName",
														"src": "4215:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4229:4:16",
														"nodeType": "YulTypedName",
														"src": "4229:4:16",
														"type": ""
													}
												],
												"src": "4064:342:16"
											},
											{
												"body": {
													"nativeSrc": "4540:171:16",
													"nodeType": "YulBlock",
													"src": "4540:171:16",
													"statements": [
														{
															"nativeSrc": "4550:26:16",
															"nodeType": "YulAssignment",
															"src": "4550:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4562:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4562:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4573:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4573:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4558:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:16"
																},
																"nativeSrc": "4558:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4558:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4550:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4550:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4592:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4592:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4607:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4607:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4623:3:16",
																								"nodeType": "YulLiteral",
																								"src": "4623:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4628:1:16",
																								"nodeType": "YulLiteral",
																								"src": "4628:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4619:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "4619:3:16"
																						},
																						"nativeSrc": "4619:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4619:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4632:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4632:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4615:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4615:3:16"
																				},
																				"nativeSrc": "4615:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4615:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4603:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4603:3:16"
																		},
																		"nativeSrc": "4603:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4603:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4585:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:16"
																},
																"nativeSrc": "4585:51:16",
																"nodeType": "YulFunctionCall",
																"src": "4585:51:16"
															},
															"nativeSrc": "4585:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "4585:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4656:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4656:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4667:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4667:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4652:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:16"
																		},
																		"nativeSrc": "4652:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4652:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4676:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4676:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4692:3:16",
																								"nodeType": "YulLiteral",
																								"src": "4692:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4697:1:16",
																								"nodeType": "YulLiteral",
																								"src": "4697:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4688:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "4688:3:16"
																						},
																						"nativeSrc": "4688:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4688:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4701:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4701:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4684:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4684:3:16"
																				},
																				"nativeSrc": "4684:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4684:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4672:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:16"
																		},
																		"nativeSrc": "4672:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4645:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:16"
																},
																"nativeSrc": "4645:60:16",
																"nodeType": "YulFunctionCall",
																"src": "4645:60:16"
															},
															"nativeSrc": "4645:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "4645:60:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4411:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4501:9:16",
														"nodeType": "YulTypedName",
														"src": "4501:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4512:6:16",
														"nodeType": "YulTypedName",
														"src": "4512:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4520:6:16",
														"nodeType": "YulTypedName",
														"src": "4520:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4531:4:16",
														"nodeType": "YulTypedName",
														"src": "4531:4:16",
														"type": ""
													}
												],
												"src": "4411:300:16"
											},
											{
												"body": {
													"nativeSrc": "4797:103:16",
													"nodeType": "YulBlock",
													"src": "4797:103:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4843:16:16",
																"nodeType": "YulBlock",
																"src": "4843:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4852:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4852:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4855:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4855:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4845:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4845:6:16"
																			},
																			"nativeSrc": "4845:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4845:12:16"
																		},
																		"nativeSrc": "4845:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4845:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4818:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4818:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4827:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4827:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4814:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:16"
																		},
																		"nativeSrc": "4814:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4839:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4839:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4810:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4810:3:16"
																},
																"nativeSrc": "4810:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4810:32:16"
															},
															"nativeSrc": "4807:52:16",
															"nodeType": "YulIf",
															"src": "4807:52:16"
														},
														{
															"nativeSrc": "4868:26:16",
															"nodeType": "YulAssignment",
															"src": "4868:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4884:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4884:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4878:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4878:5:16"
																},
																"nativeSrc": "4878:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4878:16:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4868:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4868:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4716:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4763:9:16",
														"nodeType": "YulTypedName",
														"src": "4763:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4774:7:16",
														"nodeType": "YulTypedName",
														"src": "4774:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4786:6:16",
														"nodeType": "YulTypedName",
														"src": "4786:6:16",
														"type": ""
													}
												],
												"src": "4716:184:16"
											},
											{
												"body": {
													"nativeSrc": "5079:174:16",
													"nodeType": "YulBlock",
													"src": "5079:174:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5096:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5096:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5107:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5089:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5089:6:16"
																},
																"nativeSrc": "5089:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5089:21:16"
															},
															"nativeSrc": "5089:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5089:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5130:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5130:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5141:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5141:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5126:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5126:3:16"
																		},
																		"nativeSrc": "5126:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5126:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5146:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5146:2:16",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5119:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:16"
																},
																"nativeSrc": "5119:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5119:30:16"
															},
															"nativeSrc": "5119:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5119:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5169:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5169:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5180:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5180:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5165:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:16"
																		},
																		"nativeSrc": "5165:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5165:18:16"
																	},
																	{
																		"hexValue": "4c697374696e67207072696365206973206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "5185:26:16",
																		"nodeType": "YulLiteral",
																		"src": "5185:26:16",
																		"type": "",
																		"value": "Listing price is not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5158:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:16"
																},
																"nativeSrc": "5158:54:16",
																"nodeType": "YulFunctionCall",
																"src": "5158:54:16"
															},
															"nativeSrc": "5158:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "5158:54:16"
														},
														{
															"nativeSrc": "5221:26:16",
															"nodeType": "YulAssignment",
															"src": "5221:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5233:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5244:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5229:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5229:3:16"
																},
																"nativeSrc": "5229:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5229:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5221:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5221:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26c10054244c2acbf2a9a08ccdf7f5bfa4dc8d416cce2204430e2dabe22a96eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4905:348:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5056:9:16",
														"nodeType": "YulTypedName",
														"src": "5056:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5070:4:16",
														"nodeType": "YulTypedName",
														"src": "5070:4:16",
														"type": ""
													}
												],
												"src": "4905:348:16"
											},
											{
												"body": {
													"nativeSrc": "5415:214:16",
													"nodeType": "YulBlock",
													"src": "5415:214:16",
													"statements": [
														{
															"nativeSrc": "5425:26:16",
															"nodeType": "YulAssignment",
															"src": "5425:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5437:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5437:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5448:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5448:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5433:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5433:3:16"
																},
																"nativeSrc": "5433:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5433:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5425:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5425:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5467:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5467:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5482:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5482:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5498:3:16",
																								"nodeType": "YulLiteral",
																								"src": "5498:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5503:1:16",
																								"nodeType": "YulLiteral",
																								"src": "5503:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5494:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5494:3:16"
																						},
																						"nativeSrc": "5494:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5494:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5507:1:16",
																						"nodeType": "YulLiteral",
																						"src": "5507:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5490:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5490:3:16"
																				},
																				"nativeSrc": "5490:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5490:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5478:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5478:3:16"
																		},
																		"nativeSrc": "5478:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5478:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5460:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5460:6:16"
																},
																"nativeSrc": "5460:51:16",
																"nodeType": "YulFunctionCall",
																"src": "5460:51:16"
															},
															"nativeSrc": "5460:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "5460:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5531:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5531:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5542:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5542:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5527:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:16"
																		},
																		"nativeSrc": "5527:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5551:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5551:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5567:3:16",
																								"nodeType": "YulLiteral",
																								"src": "5567:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5572:1:16",
																								"nodeType": "YulLiteral",
																								"src": "5572:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5563:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5563:3:16"
																						},
																						"nativeSrc": "5563:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5563:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5576:1:16",
																						"nodeType": "YulLiteral",
																						"src": "5576:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5559:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5559:3:16"
																				},
																				"nativeSrc": "5559:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5559:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5547:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:16"
																		},
																		"nativeSrc": "5547:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5520:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:16"
																},
																"nativeSrc": "5520:60:16",
																"nodeType": "YulFunctionCall",
																"src": "5520:60:16"
															},
															"nativeSrc": "5520:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "5520:60:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5600:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5600:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5611:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5611:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5596:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:16"
																		},
																		"nativeSrc": "5596:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5616:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5616:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5589:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5589:6:16"
																},
																"nativeSrc": "5589:34:16",
																"nodeType": "YulFunctionCall",
																"src": "5589:34:16"
															},
															"nativeSrc": "5589:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "5589:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5258:371:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5368:9:16",
														"nodeType": "YulTypedName",
														"src": "5368:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5379:6:16",
														"nodeType": "YulTypedName",
														"src": "5379:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5387:6:16",
														"nodeType": "YulTypedName",
														"src": "5387:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5395:6:16",
														"nodeType": "YulTypedName",
														"src": "5395:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5406:4:16",
														"nodeType": "YulTypedName",
														"src": "5406:4:16",
														"type": ""
													}
												],
												"src": "5258:371:16"
											},
											{
												"body": {
													"nativeSrc": "5712:199:16",
													"nodeType": "YulBlock",
													"src": "5712:199:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5758:16:16",
																"nodeType": "YulBlock",
																"src": "5758:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5767:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5767:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5770:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5770:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5760:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5760:6:16"
																			},
																			"nativeSrc": "5760:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5760:12:16"
																		},
																		"nativeSrc": "5760:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5760:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5742:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5742:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5729:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5729:3:16"
																		},
																		"nativeSrc": "5729:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5729:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5754:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5754:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5725:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5725:3:16"
																},
																"nativeSrc": "5725:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5725:32:16"
															},
															"nativeSrc": "5722:52:16",
															"nodeType": "YulIf",
															"src": "5722:52:16"
														},
														{
															"nativeSrc": "5783:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5783:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5802:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5802:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5796:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5796:5:16"
																},
																"nativeSrc": "5796:16:16",
																"nodeType": "YulFunctionCall",
																"src": "5796:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5787:5:16",
																	"nodeType": "YulTypedName",
																	"src": "5787:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5865:16:16",
																"nodeType": "YulBlock",
																"src": "5865:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5874:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5874:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5877:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5877:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5867:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5867:6:16"
																			},
																			"nativeSrc": "5867:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5867:12:16"
																		},
																		"nativeSrc": "5867:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5867:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5834:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5834:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5855:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "5855:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5848:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "5848:6:16"
																						},
																						"nativeSrc": "5848:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5848:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5841:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "5841:6:16"
																				},
																				"nativeSrc": "5841:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5841:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5831:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5831:2:16"
																		},
																		"nativeSrc": "5831:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5831:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5824:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5824:6:16"
																},
																"nativeSrc": "5824:40:16",
																"nodeType": "YulFunctionCall",
																"src": "5824:40:16"
															},
															"nativeSrc": "5821:60:16",
															"nodeType": "YulIf",
															"src": "5821:60:16"
														},
														{
															"nativeSrc": "5890:15:16",
															"nodeType": "YulAssignment",
															"src": "5890:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "5900:5:16",
																"nodeType": "YulIdentifier",
																"src": "5900:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5890:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5890:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5634:277:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5678:9:16",
														"nodeType": "YulTypedName",
														"src": "5678:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5689:7:16",
														"nodeType": "YulTypedName",
														"src": "5689:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5701:6:16",
														"nodeType": "YulTypedName",
														"src": "5701:6:16",
														"type": ""
													}
												],
												"src": "5634:277:16"
											},
											{
												"body": {
													"nativeSrc": "6095:274:16",
													"nodeType": "YulBlock",
													"src": "6095:274:16",
													"statements": [
														{
															"nativeSrc": "6105:27:16",
															"nodeType": "YulAssignment",
															"src": "6105:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6117:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6117:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6128:3:16",
																		"nodeType": "YulLiteral",
																		"src": "6128:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6113:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:16"
																},
																"nativeSrc": "6113:19:16",
																"nodeType": "YulFunctionCall",
																"src": "6113:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6105:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6105:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6148:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6148:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6163:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6163:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6179:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6179:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6184:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6184:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6175:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6175:3:16"
																						},
																						"nativeSrc": "6175:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6175:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6188:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6188:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6171:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6171:3:16"
																				},
																				"nativeSrc": "6171:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6171:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6159:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6159:3:16"
																		},
																		"nativeSrc": "6159:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6159:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6141:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:16"
																},
																"nativeSrc": "6141:51:16",
																"nodeType": "YulFunctionCall",
																"src": "6141:51:16"
															},
															"nativeSrc": "6141:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "6141:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6212:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6212:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6223:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6223:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6208:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:16"
																		},
																		"nativeSrc": "6208:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6232:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6232:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6248:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6248:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6253:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6253:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6244:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6244:3:16"
																						},
																						"nativeSrc": "6244:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6244:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6257:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6257:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6240:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6240:3:16"
																				},
																				"nativeSrc": "6240:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6240:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6228:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:16"
																		},
																		"nativeSrc": "6228:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6228:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6201:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:16"
																},
																"nativeSrc": "6201:60:16",
																"nodeType": "YulFunctionCall",
																"src": "6201:60:16"
															},
															"nativeSrc": "6201:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "6201:60:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6281:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6281:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6292:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6292:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6277:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6277:3:16"
																		},
																		"nativeSrc": "6277:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6277:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6297:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6297:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6270:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6270:6:16"
																},
																"nativeSrc": "6270:34:16",
																"nodeType": "YulFunctionCall",
																"src": "6270:34:16"
															},
															"nativeSrc": "6270:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "6270:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6324:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6324:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6335:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6335:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6320:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6320:3:16"
																		},
																		"nativeSrc": "6320:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6320:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "6354:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6354:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6347:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "6347:6:16"
																				},
																				"nativeSrc": "6347:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6347:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6340:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6340:6:16"
																		},
																		"nativeSrc": "6340:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6340:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6313:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6313:6:16"
																},
																"nativeSrc": "6313:50:16",
																"nodeType": "YulFunctionCall",
																"src": "6313:50:16"
															},
															"nativeSrc": "6313:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "6313:50:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "5916:453:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6040:9:16",
														"nodeType": "YulTypedName",
														"src": "6040:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6051:6:16",
														"nodeType": "YulTypedName",
														"src": "6051:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6059:6:16",
														"nodeType": "YulTypedName",
														"src": "6059:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6067:6:16",
														"nodeType": "YulTypedName",
														"src": "6067:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6075:6:16",
														"nodeType": "YulTypedName",
														"src": "6075:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6086:4:16",
														"nodeType": "YulTypedName",
														"src": "6086:4:16",
														"type": ""
													}
												],
												"src": "5916:453:16"
											},
											{
												"body": {
													"nativeSrc": "6511:145:16",
													"nodeType": "YulBlock",
													"src": "6511:145:16",
													"statements": [
														{
															"nativeSrc": "6521:26:16",
															"nodeType": "YulAssignment",
															"src": "6521:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6533:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6533:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6544:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6544:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6529:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:16"
																},
																"nativeSrc": "6529:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6529:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6521:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6521:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6563:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6563:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6578:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6578:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6594:3:16",
																								"nodeType": "YulLiteral",
																								"src": "6594:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6599:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6599:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6590:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6590:3:16"
																						},
																						"nativeSrc": "6590:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6590:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6603:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6603:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6586:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6586:3:16"
																				},
																				"nativeSrc": "6586:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6586:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6574:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6574:3:16"
																		},
																		"nativeSrc": "6574:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6574:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6556:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6556:6:16"
																},
																"nativeSrc": "6556:51:16",
																"nodeType": "YulFunctionCall",
																"src": "6556:51:16"
															},
															"nativeSrc": "6556:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "6556:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6627:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6627:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6638:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6638:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6623:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6623:3:16"
																		},
																		"nativeSrc": "6623:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6623:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6643:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6643:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6616:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:16"
																},
																"nativeSrc": "6616:34:16",
																"nodeType": "YulFunctionCall",
																"src": "6616:34:16"
															},
															"nativeSrc": "6616:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "6616:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6374:282:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6472:9:16",
														"nodeType": "YulTypedName",
														"src": "6472:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6483:6:16",
														"nodeType": "YulTypedName",
														"src": "6483:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6491:6:16",
														"nodeType": "YulTypedName",
														"src": "6491:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6502:4:16",
														"nodeType": "YulTypedName",
														"src": "6502:4:16",
														"type": ""
													}
												],
												"src": "6374:282:16"
											},
											{
												"body": {
													"nativeSrc": "6835:174:16",
													"nodeType": "YulBlock",
													"src": "6835:174:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6852:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6852:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6863:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6863:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6845:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:16"
																},
																"nativeSrc": "6845:21:16",
																"nodeType": "YulFunctionCall",
																"src": "6845:21:16"
															},
															"nativeSrc": "6845:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "6845:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6886:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6886:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6897:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6897:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6882:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6882:3:16"
																		},
																		"nativeSrc": "6882:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6882:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6902:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6902:2:16",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6875:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6875:6:16"
																},
																"nativeSrc": "6875:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6875:30:16"
															},
															"nativeSrc": "6875:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6875:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6925:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6925:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6936:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6936:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6921:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:16"
																		},
																		"nativeSrc": "6921:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6921:18:16"
																	},
																	{
																		"hexValue": "4c697374696e67205072696365206973206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "6941:26:16",
																		"nodeType": "YulLiteral",
																		"src": "6941:26:16",
																		"type": "",
																		"value": "Listing Price is not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6914:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6914:6:16"
																},
																"nativeSrc": "6914:54:16",
																"nodeType": "YulFunctionCall",
																"src": "6914:54:16"
															},
															"nativeSrc": "6914:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "6914:54:16"
														},
														{
															"nativeSrc": "6977:26:16",
															"nodeType": "YulAssignment",
															"src": "6977:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6989:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6989:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7000:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7000:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6985:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6985:3:16"
																},
																"nativeSrc": "6985:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6985:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6977:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6977:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c2070eb6044bab832f5a7b52eb617410e2bfe7b6a3d87012b83b486a16fa344__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6661:348:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6812:9:16",
														"nodeType": "YulTypedName",
														"src": "6812:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6826:4:16",
														"nodeType": "YulTypedName",
														"src": "6826:4:16",
														"type": ""
													}
												],
												"src": "6661:348:16"
											},
											{
												"body": {
													"nativeSrc": "7143:145:16",
													"nodeType": "YulBlock",
													"src": "7143:145:16",
													"statements": [
														{
															"nativeSrc": "7153:26:16",
															"nodeType": "YulAssignment",
															"src": "7153:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7165:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7165:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7176:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7176:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7161:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:16"
																},
																"nativeSrc": "7161:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7161:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7153:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7153:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7195:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7195:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7210:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7210:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7226:3:16",
																								"nodeType": "YulLiteral",
																								"src": "7226:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7231:1:16",
																								"nodeType": "YulLiteral",
																								"src": "7231:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7222:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "7222:3:16"
																						},
																						"nativeSrc": "7222:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "7222:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7235:1:16",
																						"nodeType": "YulLiteral",
																						"src": "7235:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7218:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7218:3:16"
																				},
																				"nativeSrc": "7218:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7218:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7206:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7206:3:16"
																		},
																		"nativeSrc": "7206:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7206:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7188:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7188:6:16"
																},
																"nativeSrc": "7188:51:16",
																"nodeType": "YulFunctionCall",
																"src": "7188:51:16"
															},
															"nativeSrc": "7188:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "7188:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7259:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7259:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7270:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7270:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7255:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7255:3:16"
																		},
																		"nativeSrc": "7255:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7255:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7275:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7275:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7248:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7248:6:16"
																},
																"nativeSrc": "7248:34:16",
																"nodeType": "YulFunctionCall",
																"src": "7248:34:16"
															},
															"nativeSrc": "7248:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "7248:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7014:274:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7104:9:16",
														"nodeType": "YulTypedName",
														"src": "7104:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7115:6:16",
														"nodeType": "YulTypedName",
														"src": "7115:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7123:6:16",
														"nodeType": "YulTypedName",
														"src": "7123:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7134:4:16",
														"nodeType": "YulTypedName",
														"src": "7134:4:16",
														"type": ""
													}
												],
												"src": "7014:274:16"
											},
											{
												"body": {
													"nativeSrc": "7467:181:16",
													"nodeType": "YulBlock",
													"src": "7467:181:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7484:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7484:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7495:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7495:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7477:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7477:6:16"
																},
																"nativeSrc": "7477:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7477:21:16"
															},
															"nativeSrc": "7477:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7477:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7518:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7518:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7529:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7529:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7514:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7514:3:16"
																		},
																		"nativeSrc": "7514:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7514:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7534:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7534:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7507:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:16"
																},
																"nativeSrc": "7507:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7507:30:16"
															},
															"nativeSrc": "7507:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7507:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7557:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7557:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7568:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7568:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7553:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7553:3:16"
																		},
																		"nativeSrc": "7553:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7553:18:16"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "7573:33:16",
																		"nodeType": "YulLiteral",
																		"src": "7573:33:16",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7546:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7546:6:16"
																},
																"nativeSrc": "7546:61:16",
																"nodeType": "YulFunctionCall",
																"src": "7546:61:16"
															},
															"nativeSrc": "7546:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "7546:61:16"
														},
														{
															"nativeSrc": "7616:26:16",
															"nodeType": "YulAssignment",
															"src": "7616:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7628:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7628:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7639:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7639:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7624:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7624:3:16"
																},
																"nativeSrc": "7624:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7624:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7616:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7616:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7293:355:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7444:9:16",
														"nodeType": "YulTypedName",
														"src": "7444:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7458:4:16",
														"nodeType": "YulTypedName",
														"src": "7458:4:16",
														"type": ""
													}
												],
												"src": "7293:355:16"
											},
											{
												"body": {
													"nativeSrc": "7827:177:16",
													"nodeType": "YulBlock",
													"src": "7827:177:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7844:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7844:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7855:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7855:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7837:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7837:6:16"
																},
																"nativeSrc": "7837:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7837:21:16"
															},
															"nativeSrc": "7837:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7837:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7878:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7878:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7889:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7889:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7874:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7874:3:16"
																		},
																		"nativeSrc": "7874:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7874:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7894:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7894:2:16",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7867:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7867:6:16"
																},
																"nativeSrc": "7867:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7867:30:16"
															},
															"nativeSrc": "7867:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7867:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7917:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7917:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7928:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7928:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7913:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7913:3:16"
																		},
																		"nativeSrc": "7913:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7913:18:16"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "7933:29:16",
																		"nodeType": "YulLiteral",
																		"src": "7933:29:16",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7906:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7906:6:16"
																},
																"nativeSrc": "7906:57:16",
																"nodeType": "YulFunctionCall",
																"src": "7906:57:16"
															},
															"nativeSrc": "7906:57:16",
															"nodeType": "YulExpressionStatement",
															"src": "7906:57:16"
														},
														{
															"nativeSrc": "7972:26:16",
															"nodeType": "YulAssignment",
															"src": "7972:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7984:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7984:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7995:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7995:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7980:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7980:3:16"
																},
																"nativeSrc": "7980:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7980:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7972:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7972:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7653:351:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7804:9:16",
														"nodeType": "YulTypedName",
														"src": "7804:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7818:4:16",
														"nodeType": "YulTypedName",
														"src": "7818:4:16",
														"type": ""
													}
												],
												"src": "7653:351:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$279__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_struct_Item(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x80), and(mload(add(value, 0x80)), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n        mstore(add(pos, 0xc0), iszero(iszero(mload(add(value, 0xc0)))))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_Item(mload(srcPtr), pos)\n            pos := add(pos, 0xe0)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_struct$_Item_$3112_memory_ptr__to_t_struct$_Item_$3112_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        abi_encode_struct_Item(value0, headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_c5729c5951217e82698b009f0228c772240632422f06d27d3078726c074a78ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"You are not the owner of this it\")\n        mstore(add(headStart, 96), \"em\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f99fcefe44b2d6c729beaa170337e140da4ca44ee3c99eaaa4bafcc0b9e7c622__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Item Price is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_26c10054244c2acbf2a9a08ccdf7f5bfa4dc8d416cce2204430e2dabe22a96eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Listing price is not met\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_7c2070eb6044bab832f5a7b52eb617410e2bfe7b6a3d87012b83b486a16fa344__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Listing Price is not met\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89BFD38F GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x89BFD38F EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x8F0AF0F9 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x9F37092A EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF2A7A2B4 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF9319C53 EQ PUSH2 0x16B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12E85585 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2AD8A220 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x3B1B1AD0 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x4D757A1C EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x5A599DA8 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x300 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x110 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x110 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x17F PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x18B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B5 JUMPI PUSH2 0x1B5 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1DB PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI ADDRESS PUSH1 0x6 PUSH0 PUSH2 0x20A DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x2EF JUMPI PUSH0 PUSH1 0x6 DUP2 PUSH2 0x23A DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x6 DUP1 DUP6 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP7 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x2D4 JUMPI PUSH2 0x2D4 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x2EA PUSH1 0x1 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F3 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x30C PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x360 JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0x329 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x358 JUMPI PUSH2 0x355 PUSH1 0x1 DUP5 PUSH2 0x131F JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x312 JUMP JUMPDEST POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3B4 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3A1 PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x399 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0x3D0 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4B5 JUMPI PUSH0 PUSH1 0x6 DUP2 PUSH2 0x400 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x6 DUP1 DUP6 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP7 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x49A PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4B0 PUSH1 0x1 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3B9 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x4FF JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH4 0x47AD5E4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x584 PUSH2 0x10BB JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCC29701 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4974656D205072696365206973207A65726F PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F36F1B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x131A5CDD1A5B99C81C1C9A58D9481A5CC81B9BDD081B595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x6BF SWAP3 CALLER SWAP3 ADDRESS SWAP3 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH2 0x70E PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x718 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP11 DUP2 MSTORE CALLER PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE ADDRESS PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP11 ADD DUP15 DUP2 MSTORE PUSH0 PUSH1 0xC0 DUP13 ADD DUP2 DUP2 MSTORE DUP15 DUP3 MSTORE PUSH1 0x6 SWAP10 DUP11 SWAP1 MSTORE SWAP1 DUP14 SWAP1 KECCAK256 SWAP12 MLOAD DUP13 SSTORE SWAP7 MLOAD PUSH1 0x1 DUP13 ADD DUP1 SLOAD SWAP2 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP6 MLOAD PUSH1 0x2 DUP13 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 DUP12 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP1 DUP12 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP11 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP8 SSTORE MLOAD PUSH1 0x5 DUP9 ADD SSTORE SWAP2 MLOAD SWAP6 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP6 POP SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x7F9 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 ADD PUSH2 0x139F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x810 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x822 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0xF8551F8BE25732324FCDA411A126B3C851E038B0FF8D097A3951DDED3772F43F CALLER ADDRESS DUP8 PUSH0 PUSH1 0x40 MLOAD PUSH2 0x867 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP POP PUSH2 0x8F5 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x902 PUSH2 0x10BB JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH4 0x47AD5E4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST LT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F36F1B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x131A5CDD1A5B99C81C1C9A58D9481A5CC81B9BDD081B595D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xA31 SWAP3 CALLER SWAP3 ADDRESS SWAP3 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND ADDRESS OR SWAP1 SSTORE PUSH2 0xAC3 PUSH1 0x2 PUSH2 0x1112 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xB05 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x139F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x52679D6CF973DFF612DE0D67AD1642E7B8B401DCB1C41EA86BF35B82AC6BF88 CALLER ADDRESS DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xB72 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0x10BB JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SLOAD SWAP4 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 SWAP3 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC32 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC56 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST LT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F36F1B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697374696E67205072696365206973206E6F74206D65740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xCD9 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD4A SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x139F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD61 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE2A PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9A9F9FAF9D964B2FB1888CDF05202BAF5A1B99D45F7AFD6A5E062AC544B3C150 ADDRESS CALLER DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE6B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xE7F PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE8B PUSH2 0x1168 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xF0A PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF5E JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0xF27 DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF56 JUMPI PUSH2 0xF53 PUSH1 0x1 DUP5 PUSH2 0x131F JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF10 JUMP JUMPDEST POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF79 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFB2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF9F PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF97 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI CALLER PUSH1 0x6 PUSH0 PUSH2 0xFCE DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x10B3 JUMPI PUSH0 PUSH1 0x6 DUP2 PUSH2 0xFFE DUP5 PUSH1 0x1 PUSH2 0x131F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x6 DUP1 DUP6 MSTORE SWAP2 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP7 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP2 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x1098 JUMPI PUSH2 0x1098 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x10AE PUSH1 0x1 DUP7 PUSH2 0x131F JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x51D JUMP JUMPDEST PUSH0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x123B JUMPI PUSH2 0x1225 DUP4 DUP6 MLOAD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0xE0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1212 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1273 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x128A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1293 DUP5 PUSH2 0x125D JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C2 DUP4 PUSH2 0x125D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD PUSH2 0x12DE DUP3 DUP5 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DE PUSH2 0x12E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x12DE JUMPI PUSH2 0x12DE PUSH2 0x12E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973206974 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x656D PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH19 0x2109414DB35402CEB552184BE9BF3575D6917B BYTE 0xF SMOD 0xAE 0xCD COINBASE PREVRANDAO MSTORE 0xFB 0xB3 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "566:8766:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:97;2085:12;;2008:97;;160:25:16;;;148:2;133:18;2008:97:15;;;;;;;;933:26;;;;;-1:-1:-1;;;;;933:26:15;;;;;;-1:-1:-1;;;;;374:32:16;;;356:51;;344:2;329:18;933:26:15;196:217:16;2142:650:15;;;:::i;:::-;;;;;;;:::i;2861:780::-;;;:::i;8970:359::-;;;;;;:::i;:::-;;:::i;:::-;;4644:1642;;;;;;:::i;:::-;;:::i;7586:1376::-;;;;;;:::i;:::-;;:::i;6311:1252::-;;;;;;:::i;:::-;;:::i;4497:118::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3704:785::-;;;:::i;2142:650::-;2194:13;2220:14;2237:18;:8;918:14:9;;827:112;2237:18:15;2220:35;;2266:21;2311:19;:9;918:14:9;;827:112;2311:19:15;2290:8;918:14:9;2290:40:15;;;;:::i;:::-;2266:64;;2341:17;2375:19;2408:16;2397:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2375:50;;2441:6;2436:324;2457:9;2453:1;:13;2436:324;;;2522:4;2492:5;:12;2498:5;:1;2502;2498:5;:::i;:::-;2492:12;;;;;;;;;;;-1:-1:-1;2492:12:15;:18;;;-1:-1:-1;;;;;2492:18:15;:35;2488:261;;2548:14;2565:5;2548:14;2571:5;:1;2575;2571:5;:::i;:::-;2565:12;;;;;;;;;;;;;;-1:-1:-1;2565:12:15;;;:19;2629:16;;;:5;:16;;;;;;;2603:42;;;;;;;;;;;;;;;-1:-1:-1;;;;;2603:42:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2664:19;;2565;;-1:-1:-1;2603:42:15;;;2664:5;;2670:12;;2664:19;;;;;;:::i;:::-;;;;;;;;;;:33;2716:17;2732:1;2716:17;;:::i;:::-;;;2529:220;;2488:261;2468:3;;2436:324;;;-1:-1:-1;2779:5:15;2142:650;-1:-1:-1;;;;2142:650:15:o;2861:780::-;2915:13;2941:21;2965:18;:8;918:14:9;;827:112;2965:18:15;2941:42;;2994:14;3023:17;3062:9;3057:160;3081:16;3077:1;:20;3057:160;;;3145:10;3123:5;:12;3129:5;:1;3133;3129:5;:::i;:::-;3123:12;;;;;;;;;;;-1:-1:-1;3123:12:15;:18;;;-1:-1:-1;;;;;3123:18:15;:32;3119:87;;3176:14;3189:1;3176:14;;:::i;:::-;;;3119:87;3099:3;;3057:160;;;;3229:19;3262:9;3251:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3229:43;;3288:6;3283:328;3304:16;3300:1;:20;3283:328;;;3368:10;3346:5;:12;3352:5;:1;3356;3352:5;:::i;:::-;3346:12;;;;;;;;;;;-1:-1:-1;3346:12:15;:18;;;-1:-1:-1;;;;;3346:18:15;:32;3342:258;;3399:14;3416:5;3399:14;3422:5;:1;3426;3422:5;:::i;:::-;3416:12;;;;;;;;;;;;;;-1:-1:-1;3416:12:15;;;:19;3480:16;;;:5;:16;;;;;;;3454:42;;;;;;;;;;;;;;;-1:-1:-1;;;;;3454:42:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3515:19;;3416;;-1:-1:-1;3454:42:15;;;3515:5;;3521:12;;3515:19;;;;;;:::i;:::-;;;;;;;;;;:33;3567:17;3583:1;3567:17;;:::i;:::-;;;3380:220;;3342:258;3322:3;;3283:328;;8970:359;9031:14;;;;:5;:14;;;;;:21;;;-1:-1:-1;;;;;9031:21:15;9056:10;9031:35;;;;:73;;-1:-1:-1;9070:14:15;;;;:5;:14;;;;;:20;;;-1:-1:-1;;;;;9070:20:15;9094:10;9070:34;;9031:73;9027:191;;;9128:78;;-1:-1:-1;;;9128:78:15;;;;;;;:::i;:::-;;;;;;;;9027:191;9307:14;;;;:5;:14;;;;;;;9300:21;;;;;;;;-1:-1:-1;;;;;;9300:21:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9300:21:15;;;8970:359::o;4644:1642::-;2261:21:1;:19;:21::i;:::-;4786:6:15::1;4796:1;4786:11:::0;4782:120:::1;;4837:53;::::0;-1:-1:-1;;;4837:53:15;;4266:2:16;4837:53:15::1;::::0;::::1;4248:21:16::0;4305:2;4285:18;;;4278:30;-1:-1:-1;;;4324:18:16;;;4317:48;4382:18;;4837:53:15::1;4064:342:16::0;4782:120:15::1;5217:12;::::0;;5165::::1;::::0;:49:::1;::::0;-1:-1:-1;;;5165:49:15;;5188:10:::1;5165:49:::0;;::::1;4585:51:16::0;;;;5208:4:15::1;4652:18:16::0;;;4645:60;5217:12:15;;-1:-1:-1;;;;;5165:12:15;;::::1;::::0;:22:::1;::::0;4558:18:16;;5165:49:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;5161:168;;;5253:64;::::0;-1:-1:-1;;;5253:64:15;;5107:2:16;5253:64:15::1;::::0;::::1;5089:21:16::0;5146:2;5126:18;;;5119:30;-1:-1:-1;;;5165:18:16;;;5158:54;5229:18;;5253:64:15::1;4905:348:16::0;5161:168:15::1;5411:12;::::0;5464::::1;::::0;;5411:66:::1;::::0;-1:-1:-1;;;5411:66:15;;-1:-1:-1;;;;;5411:12:15;;::::1;::::0;:25:::1;::::0;:66:::1;::::0;5437:10:::1;::::0;5457:4:::1;::::0;5411:66:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5488:20;:8;1032:19:9::0;;1050:1;1032:19;;;945:123;5488:20:15::1;5519:13;5535:18;:8;918:14:9::0;;827:112;5535:18:15::1;5584:181;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;5584:181:15;;::::1;;::::0;;::::1;::::0;;;;;;;;;5675:10:::1;5584:181:::0;;;;;;5708:4:::1;5584:181:::0;;;;;;;;;;;;-1:-1:-1;5584:181:15;;;;;;5566:15;;;:5:::1;:15:::0;;;;;;;;:199;;;;;;5584:181;5566:199;::::1;::::0;;;;::::1;-1:-1:-1::0;;;;;;5566:199:15;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;::::1;;-1:-1:-1::0;;5566:199:15;;::::1;::::0;;;::::1;::::0;;;5778:70;;-1:-1:-1;;;5778:70:15;;5519:34;;-1:-1:-1;5584:181:15;5778:33:::1;::::0;:70:::1;::::0;5675:10;5708:4;5652:8;;5778:70:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5938:8;5912:11;-1:-1:-1::0;;;;;5866:185:15::1;5889:8;5866:185;5961:10;5994:4;6014:6;6035:5;5866:185;;;;;;;;;:::i;:::-;;;;;;;;6215:12;::::0;6237:5:::1;::::0;6244:12:::1;::::0;;6215:42:::1;::::0;-1:-1:-1;;;6215:42:15;;-1:-1:-1;;;;;6237:5:15;;::::1;6215:42:::0;;::::1;6556:51:16::0;;;;6623:18;;;6616:34;6215:12:15;::::1;::::0;:21:::1;::::0;6529:18:16;;6215:42:15::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4771:1515;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;4644:1642:15;;;:::o;7586:1376::-;2261:21:1;:19;:21::i;:::-;7729:14:15::1;::::0;;;:5:::1;:14;::::0;;;;:20:::1;;::::0;-1:-1:-1;;;;;7729:20:15::1;7753:10;7729:34;7725:152;;7787:78;;-1:-1:-1::0;;;7787:78:15::1;;;;;;;:::i;7725:152::-;8135:12;::::0;;8083::::1;::::0;:49:::1;::::0;-1:-1:-1;;;8083:49:15;;8106:10:::1;8083:49:::0;;::::1;4585:51:16::0;;;;8126:4:15::1;4652:18:16::0;;;4645:60;8135:12:15;;-1:-1:-1;;;;;8083:12:15;;::::1;::::0;:22:::1;::::0;4558:18:16;;8083:49:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;8079:168;;;8171:64;::::0;-1:-1:-1;;;8171:64:15;;5107:2:16;8171:64:15::1;::::0;::::1;5089:21:16::0;5146:2;5126:18;;;5119:30;-1:-1:-1;;;5165:18:16;;;5158:54;5229:18;;8171:64:15::1;4905:348:16::0;8079:168:15::1;8329:12;::::0;8382::::1;::::0;;8329:66:::1;::::0;-1:-1:-1;;;8329:66:15;;-1:-1:-1;;;;;8329:12:15;;::::1;::::0;:25:::1;::::0;:66:::1;::::0;8355:10:::1;::::0;8375:4:::1;::::0;8329:66:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;8428:5:15::1;8406:14:::0;;;:5:::1;:14;::::0;;;;;;;:19;;::::1;:27:::0;;-1:-1:-1;;8406:27:15::1;::::0;;8444:20:::1;::::0;::::1;:29:::0;;;8484:21:::1;::::0;::::1;:34:::0;;-1:-1:-1;;;;;;8484:34:15;;::::1;8508:10;8484:34;::::0;;;8529:20:::1;::::0;;::::1;:36:::0;;;;::::1;8560:4;8529:36;::::0;;8576:21:::1;-1:-1:-1::0;8576:19:15::1;:21::i;:::-;8610:13;8626:14:::0;;;:5:::1;:14;::::0;;;;;;:22:::1;;::::0;8659:70;;-1:-1:-1;;;8659:70:15;;-1:-1:-1;;;;;8659:33:15;::::1;::::0;::::1;::::0;:70:::1;::::0;8693:10:::1;::::0;8713:4:::1;::::0;8626:22;;8659:70:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8771:8;8758:11;-1:-1:-1::0;;;;;8747:75:15::1;;8781:10;8801:4;8808:6;8816:5;8747:75;;;;;;;;;:::i;:::-;;;;;;;;8891:12;::::0;8913:5:::1;::::0;8920:12:::1;::::0;;8891:42:::1;::::0;-1:-1:-1;;;8891:42:15;;-1:-1:-1;;;;;8913:5:15;;::::1;8891:42:::0;;::::1;6556:51:16::0;;;;6623:18;;;6616:34;8891:12:15;::::1;::::0;:21:::1;::::0;6529:18:16;;8891:42:15::1;6374:282:16::0;6311:1252:15;2261:21:1;:19;:21::i;:::-;6422:13:15::1;6438:14:::0;;;:5:::1;:14;::::0;;;;;;:20:::1;::::0;;::::1;::::0;6487:22:::1;::::0;::::1;::::0;6537:21:::1;::::0;;::::1;::::0;6745:12;;:49;;-1:-1:-1;;;6745:49:15;;6768:10:::1;6745:49;::::0;::::1;4585:51:16::0;6788:4:15::1;4652:18:16::0;;;4645:60;6438:20:15;;-1:-1:-1;;;;;6537:21:15;;::::1;::::0;6438:20;;6745:12;::::1;::::0;:22:::1;::::0;4558:18:16;;6745:49:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;6741:161;;;6826:64;::::0;-1:-1:-1;;;6826:64:15;;6863:2:16;6826:64:15::1;::::0;::::1;6845:21:16::0;6902:2;6882:18;;;6875:30;6941:26;6921:18;;;6914:54;6985:18;;6826:64:15::1;6661:348:16::0;6741:161:15::1;6984:12;::::0;:59:::1;::::0;-1:-1:-1;;;6984:59:15;;-1:-1:-1;;;;;6984:12:15;;::::1;::::0;:25:::1;::::0;:59:::1;::::0;7010:10:::1;::::0;7030:4:::1;::::0;7037:5;;6984:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7096:69:15::1;::::0;-1:-1:-1;;;7096:69:15;;-1:-1:-1;;;;;7096:33:15;::::1;::::0;::::1;::::0;:69:::1;::::0;7138:4:::1;::::0;7145:10:::1;::::0;7157:7;;7096:69:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7176:12:15::1;::::0;:36:::1;::::0;-1:-1:-1;;;7176:36:15;;-1:-1:-1;;;;;6574:32:16;;;7176:36:15::1;::::0;::::1;6556:51:16::0;6623:18;;;6616:34;;;7176:12:15;;::::1;::::0;-1:-1:-1;7176:21:15::1;::::0;-1:-1:-1;6529:18:16;;7176:36:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7274:14:15::1;::::0;;;:5:::1;:14;::::0;;;;;;;:20:::1;::::0;::::1;:33:::0;;-1:-1:-1;;;;;;7274:33:15::1;7297:10;7274:33;::::0;;7318:19:::1;:26:::0;;-1:-1:-1;;7318:26:15::1;7274:33:::0;7318:26:::1;::::0;;7355:21:::1;:9;1032:19:9::0;;1050:1;1032:19;;;945:123;7355:21:15::1;7445:7;7419:11;-1:-1:-1::0;;;;;7394:161:15::1;;7475:4;7495:10;7520:5;7540:4;7394:161;;;;;;;;;:::i;:::-;;;;;;;;6411:1152;;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;6311:1252:15;;:::o;4497:118::-;4563:11;;:::i;:::-;-1:-1:-1;4593:14:15;;;;:5;:14;;;;;;;;;4586:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;4586:21:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4497:118::o;3704:785::-;3759:13;3785:21;3809:18;:8;918:14:9;;827:112;3809:18:15;3785:42;;3838:14;3867:17;3906:9;3901:161;3925:16;3921:1;:20;3901:161;;;3990:10;3967:5;:12;3973:5;:1;3977;3973:5;:::i;:::-;3967:12;;;;;;;;;;;-1:-1:-1;3967:12:15;:19;;;-1:-1:-1;;;;;3967:19:15;:33;3963:88;;4021:14;4034:1;4021:14;;:::i;:::-;;;3963:88;3943:3;;3901:161;;;;4074:19;4107:9;4096:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4074:43;;4133:6;4128:329;4149:16;4145:1;:20;4128:329;;;4214:10;4191:5;:12;4197:5;:1;4201;4197:5;:::i;:::-;4191:12;;;;;;;;;;;-1:-1:-1;4191:12:15;:19;;;-1:-1:-1;;;;;4191:19:15;:33;4187:259;;4245:14;4262:5;4245:14;4268:5;:1;4272;4268:5;:::i;:::-;4262:12;;;;;;;;;;;;;;-1:-1:-1;4262:12:15;;;:19;4326:16;;;:5;:16;;;;;;;4300:42;;;;;;;;;;;;;;;-1:-1:-1;;;;;4300:42:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4361:19;;4262;;-1:-1:-1;4300:42:15;;;4361:5;;4367:12;;4361:19;;;;;;:::i;:::-;;;;;;;;;;:33;4413:17;4429:1;4413:17;;:::i;:::-;;;4226:220;;4187:259;4167:3;;4128:329;;2336:287:1;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;7495:2:16;2460:63:1;;;7477:21:16;7534:2;7514:18;;;7507:30;7573:33;7553:18;;;7546:61;7624:18;;2460:63:1;7293:355:16;2460:63:1;1759:1;2598:7;:18;2336:287::o;1074:229:9:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:9;;7855:2:16;1177:49:9;;;7837:21:16;7894:2;7874:18;;;7867:30;7933:29;7913:18;;;7906:57;7980:18;;1177:49:9;7653:351:16;1177:49:9;-1:-1:-1;;1277:9:9;1260:26;;1074:229::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;418:519:16:-;488:12;;476:25;;554:4;543:16;;;537:23;-1:-1:-1;;;;;533:49:16;;;517:14;;;510:73;;;;632:4;621:16;;;615:23;599:14;;;592:47;692:4;681:16;;;675:23;671:49;;655:14;;;648:73;774:4;763:16;;;757:23;753:49;;;737:14;;;730:73;570:3;841:16;;;835:23;819:14;;;812:47;922:4;911:16;;;905:23;898:31;891:39;875:14;;868:63;418:519::o;942:673::-;1176:2;1188:21;;;1258:13;;1161:18;;;1280:22;;;1128:4;;1359:15;;;1333:2;1318:18;;;1128:4;1402:187;1416:6;1413:1;1410:13;1402:187;;;1465:42;1503:3;1494:6;1488:13;1465:42;:::i;:::-;1576:2;1564:15;;;;;1536:4;1527:14;;;;;1438:1;1431:9;1402:187;;;-1:-1:-1;1606:3:16;;942:673;-1:-1:-1;;;;;942:673:16:o;1620:226::-;1679:6;1732:2;1720:9;1711:7;1707:23;1703:32;1700:52;;;1748:1;1745;1738:12;1700:52;-1:-1:-1;1793:23:16;;1620:226;-1:-1:-1;1620:226:16:o;1851:173::-;1919:20;;-1:-1:-1;;;;;1968:31:16;;1958:42;;1948:70;;2014:1;2011;2004:12;1948:70;1851:173;;;:::o;2029:420::-;2106:6;2114;2122;2175:2;2163:9;2154:7;2150:23;2146:32;2143:52;;;2191:1;2188;2181:12;2143:52;2214:29;2233:9;2214:29;:::i;:::-;2204:39;2312:2;2297:18;;2284:32;;-1:-1:-1;2413:2:16;2398:18;;;2385:32;;2029:420;-1:-1:-1;;;2029:420:16:o;2454:300::-;2522:6;2530;2583:2;2571:9;2562:7;2558:23;2554:32;2551:52;;;2599:1;2596;2589:12;2551:52;2622:29;2641:9;2622:29;:::i;:::-;2612:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2454:300:16:o;2759:238::-;2937:3;2922:19;;2950:41;2926:9;2973:6;2950:41;:::i;:::-;2759:238;;;;:::o;3002:127::-;3063:10;3058:3;3054:20;3051:1;3044:31;3094:4;3091:1;3084:15;3118:4;3115:1;3108:15;3134:128;3201:9;;;3222:11;;;3219:37;;;3236:18;;:::i;3267:127::-;3328:10;3323:3;3319:20;3316:1;3309:31;3359:4;3356:1;3349:15;3383:4;3380:1;3373:15;3399:125;3464:9;;;3485:10;;;3482:36;;;3498:18;;:::i;3529:127::-;3590:10;3585:3;3581:20;3578:1;3571:31;3621:4;3618:1;3611:15;3645:4;3642:1;3635:15;3661:398;3863:2;3845:21;;;3902:2;3882:18;;;3875:30;3941:34;3936:2;3921:18;;3914:62;-1:-1:-1;;;4007:2:16;3992:18;;3985:32;4049:3;4034:19;;3661:398::o;4716:184::-;4786:6;4839:2;4827:9;4818:7;4814:23;4810:32;4807:52;;;4855:1;4852;4845:12;4807:52;-1:-1:-1;4878:16:16;;4716:184;-1:-1:-1;4716:184:16:o;5258:371::-;-1:-1:-1;;;;;5478:32:16;;;5460:51;;5547:32;;;;5542:2;5527:18;;5520:60;5611:2;5596:18;;5589:34;;;;5448:2;5433:18;;5258:371::o;5634:277::-;5701:6;5754:2;5742:9;5733:7;5729:23;5725:32;5722:52;;;5770:1;5767;5760:12;5722:52;5802:9;5796:16;5855:5;5848:13;5841:21;5834:5;5831:32;5821:60;;5877:1;5874;5867:12;5821:60;5900:5;5634:277;-1:-1:-1;;;5634:277:16:o;5916:453::-;-1:-1:-1;;;;;6159:32:16;;;6141:51;;6228:32;;;;6223:2;6208:18;;6201:60;6292:2;6277:18;;6270:34;6347:14;;6340:22;6335:2;6320:18;;6313:50;6128:3;6113:19;;5916:453::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1038400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyItem(address,uint256)": "infinite",
								"getAllListedItems()": "infinite",
								"getListingPrice()": "2269",
								"getOwnerListedItems()": "infinite",
								"getParticularItem(uint256)": "15857",
								"getSellerListedItems()": "infinite",
								"listItem(address,uint256,uint256)": "infinite",
								"resellItem(address,uint256,uint256)": "infinite",
								"tradingToken()": "2359",
								"unlistItem(uint256)": "116768"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 566,
									"end": 9332,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 837,
									"end": 855,
									"name": "PUSH",
									"source": 15,
									"value": "58D15E17628000"
								},
								{
									"begin": 814,
									"end": 855,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 814,
									"end": 855,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 968,
									"end": 1096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 968,
									"end": 1096,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "AND",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1050,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1066,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1077,
									"end": 1087,
									"name": "CALLER",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1088,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 9332,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be722109414db35402ceb552184be9bf3575d6917b1a0f07aecd414452fbb34064736f6c634300081a0033",
									".code": [
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "89BFD38F"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "89BFD38F"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "8F0AF0F9"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "9F37092A"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "F2A7A2B4"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "F9319C53"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "12E85585"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "2AD8A220"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "3B1B1AD0"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "4D757A1C"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "5A599DA8"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 566,
											"end": 9332,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2008,
											"end": 2105,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 933,
											"end": 959,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 933,
											"end": 959,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 933,
											"end": 959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 933,
											"end": 959,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 933,
											"end": 959,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 959,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 374,
											"end": 406,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 356,
											"end": 407,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 356,
											"end": 407,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 344,
											"end": 346,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 933,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 196,
											"end": 413,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 2142,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 2142,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2861,
											"end": 3641,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2861,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2861,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 2861,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 2861,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 8970,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 8970,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 4644,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4644,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 7586,
											"end": 8962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 7586,
											"end": 8962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 6311,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 6311,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 4497,
											"end": 4615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 4497,
											"end": 4615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 4497,
											"end": 4615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3704,
											"end": 4489,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 3704,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3704,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3704,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 3704,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2194,
											"end": 2207,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2220,
											"end": 2234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 2237,
											"end": 2245,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2220,
											"end": 2255,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2220,
											"end": 2255,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2330,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 2311,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2290,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2341,
											"end": 2358,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2394,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2408,
											"end": 2424,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2375,
											"end": 2425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2466,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2497,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 2498,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2527,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 2488,
											"end": 2749,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2548,
											"end": 2562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2548,
											"end": 2562,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2575,
											"end": 2576,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 2571,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2629,
											"end": 2645,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2603,
											"end": 2645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2669,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2669,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 2664,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2664,
											"end": 2697,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 2732,
											"end": 2733,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 2716,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2529,
											"end": 2749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2529,
											"end": 2749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2488,
											"end": 2749,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 2488,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2471,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2471,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 2436,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2142,
											"end": 2792,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2861,
											"end": 3641,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 2861,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2928,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2941,
											"end": 2962,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2965,
											"end": 2973,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 2983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 2983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2994,
											"end": 3008,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3040,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3062,
											"end": 3071,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3097,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3145,
											"end": 3155,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3129,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "tag",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3155,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3119,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3119,
											"end": 3206,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3176,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3119,
											"end": 3206,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3119,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3099,
											"end": 3102,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3099,
											"end": 3102,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3057,
											"end": 3217,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3229,
											"end": 3248,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 3251,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 3251,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3229,
											"end": 3272,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3229,
											"end": 3272,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3611,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3283,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3304,
											"end": 3320,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3320,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3283,
											"end": 3611,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3283,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 3283,
											"end": 3611,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3378,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3351,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3352,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3346,
											"end": 3378,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3342,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 3342,
											"end": 3600,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3399,
											"end": 3413,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3421,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3399,
											"end": 3413,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3422,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 3422,
											"end": 3423,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3422,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3422,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3422,
											"end": 3427,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 3422,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3435,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3485,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3435,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3416,
											"end": 3435,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3521,
											"end": 3533,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3521,
											"end": 3533,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3515,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3515,
											"end": 3548,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3567,
											"end": 3584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 3600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 3600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3342,
											"end": 3600,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 3342,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3322,
											"end": 3325,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3322,
											"end": 3325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3283,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3283,
											"end": 3611,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 8970,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9052,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 9031,
											"end": 9052,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9052,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9031,
											"end": 9052,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9056,
											"end": 9066,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9066,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9066,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9066,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9066,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 9031,
											"end": 9104,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9075,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9084,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9090,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9070,
											"end": 9090,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9090,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9070,
											"end": 9090,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9094,
											"end": 9104,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9104,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9070,
											"end": 9104,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9104,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 9031,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9218,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 9027,
											"end": 9218,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "47AD5E4F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 9128,
											"end": 9206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9206,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9027,
											"end": 9218,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 9027,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9312,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9300,
											"end": 9321,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8970,
											"end": 9329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4792,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4796,
											"end": 4797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4797,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4782,
											"end": 4902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 4782,
											"end": 4902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC29701"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4266,
											"end": 4268,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4890,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4248,
											"end": 4269,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 4285,
											"end": 4303,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4285,
											"end": 4303,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4285,
											"end": 4303,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4308,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4974656D205072696365206973207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4317,
											"end": 4365,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4837,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 4064,
											"end": 4406,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4782,
											"end": 4902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 4782,
											"end": 4902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5217,
											"end": 5229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5214,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5214,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5188,
											"end": 5198,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5208,
											"end": 5212,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4645,
											"end": 4705,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5177,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5214,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 5165,
											"end": 5214,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 5165,
											"end": 5214,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5165,
											"end": 5229,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5161,
											"end": 5329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5161,
											"end": 5329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 5161,
											"end": 5329,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5253,
											"end": 5317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 5317,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F36F1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5253,
											"end": 5317,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5253,
											"end": 5317,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5107,
											"end": 5109,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5253,
											"end": 5317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5253,
											"end": 5317,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5253,
											"end": 5317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5110,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5146,
											"end": 5148,
											"name": "PUSH",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5119,
											"end": 5149,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131A5CDD1A5B99C81C1C9A58D9481A5CC81B9BDD081B595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5212,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5253,
											"end": 5317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 4905,
											"end": 5253,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5161,
											"end": 5329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 5161,
											"end": 5329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5411,
											"end": 5477,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5411,
											"end": 5477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5423,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 5411,
											"end": 5436,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 5411,
											"end": 5477,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5447,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5447,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5457,
											"end": 5461,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 5411,
											"end": 5477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5477,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 5411,
											"end": 5477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5488,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 5488,
											"end": 5496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5488,
											"end": 5508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 5488,
											"end": 5508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5519,
											"end": 5532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 5535,
											"end": 5543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 5535,
											"end": 5553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5708,
											"end": 5712,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP15",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "DUP15",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "DUP14",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5581,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP12",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP11",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5765,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5778,
											"end": 5848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5519,
											"end": 5553,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5519,
											"end": 5553,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5584,
											"end": 5765,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 5778,
											"end": 5848,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5675,
											"end": 5685,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5708,
											"end": 5712,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5652,
											"end": 5660,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5652,
											"end": 5660,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 5778,
											"end": 5848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5848,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5848,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5938,
											"end": 5946,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5912,
											"end": 5923,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5889,
											"end": 5897,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "F8551F8BE25732324FCDA411A126B3C851E038B0FF8D097A3951DDED3772F43F"
										},
										{
											"begin": 5961,
											"end": 5971,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 5998,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 6014,
											"end": 6020,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6035,
											"end": 6040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 5866,
											"end": 6051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5866,
											"end": 6051,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 6215,
											"end": 6227,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6237,
											"end": 6242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 6237,
											"end": 6242,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6244,
											"end": 6256,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6256,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6257,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6215,
											"end": 6257,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6237,
											"end": 6242,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6237,
											"end": 6242,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6237,
											"end": 6242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6616,
											"end": 6650,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6215,
											"end": 6227,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6227,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 6215,
											"end": 6236,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6257,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6215,
											"end": 6257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6257,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 6286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 6286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 7586,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7729,
											"end": 7743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7743,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7743,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7743,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 7729,
											"end": 7743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7743,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7743,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7743,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7743,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7729,
											"end": 7749,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7749,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7729,
											"end": 7749,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7753,
											"end": 7763,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 7729,
											"end": 7763,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7725,
											"end": 7877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 7725,
											"end": 7877,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "47AD5E4F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 7787,
											"end": 7865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7725,
											"end": 7877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 7725,
											"end": 7877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8135,
											"end": 8147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8135,
											"end": 8147,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8135,
											"end": 8147,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8083,
											"end": 8095,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8083,
											"end": 8132,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8083,
											"end": 8132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8116,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8126,
											"end": 8130,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4645,
											"end": 4705,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8135,
											"end": 8147,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8135,
											"end": 8147,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8083,
											"end": 8095,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8095,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8095,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 8083,
											"end": 8105,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8083,
											"end": 8132,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 8083,
											"end": 8132,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 8083,
											"end": 8132,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8083,
											"end": 8147,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8079,
											"end": 8247,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8079,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 8079,
											"end": 8247,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8171,
											"end": 8235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8171,
											"end": 8235,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F36F1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8171,
											"end": 8235,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8171,
											"end": 8235,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5107,
											"end": 5109,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8171,
											"end": 8235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8171,
											"end": 8235,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8171,
											"end": 8235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5110,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5146,
											"end": 5148,
											"name": "PUSH",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5126,
											"end": 5144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5119,
											"end": 5149,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131A5CDD1A5B99C81C1C9A58D9481A5CC81B9BDD081B595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5212,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8171,
											"end": 8235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 4905,
											"end": 5253,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8079,
											"end": 8247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 8079,
											"end": 8247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8382,
											"end": 8394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8382,
											"end": 8394,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8382,
											"end": 8394,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8329,
											"end": 8395,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8329,
											"end": 8395,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8341,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 8329,
											"end": 8354,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 8329,
											"end": 8395,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8355,
											"end": 8365,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 8355,
											"end": 8365,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8375,
											"end": 8379,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 8375,
											"end": 8379,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 8329,
											"end": 8395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8395,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 8329,
											"end": 8395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 8329,
											"end": 8395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 8406,
											"end": 8420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8420,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8433,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8433,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8406,
											"end": 8433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8433,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8433,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8444,
											"end": 8464,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8473,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8473,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8473,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 8484,
											"end": 8505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8505,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8508,
											"end": 8518,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8484,
											"end": 8518,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8529,
											"end": 8549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8549,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8560,
											"end": 8564,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8565,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8576,
											"end": 8597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "158"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": 8576,
											"end": 8595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 8576,
											"end": 8597,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8576,
											"end": 8597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 8576,
											"end": 8597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8610,
											"end": 8623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 8626,
											"end": 8640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8640,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 8626,
											"end": 8648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8659,
											"end": 8729,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8659,
											"end": 8692,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8692,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 8659,
											"end": 8692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 8659,
											"end": 8729,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8693,
											"end": 8703,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 8693,
											"end": 8703,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8713,
											"end": 8717,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 8713,
											"end": 8717,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8626,
											"end": 8648,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 8659,
											"end": 8729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8729,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8729,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8771,
											"end": 8779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8758,
											"end": 8769,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "52679D6CF973DFF612DE0D67AD1642E7B8B401DCB1C41EA86BF35B82AC6BF88"
										},
										{
											"begin": 8781,
											"end": 8791,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 8801,
											"end": 8805,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 8808,
											"end": 8814,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8816,
											"end": 8821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 8747,
											"end": 8822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8822,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 8891,
											"end": 8903,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8913,
											"end": 8918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 8913,
											"end": 8918,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8920,
											"end": 8932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8920,
											"end": 8932,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8920,
											"end": 8932,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8891,
											"end": 8933,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8933,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8933,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8913,
											"end": 8918,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8913,
											"end": 8918,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8913,
											"end": 8918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8933,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8933,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8933,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6616,
											"end": 6650,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8891,
											"end": 8903,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8903,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 8891,
											"end": 8912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8891,
											"end": 8933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 6374,
											"end": 6656,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 6438,
											"end": 6452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6452,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 6487,
											"end": 6509,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6487,
											"end": 6509,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 6537,
											"end": 6558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6558,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6558,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6558,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6757,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6757,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6745,
											"end": 6794,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6768,
											"end": 6778,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6745,
											"end": 6794,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4585,
											"end": 4636,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6788,
											"end": 6792,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4645,
											"end": 4705,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6537,
											"end": 6558,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6558,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6537,
											"end": 6558,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6757,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6757,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6757,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 6745,
											"end": 6767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6794,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 6745,
											"end": 6794,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 6745,
											"end": 6794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6745,
											"end": 6802,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6741,
											"end": 6902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6741,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 6741,
											"end": 6902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6826,
											"end": 6890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6890,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F36F1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6826,
											"end": 6890,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6826,
											"end": 6890,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6863,
											"end": 6865,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6826,
											"end": 6890,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6826,
											"end": 6890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6845,
											"end": 6866,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6902,
											"end": 6904,
											"name": "PUSH",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6875,
											"end": 6905,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6941,
											"end": 6967,
											"name": "PUSH",
											"source": 16,
											"value": "4C697374696E67205072696365206973206E6F74206D65740000000000000000"
										},
										{
											"begin": 6921,
											"end": 6939,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6921,
											"end": 6939,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6921,
											"end": 6939,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6914,
											"end": 6968,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6826,
											"end": 6890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 6661,
											"end": 7009,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6741,
											"end": 6902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 6741,
											"end": 6902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 6996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 6984,
											"end": 6996,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7043,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6984,
											"end": 7043,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6984,
											"end": 6996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 6996,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 6996,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 6996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 6984,
											"end": 7009,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 6984,
											"end": 7043,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7010,
											"end": 7020,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 7010,
											"end": 7020,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7030,
											"end": 7034,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 7030,
											"end": 7034,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7037,
											"end": 7042,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7037,
											"end": 7042,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 6984,
											"end": 7043,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7043,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6984,
											"end": 7043,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 6984,
											"end": 7043,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7096,
											"end": 7165,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7096,
											"end": 7165,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7096,
											"end": 7129,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7129,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7129,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 7096,
											"end": 7129,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 7096,
											"end": 7165,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 7142,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 7142,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7145,
											"end": 7155,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 7145,
											"end": 7155,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7157,
											"end": 7164,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7157,
											"end": 7164,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 7096,
											"end": 7165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7165,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7165,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 7096,
											"end": 7165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7176,
											"end": 7188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 7176,
											"end": 7188,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7176,
											"end": 7212,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7176,
											"end": 7212,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7176,
											"end": 7212,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6556,
											"end": 6607,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6616,
											"end": 6650,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6616,
											"end": 6650,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6616,
											"end": 6650,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7176,
											"end": 7188,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7188,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7188,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7188,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7176,
											"end": 7197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 7176,
											"end": 7197,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7212,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 7176,
											"end": 7212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 7176,
											"end": 7212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7274,
											"end": 7288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 7274,
											"end": 7288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7288,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7274,
											"end": 7294,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7307,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7307,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7274,
											"end": 7307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7297,
											"end": 7307,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7307,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7307,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7307,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 7318,
											"end": 7337,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7318,
											"end": 7344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7307,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7318,
											"end": 7344,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 7355,
											"end": 7376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 7355,
											"end": 7364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7355,
											"end": 7376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 7355,
											"end": 7376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7445,
											"end": 7452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7419,
											"end": 7430,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9A9F9FAF9D964B2FB1888CDF05202BAF5A1B99D45F7AFD6A5E062AC544B3C150"
										},
										{
											"begin": 7475,
											"end": 7479,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 7495,
											"end": 7505,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 7520,
											"end": 7525,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7540,
											"end": 7544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 7394,
											"end": 7555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7555,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 15
										},
										{
											"begin": 6411,
											"end": 7563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6411,
											"end": 7563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6411,
											"end": 7563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 7563,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 7563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 4497,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4563,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 4563,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 4563,
											"end": 4574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4563,
											"end": 4574,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 4563,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4598,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4593,
											"end": 4607,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4586,
											"end": 4607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3704,
											"end": 4489,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 3704,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3772,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3785,
											"end": 3806,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 3809,
											"end": 3817,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 3809,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3827,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3838,
											"end": 3852,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3884,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3915,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3925,
											"end": 3941,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3990,
											"end": 4000,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3972,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3973,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3986,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3967,
											"end": 3986,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3986,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3967,
											"end": 3986,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4000,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3963,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 3963,
											"end": 4051,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 4021,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3963,
											"end": 4051,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 3963,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3943,
											"end": 3946,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3943,
											"end": 3946,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3901,
											"end": 4062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4074,
											"end": 4093,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4116,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 4096,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 4096,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4074,
											"end": 4117,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4074,
											"end": 4117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4133,
											"end": 4139,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4457,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 4128,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4149,
											"end": 4165,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4146,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4165,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4128,
											"end": 4457,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4128,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 4128,
											"end": 4457,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4196,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 4197,
											"end": 4198,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4201,
											"end": 4202,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 4197,
											"end": 4202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4203,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4191,
											"end": 4210,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4224,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4187,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 4187,
											"end": 4446,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4245,
											"end": 4259,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4267,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 4245,
											"end": 4259,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4268,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 4268,
											"end": 4269,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4268,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 4268,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4268,
											"end": 4273,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 4268,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4331,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4281,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4342,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4366,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4366,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 4361,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4380,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4394,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4413,
											"end": 4430,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 4413,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4430,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 4413,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4430,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4226,
											"end": 4446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4226,
											"end": 4446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4187,
											"end": 4446,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 4187,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4167,
											"end": 4170,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4167,
											"end": 4170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4128,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 4128,
											"end": 4457,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7495,
											"end": 7497,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7507,
											"end": 7537,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7573,
											"end": 7606,
											"name": "PUSH",
											"source": 16,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7546,
											"end": 7607,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7293,
											"end": 7648,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7855,
											"end": 7857,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7837,
											"end": 7858,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7896,
											"name": "PUSH",
											"source": 16,
											"value": "1B"
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7867,
											"end": 7897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7933,
											"end": 7962,
											"name": "PUSH",
											"source": 16,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7906,
											"end": 7963,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 7998,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7980,
											"end": 7998,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7653,
											"end": 8004,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "66"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 418,
											"end": 937,
											"name": "tag",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 418,
											"end": 937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 488,
											"end": 500,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 488,
											"end": 500,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 476,
											"end": 501,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 476,
											"end": 501,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 559,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 543,
											"end": 559,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 543,
											"end": 559,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 537,
											"end": 560,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 533,
											"end": 582,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 533,
											"end": 582,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 533,
											"end": 582,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 517,
											"end": 531,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 517,
											"end": 531,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 510,
											"end": 583,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 510,
											"end": 583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 510,
											"end": 583,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 510,
											"end": 583,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 632,
											"end": 636,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 621,
											"end": 637,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 621,
											"end": 637,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 615,
											"end": 638,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 599,
											"end": 613,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 599,
											"end": 613,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 599,
											"end": 613,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 592,
											"end": 639,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 692,
											"end": 696,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 681,
											"end": 697,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 681,
											"end": 697,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 681,
											"end": 697,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 675,
											"end": 698,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 671,
											"end": 720,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 671,
											"end": 720,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 655,
											"end": 669,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 655,
											"end": 669,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 655,
											"end": 669,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 648,
											"end": 721,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 774,
											"end": 778,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 763,
											"end": 779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 763,
											"end": 779,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 763,
											"end": 779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 757,
											"end": 780,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 753,
											"end": 802,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 753,
											"end": 802,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 753,
											"end": 802,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 737,
											"end": 751,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 737,
											"end": 751,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 737,
											"end": 751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 730,
											"end": 803,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 570,
											"end": 573,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 841,
											"end": 857,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 841,
											"end": 857,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 841,
											"end": 857,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 835,
											"end": 858,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 819,
											"end": 833,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 819,
											"end": 833,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 819,
											"end": 833,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 812,
											"end": 859,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 922,
											"end": 926,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 911,
											"end": 927,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 911,
											"end": 927,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 911,
											"end": 927,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 905,
											"end": 928,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 898,
											"end": 929,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 891,
											"end": 930,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 875,
											"end": 889,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 875,
											"end": 889,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 868,
											"end": 931,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 418,
											"end": 937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 942,
											"end": 1615,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 942,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1176,
											"end": 1178,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1271,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1258,
											"end": 1271,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1280,
											"end": 1302,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1280,
											"end": 1302,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1280,
											"end": 1302,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "tag",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 1503,
											"end": 1506,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1501,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 1465,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1465,
											"end": 1507,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 1465,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1579,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1579,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1579,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1564,
											"end": 1579,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1536,
											"end": 1540,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1431,
											"end": 1440,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 1402,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1606,
											"end": 1609,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1606,
											"end": 1609,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 942,
											"end": 1615,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 942,
											"end": 1615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1846,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 1620,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1730,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "tag",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1793,
											"end": 1816,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1846,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 2024,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1919,
											"end": 1939,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1919,
											"end": 1939,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1958,
											"end": 2000,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1958,
											"end": 2000,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2012,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2004,
											"end": 2016,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "tag",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 1948,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 2024,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 2024,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 2024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2449,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 2029,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2177,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2161,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2150,
											"end": 2173,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2146,
											"end": 2178,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2195,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 2143,
											"end": 2195,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2181,
											"end": 2193,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2195,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 2143,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 2233,
											"end": 2242,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 2214,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2214,
											"end": 2243,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 2214,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2204,
											"end": 2243,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2385,
											"end": 2417,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2385,
											"end": 2417,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2029,
											"end": 2449,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2029,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2454,
											"end": 2754,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 2454,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2522,
											"end": 2528,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2536,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2583,
											"end": 2585,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2571,
											"end": 2580,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2562,
											"end": 2569,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2558,
											"end": 2581,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2554,
											"end": 2586,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2551,
											"end": 2603,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2551,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 2551,
											"end": 2603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2599,
											"end": 2600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2551,
											"end": 2603,
											"name": "tag",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 2551,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 2622,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2612,
											"end": 2651,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2454,
											"end": 2754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2997,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 2759,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2937,
											"end": 2940,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2922,
											"end": 2941,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 2941,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2950,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2950,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 2950,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2950,
											"end": 2991,
											"name": "tag",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 2950,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2997,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2997,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2759,
											"end": 2997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3002,
											"end": 3129,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 3002,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3063,
											"end": 3073,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 3058,
											"end": 3061,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3075,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3094,
											"end": 3098,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3084,
											"end": 3099,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3122,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3115,
											"end": 3116,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3134,
											"end": 3262,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 3134,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3222,
											"end": 3233,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3222,
											"end": 3233,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3222,
											"end": 3233,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3219,
											"end": 3256,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3219,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 3219,
											"end": 3256,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 3236,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3267,
											"end": 3394,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 3267,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3328,
											"end": 3338,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 3323,
											"end": 3326,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3340,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3359,
											"end": 3363,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3349,
											"end": 3364,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3388,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3464,
											"end": 3473,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 3482,
											"end": 3518,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 3498,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3590,
											"end": 3600,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 3585,
											"end": 3588,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 3581,
											"end": 3601,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3578,
											"end": 3579,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3602,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3621,
											"end": 3625,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 3618,
											"end": 3619,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3645,
											"end": 3649,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3661,
											"end": 4059,
											"name": "tag",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 3661,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3902,
											"end": 3904,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3900,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3875,
											"end": 3905,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3941,
											"end": 3975,
											"name": "PUSH",
											"source": 16,
											"value": "596F7520617265206E6F7420746865206F776E6572206F662074686973206974"
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 3939,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3939,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3914,
											"end": 3976,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3985,
											"end": 4017,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 4034,
											"end": 4053,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4034,
											"end": 4053,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3661,
											"end": 4059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4716,
											"end": 4900,
											"name": "tag",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 4716,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4786,
											"end": 4792,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4841,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4818,
											"end": 4825,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4807,
											"end": 4859,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4807,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 4807,
											"end": 4859,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4807,
											"end": 4859,
											"name": "tag",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 4807,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4894,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4878,
											"end": 4894,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4716,
											"end": 4900,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5258,
											"end": 5629,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 5258,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5460,
											"end": 5511,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5520,
											"end": 5580,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5596,
											"end": 5614,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5596,
											"end": 5614,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5623,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5623,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5623,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5623,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5258,
											"end": 5629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5911,
											"name": "tag",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 5634,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5701,
											"end": 5707,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5756,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5742,
											"end": 5751,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5725,
											"end": 5757,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5722,
											"end": 5774,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5722,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 5722,
											"end": 5774,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5768,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5760,
											"end": 5772,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5722,
											"end": 5774,
											"name": "tag",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 5722,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5802,
											"end": 5811,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5796,
											"end": 5812,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5855,
											"end": 5860,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5848,
											"end": 5861,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5841,
											"end": 5862,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5834,
											"end": 5839,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5831,
											"end": 5863,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 5821,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 5821,
											"end": 5881,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5877,
											"end": 5878,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5875,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5867,
											"end": 5879,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5821,
											"end": 5881,
											"name": "tag",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 5821,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5911,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5634,
											"end": 5911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5916,
											"end": 6369,
											"name": "tag",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 5916,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6159,
											"end": 6191,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 6159,
											"end": 6191,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6159,
											"end": 6191,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6141,
											"end": 6192,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6141,
											"end": 6192,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6228,
											"end": 6260,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6228,
											"end": 6260,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6228,
											"end": 6260,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6228,
											"end": 6260,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6223,
											"end": 6225,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6201,
											"end": 6261,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6292,
											"end": 6294,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6295,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6277,
											"end": 6295,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6270,
											"end": 6304,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6340,
											"end": 6362,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6335,
											"end": 6337,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 6320,
											"end": 6338,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6320,
											"end": 6338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6313,
											"end": 6363,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6128,
											"end": 6131,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 6113,
											"end": 6132,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6113,
											"end": 6132,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5916,
											"end": 6369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyItem(address,uint256)": "9f37092a",
							"getAllListedItems()": "3b1b1ad0",
							"getListingPrice()": "12e85585",
							"getOwnerListedItems()": "4d757a1c",
							"getParticularItem(uint256)": "f2a7a2b4",
							"getSellerListedItems()": "f9319c53",
							"listItem(address,uint256,uint256)": "89bfd38f",
							"resellItem(address,uint256,uint256)": "8f0af0f9",
							"tradingToken()": "2ad8a220",
							"unlistItem(uint256)": "5a599da8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NFTMarketplace__ItemPriceIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NFTMarketplace__ListingPriceIsNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NFTMarketplace__YouAreNotOwnerOfThisItem\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"name\":\"ItemList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"name\":\"ItemResell\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllListedItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.Item[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerListedItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.Item[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"getParticularItem\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.Item\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellerListedItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.Item[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"resellItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Marketplace.sol\":{\"keccak256\":\"0xe6be0ee61f877905c0cc3d3bc73cddbb8e167424df23d1ce3052c024e65c6d08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20610e2c6e4cf05795894b16669a03aa357750856279f1d172e817a2004152a7\",\"dweb:/ipfs/QmeZhphZhQ2kcZmTGyuVMxfFM13t4ceQKG7wEsGA4UPgVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 147,
								"contract": "contracts/Marketplace.sol:NFTMarketplace",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 3061,
								"contract": "contracts/Marketplace.sol:NFTMarketplace",
								"label": "s_nftIds",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1512_storage"
							},
							{
								"astId": 3064,
								"contract": "contracts/Marketplace.sol:NFTMarketplace",
								"label": "s_nftSold",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)1512_storage"
							},
							{
								"astId": 3066,
								"contract": "contracts/Marketplace.sol:NFTMarketplace",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 3074,
								"contract": "contracts/Marketplace.sol:NFTMarketplace",
								"label": "listingPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 3077,
								"contract": "contracts/Marketplace.sol:NFTMarketplace",
								"label": "tradingToken",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)279"
							},
							{
								"astId": 3117,
								"contract": "contracts/Marketplace.sol:NFTMarketplace",
								"label": "Items",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(Item)3112_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)279": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Item)3112_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)3112_storage"
							},
							"t_struct(Counter)1512_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1511,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Item)3112_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.Item",
								"members": [
									{
										"astId": 3099,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "itemId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3101,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "nftContract",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3103,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3105,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "seller",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 3107,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "owner",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 3109,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3111,
										"contract": "contracts/Marketplace.sol:NFTMarketplace",
										"label": "sold",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							201
						]
					},
					"id": 202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 142,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 145,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 151,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 155,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 201,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 158,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 162,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 166,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 171,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 177,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 201,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 201,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 196,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 194,
												"id": 198,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 201,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 202,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							279
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 213,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 222,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 279,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 279,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 279,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 279,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 279,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 279,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 280,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								213,
								222
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1506
						],
						"ERC165": [
							1859
						],
						"ERC721": [
							1236
						],
						"ERC721Utils": [
							1476
						],
						"IERC165": [
							1871
						],
						"IERC721": [
							1353
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1399
						],
						"Strings": [
							1835
						]
					},
					"id": 1237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 1354,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1353,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 1400,
							"src": "172:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 284,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1399,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
							"file": "./utils/ERC721Utils.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 1477,
							"src": "238:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 286,
										"name": "ERC721Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1476,
										"src": "246:11:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 1507,
							"src": "291:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 288,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1506,
										"src": "299:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 1836,
							"src": "340:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 290,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1835,
										"src": "348:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 1860,
							"src": "389:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 292,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1871,
										"src": "397:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 293,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1859,
										"src": "406:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 137,
							"src": "459:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "467:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 298,
										"name": "Context",
										"nameLocations": [
											"803:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1506,
										"src": "803:7:3"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "803:7:3"
								},
								{
									"baseName": {
										"id": 300,
										"name": "ERC165",
										"nameLocations": [
											"812:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1859,
										"src": "812:6:3"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "812:6:3"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC721",
										"nameLocations": [
											"820:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1353,
										"src": "820:7:3"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "820:7:3"
								},
								{
									"baseName": {
										"id": 304,
										"name": "IERC721Metadata",
										"nameLocations": [
											"829:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1399,
										"src": "829:15:3"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "829:15:3"
								},
								{
									"baseName": {
										"id": 306,
										"name": "IERC721Errors",
										"nameLocations": [
											"846:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "846:13:3"
									},
									"id": 307,
									"nodeType": "InheritanceSpecifier",
									"src": "846:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "527:247:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1236,
							"linearizedBaseContracts": [
								1236,
								89,
								1399,
								1353,
								1859,
								1871,
								1506
							],
							"name": "ERC721",
							"nameLocation": "793:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 310,
									"libraryName": {
										"id": 308,
										"name": "Strings",
										"nameLocations": [
											"872:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1835,
										"src": "872:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "866:26:3",
									"typeName": {
										"id": 309,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 312,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "931:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "916:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 311,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "916:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 314,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "978:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "963:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 313,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "963:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 318,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1036:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "992:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 317,
										"keyName": "tokenId",
										"keyNameLocation": "1008:7:3",
										"keyType": {
											"id": 315,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "992:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 316,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1019:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 322,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1092:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "1050:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 321,
										"keyName": "owner",
										"keyNameLocation": "1066:5:3",
										"keyType": {
											"id": 319,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1058:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1050:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1075:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1152:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "1108:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 325,
										"keyName": "tokenId",
										"keyNameLocation": "1124:7:3",
										"keyType": {
											"id": 323,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1108:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1135:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1242:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "1174:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "owner",
										"keyNameLocation": "1190:5:3",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1182:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1174:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1215:8:3",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1207:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1199:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1227:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1436:57:3",
										"statements": [
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 340,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "1446:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 341,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1454:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1446:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1446:13:3"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "1469:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 345,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1479:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1469:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1469:17:3"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "1267:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 349,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1406:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1392:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 334,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1392:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1427:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1413:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1413:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:44:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:0:3"
									},
									"scope": 1236,
									"src": "1380:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1858,
										1870
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1668:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "1697:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 362,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "1717:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1353_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1353_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 361,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1712:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1712:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1353",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1726:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1712:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1697:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 366,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "1753:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 368,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "1773:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1399_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1399_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 367,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1768:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1768:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1399",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1790:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1768:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1753:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1697:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 375,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "1841:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 373,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1817:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1236_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1823:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1858,
															"src": "1817:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1817:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1697:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 359,
												"id": 378,
												"nodeType": "Return",
												"src": "1678:175:3"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1499:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1569:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 356,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 354,
												"name": "ERC165",
												"nameLocations": [
													"1636:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1859,
												"src": "1636:6:3"
											},
											{
												"id": 355,
												"name": "IERC165",
												"nameLocations": [
													"1644:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1871,
												"src": "1644:7:3"
											}
										],
										"src": "1627:25:3"
									},
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1594:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1587:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 351,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1587:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:20:3"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 1236,
									"src": "1560:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1278
									],
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1991:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 388,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2005:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2014:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2014:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2005:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "2001:87:3",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "2026:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2074:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2066:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 395,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2066:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2066:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 394,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2047:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 400,
															"nodeType": "RevertStatement",
															"src": "2040:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 403,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "2104:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 405,
													"indexExpression": {
														"id": 404,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2114:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2104:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 406,
												"nodeType": "Return",
												"src": "2097:23:3"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1866:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1928:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1946:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1938:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:15:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:9:3"
									},
									"scope": 1236,
									"src": "1919:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1286
									],
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "2256:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2287:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 416,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2273:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 415,
												"id": 419,
												"nodeType": "Return",
												"src": "2266:29:3"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "2133:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2193:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2209:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2201:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:17:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2247:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:3"
									},
									"scope": 1236,
									"src": "2184:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1384
									],
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "2424:29:3",
										"statements": [
											{
												"expression": {
													"id": 427,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 312,
													"src": "2441:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 426,
												"id": 428,
												"nodeType": "Return",
												"src": "2434:12:3"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2308:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2373:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:2:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2409:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2409:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:15:3"
									},
									"scope": 1236,
									"src": "2364:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1390
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "2579:31:3",
										"statements": [
											{
												"expression": {
													"id": 436,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 314,
													"src": "2596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 435,
												"id": 437,
												"nodeType": "Return",
												"src": "2589:14:3"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "2459:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2526:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:2:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2564:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2564:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:15:3"
									},
									"scope": 1236,
									"src": "2517:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1398
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2755:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "2779:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2765:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "2765:22:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2812:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "2798:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 451,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2798:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 453,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2822:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2822:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2798:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 458,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "2855:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2849:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 456,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2849:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2849:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2864:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2849:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2849:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2922:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2849:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 466,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "2891:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 467,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "2900:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2908:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1648,
																	"src": "2900:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2900:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2877:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 463,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2877:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2884:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2877:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2877:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 446,
												"id": 473,
												"nodeType": "Return",
												"src": "2842:82:3"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "2616:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2685:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2702:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2694:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:17:3"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2740:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2740:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:15:3"
									},
									"scope": 1236,
									"src": "2676:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3239:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3256:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "3249:9:3"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "2937:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3182:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3190:2:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3224:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3224:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:15:3"
									},
									"scope": 1236,
									"src": "3173:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1326
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "3383:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "3402:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "3406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 495,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "3415:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3415:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 492,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103,
															1169
														],
														"referencedDeclaration": 1103,
														"src": "3393:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "3393:35:3"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3271:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3331:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3359:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3351:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:29:3"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:3"
									},
									"scope": 1236,
									"src": "3322:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1342
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3572:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "3582:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "3582:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 513,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3635:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "3622:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 507,
												"id": 515,
												"nodeType": "Return",
												"src": "3615:28:3"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "3441:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3505:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3525:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3517:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:17:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3563:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:9:3"
									},
									"scope": 1236,
									"src": "3496:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1334
									],
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "3792:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 526,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "3821:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3821:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3835:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3845:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 525,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3802:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "3802:52:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3656:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3726:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3752:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3744:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3767:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3762:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3762:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:33:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:0:3"
									},
									"scope": 1236,
									"src": "3717:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "4021:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 543,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4038:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 545,
														"indexExpression": {
															"id": 544,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "4057:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4038:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "4064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4038:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 542,
												"id": 548,
												"nodeType": "Return",
												"src": "4031:42:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "3867:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3936:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3961:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3953:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3976:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3968:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:33:3"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "4015:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4015:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:6:3"
									},
									"scope": 1236,
									"src": "3927:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1318
									],
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "4222:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 560,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "4236:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4250:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4242:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 561,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4242:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4242:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4236:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "4232:87:3",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "4254:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4305:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4297:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 567,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4297:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4297:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 566,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4275:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4275:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "4268:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4545:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "4537:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 575,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4537:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"id": 578,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "4569:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "4573:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 580,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "4582:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4582:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 577,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "4561:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4537:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 584,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "4609:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 585,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "4626:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4609:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "4605:109:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4632:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "4674:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 589,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "4680:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 590,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "4689:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 587,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4653:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4653:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 592,
															"nodeType": "RevertStatement",
															"src": "4646:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "4086:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4151:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4164:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4186:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4178:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4198:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4190:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:43:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:3"
									},
									"scope": 1236,
									"src": "4142:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1308
									],
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "4862:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "4889:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "4895:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "4899:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4908:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 606,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															614,
															644
														],
														"referencedDeclaration": 644,
														"src": "4872:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "4872:39:3"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4726:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4795:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4820:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4812:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4834:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4826:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4846:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4838:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:43:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4862:0:3"
									},
									"scope": 1236,
									"src": "4786:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1298
									],
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "5087:130:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "5110:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "5116:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "5120:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "5097:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5097:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "5097:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 635,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "5172:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5172:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "5186:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "5192:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "5196:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "5205:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 632,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "5138:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1476_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5150:21:3",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1475,
														"src": "5138:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5138:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "5138:72:3"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "4924:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4993:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5018:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5010:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5066:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5053:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5053:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5009:62:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5087:0:3"
									},
									"scope": 1236,
									"src": "4984:233:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "5807:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 652,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5824:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "5832:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5824:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 651,
												"id": 655,
												"nodeType": "Return",
												"src": "5817:23:3"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "5223:504:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5741:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:17:3"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5798:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:9:3"
									},
									"scope": 1236,
									"src": "5732:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "6042:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 665,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "6059:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 667,
													"indexExpression": {
														"id": 666,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "6075:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6059:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 664,
												"id": 668,
												"nodeType": "Return",
												"src": "6052:31:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "5853:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5972:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "5985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5984:17:3"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6033:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:9:3"
									},
									"scope": 1236,
									"src": "5963:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6510:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 682,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "6539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6558:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6550:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6550:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6550:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6539:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 688,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "6577:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 689,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "6586:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6577:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 692,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "6614:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 693,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 675,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 691,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 550,
																			"src": "6597:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6597:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6577:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 697,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 677,
																				"src": "6646:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 696,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 670,
																			"src": "6633:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6633:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 699,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6658:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6633:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6577:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 702,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6576:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6539:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 681,
												"id": 704,
												"nodeType": "Return",
												"src": "6520:146:3"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "6096:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6410:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6432:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6424:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6424:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6447:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6439:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6439:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6464:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6456:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6423:49:3"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6504:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6504:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:6:3"
									},
									"scope": 1236,
									"src": "6401:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "7202:271:3",
										"statements": [
											{
												"condition": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7216:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 717,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "7231:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 718,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "7238:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "7247:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 716,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "7217:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7217:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 741,
												"nodeType": "IfStatement",
												"src": "7212:255:3",
												"trueBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "7257:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 722,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "7275:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7292:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7284:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 723,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7284:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7284:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7275:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "7373:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 734,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "7425:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 735,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "7434:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 733,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7398:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7398:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "7391:51:3"
																	}
																]
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "7271:186:3",
															"trueBody": {
																"id": 732,
																"nodeType": "Block",
																"src": "7296:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 729,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "7344:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 728,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7321:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7321:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 731,
																		"nodeType": "RevertStatement",
																		"src": "7314:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "6679:421:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7114:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7139:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7131:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7131:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7154:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7146:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7171:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7163:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7163:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7130:49:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7202:0:3"
									},
									"scope": 1236,
									"src": "7105:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "8190:78:3",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "8200:62:3",
												"statements": [
													{
														"expression": {
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 751,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "8224:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 753,
																"indexExpression": {
																	"id": 752,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "8234:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8224:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "8246:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8224:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 756,
														"nodeType": "ExpressionStatement",
														"src": "8224:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "7479:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8124:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8149:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8141:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8141:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8166:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "8158:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 747,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8140:32:3"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8190:0:3"
									},
									"scope": 1236,
									"src": "8115:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "8956:700:3",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8974:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 848,
														"src": "8966:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 771,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8966:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "8990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "8981:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8981:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8966:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 777,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "9058:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9074:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9066:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 778,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9066:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9066:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9058:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "9054:86:3",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "9078:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 784,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "9109:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 785,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "9115:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "9121:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 783,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "9092:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9092:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 788,
															"nodeType": "ExpressionStatement",
															"src": "9092:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 791,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "9184:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9200:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9192:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 792,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9192:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9192:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9184:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "IfStatement",
												"src": "9180:256:3",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "9204:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9317:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9309:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 798,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9309:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9309:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 802,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "9321:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9338:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9330:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 803,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9330:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9330:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 797,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1103,
																		1169
																	],
																	"referencedDeclaration": 1169,
																	"src": "9300:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9300:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 809,
															"nodeType": "ExpressionStatement",
															"src": "9300:48:3"
														},
														{
															"id": 816,
															"nodeType": "UncheckedBlock",
															"src": "9363:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 810,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "9391:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 812,
																			"indexExpression": {
																				"id": 811,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 772,
																				"src": "9401:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9391:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9410:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9391:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 815,
																	"nodeType": "ExpressionStatement",
																	"src": "9391:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 819,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "9450:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9464:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9456:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 820,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9456:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9456:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9450:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 833,
												"nodeType": "IfStatement",
												"src": "9446:107:3",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "9468:85:3",
													"statements": [
														{
															"id": 831,
															"nodeType": "UncheckedBlock",
															"src": "9482:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 825,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 322,
																				"src": "9510:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 827,
																			"indexExpression": {
																				"id": 826,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 762,
																				"src": "9520:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9510:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9527:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9510:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 830,
																	"nodeType": "ExpressionStatement",
																	"src": "9510:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 834,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "9563:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 836,
														"indexExpression": {
															"id": 835,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "9571:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9563:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 837,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "9582:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9563:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "9563:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 841,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "9609:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "9615:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "9619:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 840,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "9600:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9600:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "EmitStatement",
												"src": "9595:32:3"
											},
											{
												"expression": {
													"id": 846,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 772,
													"src": "9645:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 770,
												"id": 847,
												"nodeType": "Return",
												"src": "9638:11:3"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "8274:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8870:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8886:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "8878:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8878:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8898:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "8890:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8890:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8915:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "8907:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8877:43:3"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "8947:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:9:3"
									},
									"scope": 1236,
									"src": "8861:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "10031:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "10045:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10059:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10051:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 858,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10051:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10051:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10045:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "10041:87:3",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "10063:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10114:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10106:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 864,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10106:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10106:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 863,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10084:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10084:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 869,
															"nodeType": "RevertStatement",
															"src": "10077:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													873
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10145:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "10137:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 872,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10137:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "10169:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "10173:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10190:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10182:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10182:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10182:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 874,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "10161:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10161:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10137:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 883,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "10207:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10232:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10224:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 884,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10224:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10224:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10207:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "10203:96:3",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "10236:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10277:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 890,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10277:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10277:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 889,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10257:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10257:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 895,
															"nodeType": "RevertStatement",
															"src": "10250:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "9662:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9987:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10001:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "9993:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10013:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "10005:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10005:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9992:29:3"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10031:0:3"
									},
									"scope": 1236,
									"src": "9978:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "10713:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "10733:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "10737:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10746:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 907,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															914,
															944
														],
														"referencedDeclaration": 944,
														"src": "10723:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10723:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10723:26:3"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "10311:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10683:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "10675:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10695:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "10687:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10674:29:3"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10713:0:3"
									},
									"scope": 1236,
									"src": "10656:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "11061:123:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "11077:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "11081:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "11071:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11071:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "11071:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 932,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "11133:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11133:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11155:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11147:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 934,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11147:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11147:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "11159:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "11163:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 940,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "11172:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 929,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "11099:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1476_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11111:21:3",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1475,
														"src": "11099:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11099:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "11099:78:3"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "10762:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10986:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11004:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "10996:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11016:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "11008:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "11025:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10995:48:3"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11061:0:3"
									},
									"scope": 1236,
									"src": "10977:207:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "11551:186:3",
										"statements": [
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11569:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "11561:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 950,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11561:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11601:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11593:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 953,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11593:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11593:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "11605:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11622:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11614:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 958,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11614:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11614:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 952,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "11585:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11585:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11561:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 964,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "11639:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11664:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11656:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 965,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11656:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11656:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11639:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "11635:96:3",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "11668:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "11712:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11689:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11689:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 973,
															"nodeType": "RevertStatement",
															"src": "11682:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "11190:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11519:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11533:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "11525:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11524:17:3"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11551:0:3"
									},
									"scope": 1236,
									"src": "11510:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "12132:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "12146:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12160:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12152:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 988,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12152:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12152:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12146:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "12142:87:3",
												"trueBody": {
													"id": 1000,
													"nodeType": "Block",
													"src": "12164:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12215:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12207:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 994,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12207:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12207:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 993,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12185:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12185:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 999,
															"nodeType": "RevertStatement",
															"src": "12178:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12246:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1036,
														"src": "12238:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1002,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12238:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"arguments": [
														{
															"id": 1005,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "12270:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "12274:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12291:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12283:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12283:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12283:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1004,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "12262:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12262:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12238:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "12308:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12333:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12325:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12325:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12325:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12308:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1024,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "12410:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1025,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "12427:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12410:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1034,
													"nodeType": "IfStatement",
													"src": "12406:109:3",
													"trueBody": {
														"id": 1033,
														"nodeType": "Block",
														"src": "12433:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1028,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "12475:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1029,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "12481:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1030,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "12490:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1027,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12454:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12454:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1032,
																"nodeType": "RevertStatement",
																"src": "12447:57:3"
															}
														]
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "12304:211:3",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "12337:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "12381:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1019,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12358:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12358:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1022,
															"nodeType": "RevertStatement",
															"src": "12351:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "11743:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12070:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12088:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "12080:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12080:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12102:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "12094:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12094:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12114:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "12106:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12106:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12079:43:3"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12132:0:3"
									},
									"scope": 1236,
									"src": "12061:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "13530:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "13554:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "13560:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "13564:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13573:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1047,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1055,
															1085
														],
														"referencedDeclaration": 1085,
														"src": "13540:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13540:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "13540:36:3"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "12527:923:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13464:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13486:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "13478:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13478:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13500:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "13492:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13512:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "13504:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13504:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13477:43:3"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13530:0:3"
									},
									"scope": 1236,
									"src": "13455:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "13922:127:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1068,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "13942:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "13948:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "13952:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1067,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "13932:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13932:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "13932:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1076,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "14004:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14004:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "14018:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "14024:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "14028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1081,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "14037:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1073,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "13970:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1476_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13982:21:3",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1475,
														"src": "13970:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13970:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "13970:72:3"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "13589:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13829:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13851:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "13843:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13843:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13865:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "13857:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13857:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13877:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "13869:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13869:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13899:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "13886:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13886:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13842:62:3"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13922:0:3"
									},
									"scope": 1236,
									"src": "13820:229:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "14562:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1096,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "14581:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1097,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "14585:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1098,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "14594:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14600:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1095,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103,
															1169
														],
														"referencedDeclaration": 1169,
														"src": "14572:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "14572:33:3"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "14055:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14501:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14518:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "14510:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14510:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14530:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "14522:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14522:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14547:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "14539:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14539:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14509:43:3"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14562:0:3"
									},
									"scope": 1236,
									"src": "14492:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "14888:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "14954:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1116,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "14967:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14983:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14975:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14975:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14975:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14967:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14954:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1161,
												"nodeType": "IfStatement",
												"src": "14950:460:3",
												"trueBody": {
													"id": 1160,
													"nodeType": "Block",
													"src": "14987:423:3",
													"statements": [
														{
															"assignments": [
																1124
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1124,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15009:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1160,
																	"src": "15001:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1123,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15001:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1128,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1126,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "15031:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1125,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "15017:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15017:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15001:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "15167:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1132,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15183:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15175:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1130,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15175:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15175:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15167:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1135,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1124,
																			"src": "15189:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1136,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "15198:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15189:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15167:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15206:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1140,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "15224:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1141,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1110,
																				"src": "15231:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1139,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 550,
																			"src": "15207:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15207:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15167:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1150,
															"nodeType": "IfStatement",
															"src": "15163:142:3",
															"trueBody": {
																"id": 1149,
																"nodeType": "Block",
																"src": "15238:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "15285:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1145,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15263:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15263:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1148,
																		"nodeType": "RevertStatement",
																		"src": "15256:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1151,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "15323:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1159,
															"nodeType": "IfStatement",
															"src": "15319:81:3",
															"trueBody": {
																"id": 1158,
																"nodeType": "Block",
																"src": "15334:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1153,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1124,
																					"src": "15366:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1154,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1106,
																					"src": "15373:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1155,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "15377:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1152,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "15357:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15357:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1157,
																		"nodeType": "EmitStatement",
																		"src": "15352:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1162,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "15420:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1164,
														"indexExpression": {
															"id": 1163,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "15436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15420:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1165,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "15447:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15420:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "15420:29:3"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "14618:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14803:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "14812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14832:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "14824:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14849:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "14841:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14841:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14860:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "14855:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14811:59:3"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14888:0:3"
									},
									"scope": 1236,
									"src": "14794:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "15758:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "15772:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15792:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15784:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15784:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15784:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15772:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "15768:91:3",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "15796:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1186,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "15839:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1185,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15817:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15817:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1188,
															"nodeType": "RevertStatement",
															"src": "15810:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1191,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "15868:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1194,
															"indexExpression": {
																"id": 1192,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "15887:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15868:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1195,
														"indexExpression": {
															"id": 1193,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "15894:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15868:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1196,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "15906:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15868:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "15868:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1200,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "15944:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "15951:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "15961:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1199,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "15929:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15929:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "EmitStatement",
												"src": "15924:46:3"
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "15462:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15674:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "15693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15716:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "15708:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15708:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15731:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "15726:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15726:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15692:48:3"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15758:0:3"
									},
									"scope": 1236,
									"src": "15665:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "16284:169:3",
										"statements": [
											{
												"assignments": [
													1215
												],
												"declarations": [
													{
														"constant": false,
														"id": 1215,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16302:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "16294:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1214,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16294:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"id": 1217,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "16319:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1216,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "16310:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16310:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16294:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1220,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "16341:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16358:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1221,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16350:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16350:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16341:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1231,
												"nodeType": "IfStatement",
												"src": "16337:88:3",
												"trueBody": {
													"id": 1230,
													"nodeType": "Block",
													"src": "16362:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1227,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "16406:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1226,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16383:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16383:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1229,
															"nodeType": "RevertStatement",
															"src": "16376:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1232,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1215,
													"src": "16441:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1233,
												"nodeType": "Return",
												"src": "16434:12:3"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "15983:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16221:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16243:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "16235:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16234:17:3"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "16275:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16275:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16274:9:3"
									},
									"scope": 1236,
									"src": "16212:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1237,
							"src": "775:15680:3",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1252,
								1261,
								1270
							]
						}
					],
					"src": "107:16349:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1871
						],
						"IERC721": [
							1353
						]
					},
					"id": 1354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1238,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1354,
							"sourceUnit": 1872,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1239,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1871,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1242,
										"name": "IERC165",
										"nameLocations": [
											"288:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1871,
										"src": "288:7:4"
									},
									"id": 1243,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1241,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:4",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1353,
							"linearizedBaseContracts": [
								1353,
								1871
							],
							"name": "IERC721",
							"nameLocation": "277:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1252,
									"name": "Transfer",
									"nameLocation": "401:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "410:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "432:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "452:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:4"
									},
									"src": "395:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1261,
									"name": "Approval",
									"nameLocation": "588:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "597:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "620:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "646:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:4"
									},
									"src": "582:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1270,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "820:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "843:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "869:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:4"
									},
									"src": "799:85:4"
								},
								{
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "990:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:4"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "1028:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:4"
									},
									"scope": 1353,
									"src": "971:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1204:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:4"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:4"
									},
									"scope": 1353,
									"src": "1187:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1861:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1875:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1887:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1904:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:4"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:4"
									},
									"scope": 1353,
									"src": "1835:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2691:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:4"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:4"
									},
									"scope": 1353,
									"src": "2651:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3495:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3509:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3521:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:4"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:4"
									},
									"scope": 1353,
									"src": "3473:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "4027:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "4039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:4"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:4"
									},
									"scope": 1353,
									"src": "4010:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "4418:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "4436:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:4"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:4"
									},
									"scope": 1353,
									"src": "4391:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "4631:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:4"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "4671:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:4"
									},
									"scope": 1353,
									"src": "4610:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4864:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4879:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:4"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "4920:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:4"
									},
									"scope": 1353,
									"src": "4838:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1354,
							"src": "267:4661:4",
							"usedErrors": [],
							"usedEvents": [
								1252,
								1261,
								1270
							]
						}
					],
					"src": "108:4821:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1371
						]
					},
					"id": 1372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1356,
								"nodeType": "StructuredDocumentation",
								"src": "142:154:5",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1371,
							"linearizedBaseContracts": [
								1371
							],
							"name": "IERC721Receiver",
							"nameLocation": "307:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "329:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "877:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "869:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "903:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "895:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "925:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "957:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "942:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "942:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:108:5"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "986:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "986:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:8:5"
									},
									"scope": 1371,
									"src": "834:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1372,
							"src": "297:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:881:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1353
						],
						"IERC721Metadata": [
							1399
						]
					},
					"id": 1400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1400,
							"sourceUnit": 1354,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1374,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1353,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1377,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1353,
										"src": "357:7:6"
									},
									"id": 1378,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1376,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1399,
							"linearizedBaseContracts": [
								1399,
								1353,
								1871
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1399,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1399,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1399,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1400,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1252,
								1261,
								1270
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
					"exportedSymbols": {
						"ERC721Utils": [
							1476
						],
						"IERC721Errors": [
							89
						],
						"IERC721Receiver": [
							1371
						]
					},
					"id": 1477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 1403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1477,
							"sourceUnit": 1372,
							"src": "144:55:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1402,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1371,
										"src": "152:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../../interfaces/draft-IERC6093.sol",
							"id": 1405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1477,
							"sourceUnit": 137,
							"src": "200:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1404,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "208:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1406,
								"nodeType": "StructuredDocumentation",
								"src": "271:159:7",
								"text": " @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1476,
							"linearizedBaseContracts": [
								1476
							],
							"name": "ERC721Utils",
							"nameLocation": "439:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "1151:758:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1420,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "1165:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1168:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1165:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1173:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1165:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1182:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1165:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "1161:742:7",
												"trueBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "1185:718:7",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1450,
																		"nodeType": "Block",
																		"src": "1295:214:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1437,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1435,
																						"src": "1317:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1438,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1371,
																								"src": "1327:15:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1371_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1439,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1343:16:7",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1370,
																							"src": "1327:32:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1440,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1360:8:7",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1327:41:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1317:51:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1449,
																				"nodeType": "IfStatement",
																				"src": "1313:182:7",
																				"trueBody": {
																					"id": 1448,
																					"nodeType": "Block",
																					"src": "1370:125:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1445,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1413,
																										"src": "1473:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1442,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 89,
																										"src": "1437:13:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$89_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1444,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1451:21:7",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 71,
																									"src": "1437:35:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1446,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1437:39:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1447,
																							"nodeType": "RevertStatement",
																							"src": "1430:46:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1451,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1436,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1435,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "1287:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1451,
																				"src": "1280:13:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1434,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1280:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1279:15:7"
																	},
																	"src": "1271:238:7"
																},
																{
																	"block": {
																		"id": 1469,
																		"nodeType": "Block",
																		"src": "1538:355:7",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1455,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1453,
																							"src": "1560:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1456,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1567:6:7",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1560:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1457,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1577:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "1560:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1467,
																					"nodeType": "Block",
																					"src": "1728:151:7",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "1775:86:7",
																								"nodeType": "YulBlock",
																								"src": "1775:86:7",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "1812:2:7",
																															"nodeType": "YulLiteral",
																															"src": "1812:2:7",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "1816:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "1816:6:7"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "1808:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "1808:3:7"
																													},
																													"nativeSrc": "1808:15:7",
																													"nodeType": "YulFunctionCall",
																													"src": "1808:15:7"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "1831:6:7",
																															"nodeType": "YulIdentifier",
																															"src": "1831:6:7"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "1825:5:7",
																														"nodeType": "YulIdentifier",
																														"src": "1825:5:7"
																													},
																													"nativeSrc": "1825:13:7",
																													"nodeType": "YulFunctionCall",
																													"src": "1825:13:7"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "1801:6:7",
																												"nodeType": "YulIdentifier",
																												"src": "1801:6:7"
																											},
																											"nativeSrc": "1801:38:7",
																											"nodeType": "YulFunctionCall",
																											"src": "1801:38:7"
																										},
																										"nativeSrc": "1801:38:7",
																										"nodeType": "YulExpressionStatement",
																										"src": "1801:38:7"
																									}
																								]
																							},
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1453,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1816:6:7",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1453,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1831:6:7",
																									"valueSize": 1
																								}
																							],
																							"flags": [
																								"memory-safe"
																							],
																							"id": 1466,
																							"nodeType": "InlineAssembly",
																							"src": "1750:111:7"
																						}
																					]
																				},
																				"id": 1468,
																				"nodeType": "IfStatement",
																				"src": "1556:323:7",
																				"trueBody": {
																					"id": 1465,
																					"nodeType": "Block",
																					"src": "1580:142:7",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1462,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1413,
																										"src": "1700:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1459,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 89,
																										"src": "1664:13:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$89_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1461,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1678:21:7",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 71,
																									"src": "1664:35:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1463,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1664:39:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1464,
																							"nodeType": "RevertStatement",
																							"src": "1657:46:7"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1470,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1454,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1453,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "1530:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1470,
																				"src": "1517:19:7",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1452,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "1517:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1516:21:7"
																	},
																	"src": "1510:383:7"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1429,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "1240:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1430,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "1250:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1431,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "1256:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1432,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "1265:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1426,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "1219:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1425,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "1203:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1371_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1203:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1371",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1223:16:7",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1370,
																	"src": "1203:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1203:67:7",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1471,
															"nodeType": "TryStatement",
															"src": "1199:694:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "457:523:7",
										"text": " @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC721Received",
									"nameLocation": "994:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1033:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1025:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1059:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1051:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1081:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1073:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1101:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1093:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1131:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1118:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1118:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:126:7"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:7"
									},
									"scope": 1476,
									"src": "985:924:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1477,
							"src": "431:1480:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:1794:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1479,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1484,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1486,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1506,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1493,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1495,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1506,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1501,
												"id": 1503,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1506,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1507,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1580
						]
					},
					"id": 1581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1509,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1580,
							"linearizedBaseContracts": [
								1580
							],
							"name": "Counters",
							"nameLocation": "432:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1512,
									"members": [
										{
											"constant": false,
											"id": 1511,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1512,
											"src": "786:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1510,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:9",
									"nodeType": "StructDefinition",
									"scope": 1580,
									"src": "447:374:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "901:38:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1520,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1511,
													"src": "918:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1522,
												"nodeType": "Return",
												"src": "911:21:9"
											}
										]
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "844:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1513,
														"name": "Counter",
														"nameLocations": [
															"844:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1512,
														"src": "844:7:9"
													},
													"referencedDeclaration": 1512,
													"src": "844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:9"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "892:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:9"
									},
									"scope": 1580,
									"src": "827:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "998:70:9",
										"statements": [
											{
												"id": 1536,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:9",
												"statements": [
													{
														"expression": {
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1530,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "1032:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1511,
																"src": "1032:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1535,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:9"
													}
												]
											}
										]
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "964:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1525,
														"name": "Counter",
														"nameLocations": [
															"964:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1512,
														"src": "964:7:9"
													},
													"referencedDeclaration": 1512,
													"src": "964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:9"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:9"
									},
									"scope": 1580,
									"src": "945:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1127:176:9",
										"statements": [
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1137:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1548,
												"initialValue": {
													"expression": {
														"id": 1546,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "1153:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1511,
													"src": "1153:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1550,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1185:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:9"
											},
											{
												"id": 1564,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:9",
												"statements": [
													{
														"expression": {
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1556,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "1260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1511,
																"src": "1260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1559,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "1277:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1563,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:9"
													}
												]
											}
										]
									},
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1093:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1539,
														"name": "Counter",
														"nameLocations": [
															"1093:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1512,
														"src": "1093:7:9"
													},
													"referencedDeclaration": 1512,
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:9"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:9"
									},
									"scope": 1580,
									"src": "1074:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1358:35:9",
										"statements": [
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1572,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "1368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:9",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1511,
														"src": "1368:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:9"
											}
										]
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "1324:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1568,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1567,
														"name": "Counter",
														"nameLocations": [
															"1324:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1512,
														"src": "1324:7:9"
													},
													"referencedDeclaration": 1512,
													"src": "1324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:9"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:9"
									},
									"scope": 1580,
									"src": "1309:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1581,
							"src": "424:971:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2925
						],
						"SignedMath": [
							3030
						],
						"Strings": [
							1835
						]
					},
					"id": 1836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 2926,
							"src": "127:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1583,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2925,
										"src": "135:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 3031,
							"src": "165:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1585,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3030,
										"src": "173:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1587,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1835,
							"linearizedBaseContracts": [
								1835
							],
							"name": "Strings",
							"nameLocation": "259:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1590,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "273:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1588,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1589,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1593,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1835,
									"src": "335:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1591,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1592,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1600,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "505:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:10"
									},
									"src": "470:66:10"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "708:627:10",
										"statements": [
											{
												"id": 1646,
												"nodeType": "UncheckedBlock",
												"src": "718:611:10",
												"statements": [
													{
														"assignments": [
															1609
														],
														"declarations": [
															{
																"constant": false,
																"id": 1609,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1646,
																"src": "742:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1608,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1616,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1612,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "770:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1610,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2925_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2745,
																	"src": "759:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:10"
													},
													{
														"assignments": [
															1618
														],
														"declarations": [
															{
																"constant": false,
																"id": 1618,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1646,
																"src": "794:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1617,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1623,
														"initialValue": {
															"arguments": [
																{
																	"id": 1621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "828:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1619,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:10"
													},
													{
														"assignments": [
															1625
														],
														"declarations": [
															{
																"constant": false,
																"id": 1625,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1646,
																"src": "849:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1624,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1626,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:10"
													},
													{
														"AST": {
															"nativeSrc": "930:67:10",
															"nodeType": "YulBlock",
															"src": "930:67:10",
															"statements": [
																{
																	"nativeSrc": "948:35:10",
																	"nodeType": "YulAssignment",
																	"src": "948:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:10",
																						"nodeType": "YulLiteral",
																						"src": "971:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:10"
																				},
																				"nativeSrc": "967:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1618,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1609,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1625,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:10",
																"valueSize": 1
															}
														],
														"id": 1627,
														"nodeType": "InlineAssembly",
														"src": "921:76:10"
													},
													{
														"body": {
															"id": 1642,
															"nodeType": "Block",
															"src": "1023:269:10",
															"statements": [
																{
																	"expression": {
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:10",
																		"subExpression": {
																			"id": 1629,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "1041:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1631,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:10",
																		"nodeType": "YulBlock",
																		"src": "1124:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:10"
																									},
																									"nativeSrc": "1164:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:10"
																							},
																							"nativeSrc": "1159:32:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:10"
																					},
																					"nativeSrc": "1146:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:10"
																				},
																				"nativeSrc": "1146:46:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1590,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1625,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1603,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1632,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:10"
																},
																{
																	"expression": {
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1633,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "1227:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1636,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1637,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "1260:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1641,
																	"nodeType": "IfStatement",
																	"src": "1256:21:10",
																	"trueBody": {
																		"id": 1640,
																		"nodeType": "Break",
																		"src": "1272:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1643,
														"nodeType": "WhileStatement",
														"src": "1010:282:10"
													},
													{
														"expression": {
															"id": 1644,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "1312:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1607,
														"id": 1645,
														"nodeType": "Return",
														"src": "1305:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "655:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:10"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1605,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:10"
									},
									"scope": 1835,
									"src": "637:698:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "1511:92:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "1542:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1651,
																			"src": "1588:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1666,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3030,
																			"src": "1573:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3030_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3029,
																		"src": "1573:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1665,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "1564:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1656,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1672,
												"nodeType": "Return",
												"src": "1521:75:10"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1650,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:10"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1653,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:10"
									},
									"scope": 1835,
									"src": "1435:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "1782:100:10",
										"statements": [
											{
												"id": 1692,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1683,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1677,
																	"src": "1835:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1686,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1677,
																				"src": "1854:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1684,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "1842:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2925_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2867,
																			"src": "1842:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1682,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1694,
																	1777,
																	1797
																],
																"referencedDeclaration": 1777,
																"src": "1823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1681,
														"id": 1691,
														"nodeType": "Return",
														"src": "1816:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "1729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:10"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "1767:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:10"
									},
									"scope": 1835,
									"src": "1708:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "2095:435:10",
										"statements": [
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1776,
														"src": "2105:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"id": 1706,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1697,
													"src": "2126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:10"
											},
											{
												"assignments": [
													1709
												],
												"declarations": [
													{
														"constant": false,
														"id": 1709,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1776,
														"src": "2141:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1718,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1713,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "2177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1710,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:10"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1719,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "2198:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1721,
														"indexExpression": {
															"hexValue": "30",
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:10"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1725,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "2223:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1727,
														"indexExpression": {
															"hexValue": "31",
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:10"
											},
											{
												"body": {
													"id": 1759,
													"nodeType": "Block",
													"src": "2293:95:10",
													"statements": [
														{
															"expression": {
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1745,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "2307:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1747,
																	"indexExpression": {
																		"id": 1746,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1732,
																		"src": "2314:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1748,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "2319:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1752,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1749,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "2330:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1754,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:10"
														},
														{
															"expression": {
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1755,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "2361:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1758,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1739,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "2281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"initializationExpression": {
													"assignments": [
														1732
													],
													"declarations": [
														{
															"constant": false,
															"id": 1732,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1760,
															"src": "2253:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1731,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1738,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1734,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "2269:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:10",
														"subExpression": {
															"id": 1742,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "2290:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1744,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1761,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "2401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "2397:96:10",
												"trueBody": {
													"id": 1769,
													"nodeType": "Block",
													"src": "2418:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1765,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "2468:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1766,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1699,
																		"src": "2475:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1764,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "2439:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1768,
															"nodeType": "RevertStatement",
															"src": "2432:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1773,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "2516:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1771,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1775,
												"nodeType": "Return",
												"src": "2502:21:10"
											}
										]
									},
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2041:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:10"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2080:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:10"
									},
									"scope": 1835,
									"src": "2005:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "2762:75:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1790,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "2807:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1788,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1786,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1793,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2815:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1785,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1694,
															1777,
															1797
														],
														"referencedDeclaration": 1777,
														"src": "2779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1795,
												"nodeType": "Return",
												"src": "2772:58:10"
											}
										]
									},
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2710:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:10"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2747:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:10"
									},
									"scope": 1835,
									"src": "2689:148:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "2992:104:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1809,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "3015:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1807,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1814,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "3034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1812,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1821,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "3063:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1819,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1818,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1827,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "3086:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1825,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1824,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1832,
												"nodeType": "Return",
												"src": "3002:87:10"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2929:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2946:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:10"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2986:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:10"
									},
									"scope": 1835,
									"src": "2914:182:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1836,
							"src": "251:2847:10",
							"usedErrors": [
								1600
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1859
						],
						"IERC165": [
							1871
						]
					},
					"id": 1860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1837,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 1872,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1838,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1871,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1841,
										"name": "IERC165",
										"nameLocations": [
											"688:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1871,
										"src": "688:7:11"
									},
									"id": 1842,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1840,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1859,
							"linearizedBaseContracts": [
								1859,
								1871
							],
							"name": "ERC165",
							"nameLocation": "678:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1870
									],
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "845:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1850,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "862:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1852,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "882:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1871_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1871_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1851,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1871",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1849,
												"id": 1856,
												"nodeType": "Return",
												"src": "855:47:11"
											}
										]
									},
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "790:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1844,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:11"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "839:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:11"
									},
									"scope": 1859,
									"src": "763:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1860,
							"src": "660:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1871
						]
					},
					"id": 1872,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1862,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1871,
							"linearizedBaseContracts": [
								1871
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1864,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 1871,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1872,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2925
						]
					},
					"id": 2926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1873,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1874,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2925,
							"linearizedBaseContracts": [
								2925
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1877,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1882,
									"members": [
										{
											"id": 1878,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 1879,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 1880,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 1881,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															1895
														],
														"declarations": [
															{
																"constant": false,
																"id": 1895,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1912,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1894,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1899,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1896,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1885,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1897,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1887,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1900,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1901,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1885,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1907,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1905,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1893,
															"id": 1906,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1909,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1910,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1893,
														"id": 1911,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 2925,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 1940,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1926,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1927,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1933,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1925,
															"id": 1932,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1935,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1936,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1938,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1925,
														"id": 1939,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 2925,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 1982,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1954,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1945,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1961,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1959,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1953,
															"id": 1960,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															1963
														],
														"declarations": [
															{
																"constant": false,
																"id": 1963,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1982,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1962,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1967,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1964,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1945,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1965,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1968,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1969,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1971,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1977,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1975,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1953,
															"id": 1976,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1979,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1980,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1953,
														"id": 1981,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 2925,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2010,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1996,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2003,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2001,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1995,
															"id": 2002,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2005,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2006,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2008,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1995,
														"id": 2009,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1991,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 2925,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2038,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2024,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2031,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2029,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2023,
															"id": 2030,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2033,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2034,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2036,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2023,
														"id": 2037,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 2925,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2050,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2051,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2054,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2053,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2056,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 2925,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2068,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2069,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2072,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2071,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2067,
												"id": 2074,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 2925,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2086,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2087,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2089,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2090,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2091,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2085,
												"id": 2097,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 2925,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2112,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2102,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2113,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2104,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2115,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2122,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2102,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2125,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2126,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2131,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 2925,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2257,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2146
														],
														"declarations": [
															{
																"constant": false,
																"id": 2146,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2257,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2150,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2147,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2148,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2138,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2152
														],
														"declarations": [
															{
																"constant": false,
																"id": 2152,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2257,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2151,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2153,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2146,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2146,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2138,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2154,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2155,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2163,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2162,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2158,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2159,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2144,
																	"id": 2161,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2164,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2165,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2171,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2170,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2167,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1877,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2169,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2173
														],
														"declarations": [
															{
																"constant": false,
																"id": 2173,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2257,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2172,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2174,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2146,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2146,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2146,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2173,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2136,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2138,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2175,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2177
														],
														"declarations": [
															{
																"constant": false,
																"id": 2177,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2257,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2176,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2184,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2178,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2180,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2182,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2146,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2146,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2185,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2186,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2187,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2188,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2191,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2193
														],
														"declarations": [
															{
																"constant": false,
																"id": 2193,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2257,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2192,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2200,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2195,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2201,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2203,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2204,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2208,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2209,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2211,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2212,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2216,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2217,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2219,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2220,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2224,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2225,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2227,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2228,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2232,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2233,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2235,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2236,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2240,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2241,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2243,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2244,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2248,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2249,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2250,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2251,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2193,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2254,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2255,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2144,
														"id": 2256,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 2925,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2275
												],
												"declarations": [
													{
														"constant": false,
														"id": 2275,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2301,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2281,
												"initialValue": {
													"arguments": [
														{
															"id": 2277,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2278,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2279,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2276,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2259,
															2302
														],
														"referencedDeclaration": 2259,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2283,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1882",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1882",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2282,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1882_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2286,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2262,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2287,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2288,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2285,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2298,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2297,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2293,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2296,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2299,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2275,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2300,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1882",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2267,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 1882,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1882",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 2925,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2413,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2310,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2305,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2316,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2315,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2309,
															"id": 2314,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2318
												],
												"declarations": [
													{
														"constant": false,
														"id": 2318,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2413,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2327,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2321,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2320,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2581,
																			2616
																		],
																		"referencedDeclaration": 2581,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2325,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2412,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2328,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2329,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2318,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2330,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2331,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2334,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2338,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2339,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2340,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2318,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2341,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2342,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2345,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2349,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2350,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2351,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2318,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2352,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2353,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2356,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2360,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2361,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2362,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2318,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2363,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2364,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2367,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2371,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2372,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2373,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2318,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2374,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2375,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2378,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2382,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2383,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2384,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2318,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2385,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2386,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2389,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2393,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2394,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2395,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2318,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2396,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2305,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2397,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2400,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2404,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2406,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2407,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2305,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2408,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2318,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2405,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2309,
														"id": 2411,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 2925,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2448,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2447,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2426
														],
														"declarations": [
															{
																"constant": false,
																"id": 2426,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2447,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2425,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2430,
														"initialValue": {
															"arguments": [
																{
																	"id": 2428,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2417,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2427,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2414,
																	2449
																],
																"referencedDeclaration": 2414,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2433,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2420,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2432,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2924,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1882_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2435,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2426,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2436,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2426,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2438,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2417,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2444,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2424,
														"id": 2446,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1882",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2418,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 1882,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1882",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 2925,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2580,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2458
												],
												"declarations": [
													{
														"constant": false,
														"id": 2458,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2580,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2460,
												"initialValue": {
													"hexValue": "30",
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2577,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2461,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2475,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2474,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2466,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2469,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2490,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2489,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2484,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2491,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2505,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2504,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2499,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2506,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2520,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2519,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2511,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2514,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2521,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2535,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2534,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2526,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2529,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2536,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2549,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2541,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2544,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2551,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2565,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2564,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2566,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2576,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2575,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2571,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2574,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2578,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2458,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2456,
												"id": 2579,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2450,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 2925,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2614,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2593
														],
														"declarations": [
															{
																"constant": false,
																"id": 2593,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2614,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2592,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2597,
														"initialValue": {
															"arguments": [
																{
																	"id": 2595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2584,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2594,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2581,
																	2616
																],
																"referencedDeclaration": 2581,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2598,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2600,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2587,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2599,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2924,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1882_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2602,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2603,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2593,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2605,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2584,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2611,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2591,
														"id": 2613,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2582,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1882",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2585,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 1882,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1882",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 2925,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2744,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2625
												],
												"declarations": [
													{
														"constant": false,
														"id": 2625,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2744,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2627,
												"initialValue": {
													"hexValue": "30",
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2741,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2628,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2644,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2643,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2633,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2639,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2642,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2645,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2661,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2660,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2655,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2656,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2662,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2678,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2677,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2667,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2672,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2673,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2676,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2679,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2695,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2694,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2689,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2696,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2712,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2711,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2713,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2729,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2728,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2730,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2740,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2739,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2735,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2738,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2742,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2625,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2623,
												"id": 2743,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 2925,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 2778,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															2757
														],
														"declarations": [
															{
																"constant": false,
																"id": 2757,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2778,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2756,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2761,
														"initialValue": {
															"arguments": [
																{
																	"id": 2759,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2748,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2758,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2745,
																	2780
																],
																"referencedDeclaration": 2745,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2762,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2764,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2751,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2763,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2924,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1882_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2768,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2766,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2767,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2757,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2769,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2748,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2755,
														"id": 2777,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2746,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1882",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2749,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 1882,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1882",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 2925,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2866,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													2789
												],
												"declarations": [
													{
														"constant": false,
														"id": 2789,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2866,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2788,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2791,
												"initialValue": {
													"hexValue": "30",
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 2863,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2792,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2806,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 2805,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2797,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2783,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2800,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2807,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2821,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 2820,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2783,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2815,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2822,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2836,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 2835,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2783,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2830,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2834,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2837,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2851,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 2850,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2783,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2845,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2846,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2849,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2852,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2862,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 2861,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2857,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2789,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2860,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2864,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2789,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2787,
												"id": 2865,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 2925,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2904,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 2903,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															2879
														],
														"declarations": [
															{
																"constant": false,
																"id": 2879,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2903,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2878,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2883,
														"initialValue": {
															"arguments": [
																{
																	"id": 2881,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2870,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2880,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2867,
																	2905
																],
																"referencedDeclaration": 2867,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2884,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2886,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2873,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1882",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2885,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2924,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1882_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2888,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2891,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2889,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2879,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2890,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2892,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2894,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2870,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2900,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2877,
														"id": 2902,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2868,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1882",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2872,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2871,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 1882,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1882",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 2925,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2923,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2916,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2909,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1882",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1882",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2914,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2913,
												"id": 2922,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 2906,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1882",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2908,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2907,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 1882,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1882",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 2925,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2926,
							"src": "203:14914:13",
							"usedErrors": [
								1877
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3030
						]
					},
					"id": 3031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2928,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3030,
							"linearizedBaseContracts": [
								3030
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2938,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2939,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2942,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2933,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 2941,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2931,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2937,
												"id": 2944,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 2929,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2930,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2932,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 2937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2935,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 3030,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2963,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2956,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2949,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2957,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2951,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2960,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2951,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 2959,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2955,
												"id": 2962,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 2947,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2948,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2950,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2953,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 3030,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3007,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													2975
												],
												"declarations": [
													{
														"constant": false,
														"id": 2975,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3007,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2974,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2988,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2976,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2967,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2977,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2969,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2979,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2980,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2981,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2969,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2983,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2986,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2989,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2994,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2975,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2992,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2990,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2999,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2967,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3000,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2969,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3002,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3004,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2973,
												"id": 3006,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 2965,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2966,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2968,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2971,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 3030,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3028,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 3027,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3018,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 3022,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 3021,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3011,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3016,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3015,
														"id": 3026,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3009,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3010,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3029,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 3030,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3031,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"contracts/Marketplace.sol": {
				"ast": {
					"absolutePath": "contracts/Marketplace.sol",
					"exportedSymbols": {
						"Context": [
							1506
						],
						"Counters": [
							1580
						],
						"ERC165": [
							1859
						],
						"ERC721": [
							1236
						],
						"ERC721Utils": [
							1476
						],
						"IERC165": [
							1871
						],
						"IERC20": [
							279
						],
						"IERC721": [
							1353
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1399
						],
						"NFTMarketplace": [
							3889
						],
						"NFTMarketplace__ItemPriceIsZero": [
							3040
						],
						"NFTMarketplace__ItemPriceNotMet": [
							3044
						],
						"NFTMarketplace__ListingPriceIsNotMet": [
							3048
						],
						"NFTMarketplace__YouAreNotOwnerOfThisItem": [
							3052
						],
						"ReentrancyGuard": [
							201
						],
						"Strings": [
							1835
						]
					},
					"id": 3890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3033,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3890,
							"sourceUnit": 1237,
							"src": "75:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3034,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3890,
							"sourceUnit": 1581,
							"src": "134:52:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 3035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3890,
							"sourceUnit": 202,
							"src": "188:62:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3036,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3890,
							"sourceUnit": 280,
							"src": "252:56:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "19852e02",
							"id": 3040,
							"name": "NFTMarketplace__ItemPriceIsZero",
							"nameLocation": "332:31:15",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3039,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3038,
										"mutability": "mutable",
										"name": "message",
										"nameLocation": "371:7:15",
										"nodeType": "VariableDeclaration",
										"scope": 3040,
										"src": "364:14:15",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3037,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "364:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "363:16:15"
							},
							"src": "326:54:15"
						},
						{
							"errorSelector": "11968994",
							"id": 3044,
							"name": "NFTMarketplace__ItemPriceNotMet",
							"nameLocation": "388:31:15",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3043,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3042,
										"mutability": "mutable",
										"name": "message",
										"nameLocation": "427:7:15",
										"nodeType": "VariableDeclaration",
										"scope": 3044,
										"src": "420:14:15",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3041,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "420:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "419:16:15"
							},
							"src": "382:54:15"
						},
						{
							"errorSelector": "07e6de36",
							"id": 3048,
							"name": "NFTMarketplace__ListingPriceIsNotMet",
							"nameLocation": "444:36:15",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3047,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3046,
										"mutability": "mutable",
										"name": "message",
										"nameLocation": "488:7:15",
										"nodeType": "VariableDeclaration",
										"scope": 3048,
										"src": "481:14:15",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3045,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "481:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "480:16:15"
							},
							"src": "438:59:15"
						},
						{
							"errorSelector": "47ad5e4f",
							"id": 3052,
							"name": "NFTMarketplace__YouAreNotOwnerOfThisItem",
							"nameLocation": "505:40:15",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3051,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3050,
										"mutability": "mutable",
										"name": "message",
										"nameLocation": "553:7:15",
										"nodeType": "VariableDeclaration",
										"scope": 3052,
										"src": "546:14:15",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3049,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "546:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "545:16:15"
							},
							"src": "499:63:15"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3053,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"593:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "593:15:15"
									},
									"id": 3054,
									"nodeType": "InheritanceSpecifier",
									"src": "593:15:15"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3889,
							"linearizedBaseContracts": [
								3889,
								201
							],
							"name": "NFTMarketplace",
							"nameLocation": "575:14:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3058,
									"libraryName": {
										"id": 3055,
										"name": "Counters",
										"nameLocations": [
											"624:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1580,
										"src": "624:8:15"
									},
									"nodeType": "UsingForDirective",
									"src": "618:36:15",
									"typeName": {
										"id": 3057,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3056,
											"name": "Counters.Counter",
											"nameLocations": [
												"637:8:15",
												"646:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1512,
											"src": "637:16:15"
										},
										"referencedDeclaration": 1512,
										"src": "637:16:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3061,
									"mutability": "mutable",
									"name": "s_nftIds",
									"nameLocation": "685:8:15",
									"nodeType": "VariableDeclaration",
									"scope": 3889,
									"src": "660:33:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1512_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3060,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3059,
											"name": "Counters.Counter",
											"nameLocations": [
												"660:8:15",
												"669:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1512,
											"src": "660:16:15"
										},
										"referencedDeclaration": 1512,
										"src": "660:16:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3064,
									"mutability": "mutable",
									"name": "s_nftSold",
									"nameLocation": "725:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3889,
									"src": "700:34:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1512_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3063,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3062,
											"name": "Counters.Counter",
											"nameLocations": [
												"700:8:15",
												"709:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1512,
											"src": "700:16:15"
										},
										"referencedDeclaration": 1512,
										"src": "700:16:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1512_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3066,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "802:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3889,
									"src": "778:29:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3065,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "778:15:15",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3074,
									"mutability": "mutable",
									"name": "listingPrice",
									"nameLocation": "822:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3889,
									"src": "814:41:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "814:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000_by_1",
											"typeString": "int_const 25000000000000000"
										},
										"id": 3073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e303235",
											"id": 3068,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "837:5:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_40",
												"typeString": "rational_const 1 / 40"
											},
											"value": "0.025"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 3069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "846:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 3070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "852:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "846:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 3072,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "845:10:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "837:18:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000_by_1",
											"typeString": "int_const 25000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2ad8a220",
									"id": 3077,
									"mutability": "mutable",
									"name": "tradingToken",
									"nameLocation": "947:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3889,
									"src": "933:26:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$279",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3076,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3075,
											"name": "IERC20",
											"nameLocations": [
												"933:6:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 279,
											"src": "933:6:15"
										},
										"referencedDeclaration": 279,
										"src": "933:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$279",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3096,
										"nodeType": "Block",
										"src": "1003:93:15",
										"statements": [
											{
												"expression": {
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3082,
														"name": "tradingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "1014:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$279",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3084,
																"name": "_erc20Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3079,
																"src": "1036:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3083,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "1029:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$279_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1029:21:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$279",
															"typeString": "contract IERC20"
														}
													},
													"src": "1014:36:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$279",
														"typeString": "contract IERC20"
													}
												},
												"id": 3087,
												"nodeType": "ExpressionStatement",
												"src": "1014:36:15"
											},
											{
												"expression": {
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3088,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3066,
														"src": "1061:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3091,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1077:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1081:6:15",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1077:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1069:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 3089,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1069:8:15",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 3093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1069:19:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1061:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3095,
												"nodeType": "ExpressionStatement",
												"src": "1061:27:15"
											}
										]
									},
									"id": 3097,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "_erc20Address",
												"nameLocation": "988:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "980:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:23:15"
									},
									"returnParameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:15"
									},
									"scope": 3889,
									"src": "968:128:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.Item",
									"id": 3112,
									"members": [
										{
											"constant": false,
											"id": 3099,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "1132:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "1127:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3098,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1127:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3101,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "1157:11:15",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "1149:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3100,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1149:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3103,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1187:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "1179:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1179:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3105,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "1213:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "1205:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3104,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1205:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3107,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "1238:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "1230:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3106,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1230:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3109,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1262:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "1254:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3108,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1254:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3111,
											"mutability": "mutable",
											"name": "sold",
											"nameLocation": "1283:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 3112,
											"src": "1278:9:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3110,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1278:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "1111:4:15",
									"nodeType": "StructDefinition",
									"scope": 3889,
									"src": "1104:191:15",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3117,
									"mutability": "mutable",
									"name": "Items",
									"nameLocation": "1336:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3889,
									"src": "1303:38:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.Item)"
									},
									"typeName": {
										"id": 3116,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3113,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1311:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1303:24:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3115,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3114,
												"name": "Item",
												"nameLocations": [
													"1322:4:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3112,
												"src": "1322:4:15"
											},
											"referencedDeclaration": 3112,
											"src": "1322:4:15",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
												"typeString": "struct NFTMarketplace.Item"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f8551f8be25732324fcda411a126b3c851e038b0ff8d097a3951dded3772f43f",
									"id": 3133,
									"name": "ItemList",
									"nameLocation": "1398:8:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1430:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1417:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1417:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3121,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "1463:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1447:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3123,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1500:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1484:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3125,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1526:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1518:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3127,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1551:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1543:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3129,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1575:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1567:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3131,
												"indexed": false,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "1596:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1591:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:201:15"
									},
									"src": "1392:216:15"
								},
								{
									"anonymous": false,
									"eventSelector": "9a9f9faf9d964b2fb1888cdf05202baf5a1b99d45f7afd6a5e062ac544b3c150",
									"id": 3147,
									"name": "ItemBought",
									"nameLocation": "1622:10:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3135,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "1659:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1643:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3137,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1696:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1680:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3139,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1722:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1714:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3141,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1747:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1739:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3143,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1771:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1763:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3145,
												"indexed": false,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "1792:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "1787:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1787:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:171:15"
									},
									"src": "1616:188:15"
								},
								{
									"anonymous": false,
									"eventSelector": "052679d6cf973dff612de0d67ad1642e7b8b401dcb1c41ea86bf35b82ac6bf88",
									"id": 3161,
									"name": "ItemResell",
									"nameLocation": "1818:10:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "1855:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1839:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1892:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1876:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1918:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1910:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1943:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1935:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3157,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1967:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1959:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3159,
												"indexed": false,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "1988:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3161,
												"src": "1983:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1983:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:171:15"
									},
									"src": "1812:188:15"
								},
								{
									"body": {
										"id": 3168,
										"nodeType": "Block",
										"src": "2067:38:15",
										"statements": [
											{
												"expression": {
													"id": 3166,
													"name": "listingPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3074,
													"src": "2085:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3165,
												"id": 3167,
												"nodeType": "Return",
												"src": "2078:19:15"
											}
										]
									},
									"functionSelector": "12e85585",
									"id": 3169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getListingPrice",
									"nameLocation": "2017:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:2:15"
									},
									"returnParameters": {
										"id": 3165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "2058:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:9:15"
									},
									"scope": 3889,
									"src": "2008:97:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "2209:583:15",
										"statements": [
											{
												"assignments": [
													3177
												],
												"declarations": [
													{
														"constant": false,
														"id": 3177,
														"mutability": "mutable",
														"name": "itemCount",
														"nameLocation": "2225:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "2220:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3176,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2220:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3181,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3178,
															"name": "s_nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3061,
															"src": "2237:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3179,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2246:7:15",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1524,
														"src": "2237:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1512_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2220:35:15"
											},
											{
												"assignments": [
													3183
												],
												"declarations": [
													{
														"constant": false,
														"id": 3183,
														"mutability": "mutable",
														"name": "unSoldItemsCount",
														"nameLocation": "2271:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "2266:21:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3182,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2266:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3191,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3184,
																"name": "s_nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3061,
																"src": "2290:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1512_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2299:7:15",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1524,
															"src": "2290:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1512_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 3186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2290:18:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3187,
																"name": "s_nftSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3064,
																"src": "2311:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1512_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 3188,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2321:7:15",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1524,
															"src": "2311:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1512_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 3189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2311:19:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2290:40:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2266:64:15"
											},
											{
												"assignments": [
													3193
												],
												"declarations": [
													{
														"constant": false,
														"id": 3193,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "2346:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "2341:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3192,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2341:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3195,
												"initialValue": {
													"hexValue": "30",
													"id": 3194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2361:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:21:15"
											},
											{
												"assignments": [
													3200
												],
												"declarations": [
													{
														"constant": false,
														"id": 3200,
														"mutability": "mutable",
														"name": "items",
														"nameLocation": "2389:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "2375:19:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTMarketplace.Item[]"
														},
														"typeName": {
															"baseType": {
																"id": 3198,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3197,
																	"name": "Item",
																	"nameLocations": [
																		"2375:4:15"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3112,
																	"src": "2375:4:15"
																},
																"referencedDeclaration": 3112,
																"src": "2375:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																	"typeString": "struct NFTMarketplace.Item"
																}
															},
															"id": 3199,
															"nodeType": "ArrayTypeName",
															"src": "2375:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.Item[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3207,
												"initialValue": {
													"arguments": [
														{
															"id": 3205,
															"name": "unSoldItemsCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3183,
															"src": "2408:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2397:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTMarketplace.Item memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3202,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3201,
																	"name": "Item",
																	"nameLocations": [
																		"2401:4:15"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3112,
																	"src": "2401:4:15"
																},
																"referencedDeclaration": 3112,
																"src": "2401:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																	"typeString": "struct NFTMarketplace.Item"
																}
															},
															"id": 3203,
															"nodeType": "ArrayTypeName",
															"src": "2401:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.Item[]"
															}
														}
													},
													"id": 3206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.Item memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2375:50:15"
											},
											{
												"body": {
													"id": 3257,
													"nodeType": "Block",
													"src": "2473:287:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3218,
																			"name": "Items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3117,
																			"src": "2492:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																			}
																		},
																		"id": 3222,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3219,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3209,
																				"src": "2498:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2502:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2498:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2492:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$3112_storage",
																			"typeString": "struct NFTMarketplace.Item storage ref"
																		}
																	},
																	"id": 3223,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2505:5:15",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3107,
																	"src": "2492:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 3226,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2522:4:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																				"typeString": "contract NFTMarketplace"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																				"typeString": "contract NFTMarketplace"
																			}
																		],
																		"id": 3225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2514:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3224,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2514:7:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2514:13:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2492:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3256,
															"nodeType": "IfStatement",
															"src": "2488:261:15",
															"trueBody": {
																"id": 3255,
																"nodeType": "Block",
																"src": "2529:220:15",
																"statements": [
																	{
																		"assignments": [
																			3230
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3230,
																				"mutability": "mutable",
																				"name": "currentId",
																				"nameLocation": "2553:9:15",
																				"nodeType": "VariableDeclaration",
																				"scope": 3255,
																				"src": "2548:14:15",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3229,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "2548:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3237,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"id": 3231,
																					"name": "Items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3117,
																					"src": "2565:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																					}
																				},
																				"id": 3235,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3232,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3209,
																						"src": "2571:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3233,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2575:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2571:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2565:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_storage",
																					"typeString": "struct NFTMarketplace.Item storage ref"
																				}
																			},
																			"id": 3236,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2578:6:15",
																			"memberName": "itemId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3099,
																			"src": "2565:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2548:36:15"
																	},
																	{
																		"assignments": [
																			3240
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3240,
																				"mutability": "mutable",
																				"name": "currentItem",
																				"nameLocation": "2615:11:15",
																				"nodeType": "VariableDeclaration",
																				"scope": 3255,
																				"src": "2603:23:15",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item"
																				},
																				"typeName": {
																					"id": 3239,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 3238,
																						"name": "Item",
																						"nameLocations": [
																							"2603:4:15"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 3112,
																						"src": "2603:4:15"
																					},
																					"referencedDeclaration": 3112,
																					"src": "2603:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																						"typeString": "struct NFTMarketplace.Item"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3244,
																		"initialValue": {
																			"baseExpression": {
																				"id": 3241,
																				"name": "Items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3117,
																				"src": "2629:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																				}
																			},
																			"id": 3243,
																			"indexExpression": {
																				"id": 3242,
																				"name": "currentId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3230,
																				"src": "2635:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2629:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Item_$3112_storage",
																				"typeString": "struct NFTMarketplace.Item storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2603:42:15"
																	},
																	{
																		"expression": {
																			"id": 3249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3245,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3200,
																					"src": "2664:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTMarketplace.Item memory[] memory"
																					}
																				},
																				"id": 3247,
																				"indexExpression": {
																					"id": 3246,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3193,
																					"src": "2670:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2664:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3248,
																				"name": "currentItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3240,
																				"src": "2686:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item memory"
																				}
																			},
																			"src": "2664:33:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																				"typeString": "struct NFTMarketplace.Item memory"
																			}
																		},
																		"id": 3250,
																		"nodeType": "ExpressionStatement",
																		"src": "2664:33:15"
																	},
																	{
																		"expression": {
																			"id": 3253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3251,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3193,
																				"src": "2716:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2732:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2716:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3254,
																		"nodeType": "ExpressionStatement",
																		"src": "2716:17:15"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3212,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "2453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3213,
														"name": "itemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "2457:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2453:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3258,
												"initializationExpression": {
													"assignments": [
														3209
													],
													"declarations": [
														{
															"constant": false,
															"id": 3209,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2446:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3258,
															"src": "2441:6:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3208,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2441:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3211,
													"initialValue": {
														"hexValue": "30",
														"id": 3210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2450:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2441:10:15"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2468:3:15",
														"subExpression": {
															"id": 3215,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "2468:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3217,
													"nodeType": "ExpressionStatement",
													"src": "2468:3:15"
												},
												"nodeType": "ForStatement",
												"src": "2436:324:15"
											},
											{
												"expression": {
													"id": 3259,
													"name": "items",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3200,
													"src": "2779:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.Item memory[] memory"
													}
												},
												"functionReturnParameters": 3175,
												"id": 3260,
												"nodeType": "Return",
												"src": "2772:12:15"
											}
										]
									},
									"functionSelector": "3b1b1ad0",
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllListedItems",
									"nameLocation": "2151:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:2:15"
									},
									"returnParameters": {
										"id": 3175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "2194:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTMarketplace.Item[]"
												},
												"typeName": {
													"baseType": {
														"id": 3172,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3171,
															"name": "Item",
															"nameLocations": [
																"2194:4:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3112,
															"src": "2194:4:15"
														},
														"referencedDeclaration": 3112,
														"src": "2194:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
															"typeString": "struct NFTMarketplace.Item"
														}
													},
													"id": 3173,
													"nodeType": "ArrayTypeName",
													"src": "2194:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
														"typeString": "struct NFTMarketplace.Item[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2193:15:15"
									},
									"scope": 3889,
									"src": "2142:650:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3373,
										"nodeType": "Block",
										"src": "2930:711:15",
										"statements": [
											{
												"assignments": [
													3270
												],
												"declarations": [
													{
														"constant": false,
														"id": 3270,
														"mutability": "mutable",
														"name": "totalListedItems",
														"nameLocation": "2946:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 3373,
														"src": "2941:21:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3269,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2941:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3274,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3271,
															"name": "s_nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3061,
															"src": "2965:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2974:7:15",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1524,
														"src": "2965:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1512_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2965:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2941:42:15"
											},
											{
												"assignments": [
													3276
												],
												"declarations": [
													{
														"constant": false,
														"id": 3276,
														"mutability": "mutable",
														"name": "itemCount",
														"nameLocation": "2999:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 3373,
														"src": "2994:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3275,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2994:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3278,
												"initialValue": {
													"hexValue": "30",
													"id": 3277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3011:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2994:18:15"
											},
											{
												"assignments": [
													3280
												],
												"declarations": [
													{
														"constant": false,
														"id": 3280,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "3028:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 3373,
														"src": "3023:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3279,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3023:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3282,
												"initialValue": {
													"hexValue": "30",
													"id": 3281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3043:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3023:21:15"
											},
											{
												"body": {
													"id": 3308,
													"nodeType": "Block",
													"src": "3104:113:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3293,
																			"name": "Items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3117,
																			"src": "3123:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																			}
																		},
																		"id": 3297,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3294,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3284,
																				"src": "3129:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3133:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3129:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3123:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$3112_storage",
																			"typeString": "struct NFTMarketplace.Item storage ref"
																		}
																	},
																	"id": 3298,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3136:5:15",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3107,
																	"src": "3123:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3299,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3145:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3149:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3145:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3123:32:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3307,
															"nodeType": "IfStatement",
															"src": "3119:87:15",
															"trueBody": {
																"id": 3306,
																"nodeType": "Block",
																"src": "3157:49:15",
																"statements": [
																	{
																		"expression": {
																			"id": 3304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3302,
																				"name": "itemCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3276,
																				"src": "3176:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3189:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3176:14:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3305,
																		"nodeType": "ExpressionStatement",
																		"src": "3176:14:15"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3287,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3284,
														"src": "3077:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3288,
														"name": "totalListedItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "3081:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3077:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3309,
												"initializationExpression": {
													"assignments": [
														3284
													],
													"declarations": [
														{
															"constant": false,
															"id": 3284,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3070:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3309,
															"src": "3062:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3283,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3062:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3286,
													"initialValue": {
														"hexValue": "30",
														"id": 3285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3074:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3062:13:15"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3099:3:15",
														"subExpression": {
															"id": 3290,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3284,
															"src": "3099:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3292,
													"nodeType": "ExpressionStatement",
													"src": "3099:3:15"
												},
												"nodeType": "ForStatement",
												"src": "3057:160:15"
											},
											{
												"assignments": [
													3314
												],
												"declarations": [
													{
														"constant": false,
														"id": 3314,
														"mutability": "mutable",
														"name": "items",
														"nameLocation": "3243:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3373,
														"src": "3229:19:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTMarketplace.Item[]"
														},
														"typeName": {
															"baseType": {
																"id": 3312,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3311,
																	"name": "Item",
																	"nameLocations": [
																		"3229:4:15"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3112,
																	"src": "3229:4:15"
																},
																"referencedDeclaration": 3112,
																"src": "3229:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																	"typeString": "struct NFTMarketplace.Item"
																}
															},
															"id": 3313,
															"nodeType": "ArrayTypeName",
															"src": "3229:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.Item[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3321,
												"initialValue": {
													"arguments": [
														{
															"id": 3319,
															"name": "itemCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3276,
															"src": "3262:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3251:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTMarketplace.Item memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3316,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3315,
																	"name": "Item",
																	"nameLocations": [
																		"3255:4:15"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3112,
																	"src": "3255:4:15"
																},
																"referencedDeclaration": 3112,
																"src": "3255:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																	"typeString": "struct NFTMarketplace.Item"
																}
															},
															"id": 3317,
															"nodeType": "ArrayTypeName",
															"src": "3255:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.Item[]"
															}
														}
													},
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:21:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.Item memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3229:43:15"
											},
											{
												"body": {
													"id": 3369,
													"nodeType": "Block",
													"src": "3327:284:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3332,
																			"name": "Items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3117,
																			"src": "3346:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																			}
																		},
																		"id": 3336,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3333,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3323,
																				"src": "3352:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3356:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3352:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3346:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$3112_storage",
																			"typeString": "struct NFTMarketplace.Item storage ref"
																		}
																	},
																	"id": 3337,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3359:5:15",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3107,
																	"src": "3346:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3338,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3368:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3372:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3368:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3346:32:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3368,
															"nodeType": "IfStatement",
															"src": "3342:258:15",
															"trueBody": {
																"id": 3367,
																"nodeType": "Block",
																"src": "3380:220:15",
																"statements": [
																	{
																		"assignments": [
																			3342
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3342,
																				"mutability": "mutable",
																				"name": "currentId",
																				"nameLocation": "3404:9:15",
																				"nodeType": "VariableDeclaration",
																				"scope": 3367,
																				"src": "3399:14:15",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3341,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3399:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3349,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"id": 3343,
																					"name": "Items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3117,
																					"src": "3416:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																					}
																				},
																				"id": 3347,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3344,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3323,
																						"src": "3422:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3345,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3426:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3422:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3416:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_storage",
																					"typeString": "struct NFTMarketplace.Item storage ref"
																				}
																			},
																			"id": 3348,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3429:6:15",
																			"memberName": "itemId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3099,
																			"src": "3416:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3399:36:15"
																	},
																	{
																		"assignments": [
																			3352
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3352,
																				"mutability": "mutable",
																				"name": "currentItem",
																				"nameLocation": "3466:11:15",
																				"nodeType": "VariableDeclaration",
																				"scope": 3367,
																				"src": "3454:23:15",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item"
																				},
																				"typeName": {
																					"id": 3351,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 3350,
																						"name": "Item",
																						"nameLocations": [
																							"3454:4:15"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 3112,
																						"src": "3454:4:15"
																					},
																					"referencedDeclaration": 3112,
																					"src": "3454:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																						"typeString": "struct NFTMarketplace.Item"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3356,
																		"initialValue": {
																			"baseExpression": {
																				"id": 3353,
																				"name": "Items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3117,
																				"src": "3480:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																				}
																			},
																			"id": 3355,
																			"indexExpression": {
																				"id": 3354,
																				"name": "currentId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3342,
																				"src": "3486:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3480:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Item_$3112_storage",
																				"typeString": "struct NFTMarketplace.Item storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3454:42:15"
																	},
																	{
																		"expression": {
																			"id": 3361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3357,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3314,
																					"src": "3515:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTMarketplace.Item memory[] memory"
																					}
																				},
																				"id": 3359,
																				"indexExpression": {
																					"id": 3358,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3280,
																					"src": "3521:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3515:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3360,
																				"name": "currentItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3352,
																				"src": "3537:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item memory"
																				}
																			},
																			"src": "3515:33:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																				"typeString": "struct NFTMarketplace.Item memory"
																			}
																		},
																		"id": 3362,
																		"nodeType": "ExpressionStatement",
																		"src": "3515:33:15"
																	},
																	{
																		"expression": {
																			"id": 3365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3363,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3280,
																				"src": "3567:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3583:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3567:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3366,
																		"nodeType": "ExpressionStatement",
																		"src": "3567:17:15"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3326,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3323,
														"src": "3300:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3327,
														"name": "totalListedItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3270,
														"src": "3304:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3300:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3370,
												"initializationExpression": {
													"assignments": [
														3323
													],
													"declarations": [
														{
															"constant": false,
															"id": 3323,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3293:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3370,
															"src": "3288:6:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3322,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3288:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3325,
													"initialValue": {
														"hexValue": "30",
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3297:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3288:10:15"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3322:3:15",
														"subExpression": {
															"id": 3329,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3323,
															"src": "3322:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3331,
													"nodeType": "ExpressionStatement",
													"src": "3322:3:15"
												},
												"nodeType": "ForStatement",
												"src": "3283:328:15"
											},
											{
												"expression": {
													"id": 3371,
													"name": "items",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3314,
													"src": "3628:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.Item memory[] memory"
													}
												},
												"functionReturnParameters": 3268,
												"id": 3372,
												"nodeType": "Return",
												"src": "3621:12:15"
											}
										]
									},
									"functionSelector": "4d757a1c",
									"id": 3374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerListedItems",
									"nameLocation": "2870:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2889:2:15"
									},
									"returnParameters": {
										"id": 3268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "2915:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTMarketplace.Item[]"
												},
												"typeName": {
													"baseType": {
														"id": 3265,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3264,
															"name": "Item",
															"nameLocations": [
																"2915:4:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3112,
															"src": "2915:4:15"
														},
														"referencedDeclaration": 3112,
														"src": "2915:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
															"typeString": "struct NFTMarketplace.Item"
														}
													},
													"id": 3266,
													"nodeType": "ArrayTypeName",
													"src": "2915:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
														"typeString": "struct NFTMarketplace.Item[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2914:15:15"
									},
									"scope": 3889,
									"src": "2861:780:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3485,
										"nodeType": "Block",
										"src": "3774:715:15",
										"statements": [
											{
												"assignments": [
													3382
												],
												"declarations": [
													{
														"constant": false,
														"id": 3382,
														"mutability": "mutable",
														"name": "totalListedItems",
														"nameLocation": "3790:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 3485,
														"src": "3785:21:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3381,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3785:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3386,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3383,
															"name": "s_nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3061,
															"src": "3809:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3818:7:15",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1524,
														"src": "3809:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1512_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3785:42:15"
											},
											{
												"assignments": [
													3388
												],
												"declarations": [
													{
														"constant": false,
														"id": 3388,
														"mutability": "mutable",
														"name": "itemCount",
														"nameLocation": "3843:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 3485,
														"src": "3838:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3387,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3838:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3390,
												"initialValue": {
													"hexValue": "30",
													"id": 3389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3855:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3838:18:15"
											},
											{
												"assignments": [
													3392
												],
												"declarations": [
													{
														"constant": false,
														"id": 3392,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "3872:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 3485,
														"src": "3867:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3391,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3867:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3394,
												"initialValue": {
													"hexValue": "30",
													"id": 3393,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3887:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3867:21:15"
											},
											{
												"body": {
													"id": 3420,
													"nodeType": "Block",
													"src": "3948:114:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3405,
																			"name": "Items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3117,
																			"src": "3967:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																			}
																		},
																		"id": 3409,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3406,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3396,
																				"src": "3973:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3977:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3967:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$3112_storage",
																			"typeString": "struct NFTMarketplace.Item storage ref"
																		}
																	},
																	"id": 3410,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3980:6:15",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3105,
																	"src": "3967:19:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3411,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3990:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3994:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3990:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3967:33:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3419,
															"nodeType": "IfStatement",
															"src": "3963:88:15",
															"trueBody": {
																"id": 3418,
																"nodeType": "Block",
																"src": "4002:49:15",
																"statements": [
																	{
																		"expression": {
																			"id": 3416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3414,
																				"name": "itemCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3388,
																				"src": "4021:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4034:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4021:14:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3417,
																		"nodeType": "ExpressionStatement",
																		"src": "4021:14:15"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3399,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3396,
														"src": "3921:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3400,
														"name": "totalListedItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3382,
														"src": "3925:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3921:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3421,
												"initializationExpression": {
													"assignments": [
														3396
													],
													"declarations": [
														{
															"constant": false,
															"id": 3396,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3914:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3421,
															"src": "3906:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3395,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3906:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3398,
													"initialValue": {
														"hexValue": "30",
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3918:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3906:13:15"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3943:3:15",
														"subExpression": {
															"id": 3402,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3396,
															"src": "3943:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3404,
													"nodeType": "ExpressionStatement",
													"src": "3943:3:15"
												},
												"nodeType": "ForStatement",
												"src": "3901:161:15"
											},
											{
												"assignments": [
													3426
												],
												"declarations": [
													{
														"constant": false,
														"id": 3426,
														"mutability": "mutable",
														"name": "items",
														"nameLocation": "4088:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3485,
														"src": "4074:19:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTMarketplace.Item[]"
														},
														"typeName": {
															"baseType": {
																"id": 3424,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3423,
																	"name": "Item",
																	"nameLocations": [
																		"4074:4:15"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3112,
																	"src": "4074:4:15"
																},
																"referencedDeclaration": 3112,
																"src": "4074:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																	"typeString": "struct NFTMarketplace.Item"
																}
															},
															"id": 3425,
															"nodeType": "ArrayTypeName",
															"src": "4074:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.Item[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3433,
												"initialValue": {
													"arguments": [
														{
															"id": 3431,
															"name": "itemCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3388,
															"src": "4107:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4096:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTMarketplace.Item memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3428,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3427,
																	"name": "Item",
																	"nameLocations": [
																		"4100:4:15"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3112,
																	"src": "4100:4:15"
																},
																"referencedDeclaration": 3112,
																"src": "4100:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																	"typeString": "struct NFTMarketplace.Item"
																}
															},
															"id": 3429,
															"nodeType": "ArrayTypeName",
															"src": "4100:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.Item[]"
															}
														}
													},
													"id": 3432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:21:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.Item memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4074:43:15"
											},
											{
												"body": {
													"id": 3481,
													"nodeType": "Block",
													"src": "4172:285:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3444,
																			"name": "Items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3117,
																			"src": "4191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																			}
																		},
																		"id": 3448,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3445,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3435,
																				"src": "4197:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4201:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4197:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$3112_storage",
																			"typeString": "struct NFTMarketplace.Item storage ref"
																		}
																	},
																	"id": 3449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4204:6:15",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3105,
																	"src": "4191:19:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3450,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4214:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4218:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4214:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4191:33:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3480,
															"nodeType": "IfStatement",
															"src": "4187:259:15",
															"trueBody": {
																"id": 3479,
																"nodeType": "Block",
																"src": "4226:220:15",
																"statements": [
																	{
																		"assignments": [
																			3454
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3454,
																				"mutability": "mutable",
																				"name": "currentId",
																				"nameLocation": "4250:9:15",
																				"nodeType": "VariableDeclaration",
																				"scope": 3479,
																				"src": "4245:14:15",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3453,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4245:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3461,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"id": 3455,
																					"name": "Items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3117,
																					"src": "4262:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																					}
																				},
																				"id": 3459,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3456,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3435,
																						"src": "4268:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3457,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4272:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4268:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4262:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_storage",
																					"typeString": "struct NFTMarketplace.Item storage ref"
																				}
																			},
																			"id": 3460,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4275:6:15",
																			"memberName": "itemId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3099,
																			"src": "4262:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4245:36:15"
																	},
																	{
																		"assignments": [
																			3464
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3464,
																				"mutability": "mutable",
																				"name": "currentItem",
																				"nameLocation": "4312:11:15",
																				"nodeType": "VariableDeclaration",
																				"scope": 3479,
																				"src": "4300:23:15",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item"
																				},
																				"typeName": {
																					"id": 3463,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 3462,
																						"name": "Item",
																						"nameLocations": [
																							"4300:4:15"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 3112,
																						"src": "4300:4:15"
																					},
																					"referencedDeclaration": 3112,
																					"src": "4300:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
																						"typeString": "struct NFTMarketplace.Item"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3468,
																		"initialValue": {
																			"baseExpression": {
																				"id": 3465,
																				"name": "Items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3117,
																				"src": "4326:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																				}
																			},
																			"id": 3467,
																			"indexExpression": {
																				"id": 3466,
																				"name": "currentId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3454,
																				"src": "4332:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4326:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Item_$3112_storage",
																				"typeString": "struct NFTMarketplace.Item storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4300:42:15"
																	},
																	{
																		"expression": {
																			"id": 3473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3469,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3426,
																					"src": "4361:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTMarketplace.Item memory[] memory"
																					}
																				},
																				"id": 3471,
																				"indexExpression": {
																					"id": 3470,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3392,
																					"src": "4367:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4361:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3472,
																				"name": "currentItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3464,
																				"src": "4383:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																					"typeString": "struct NFTMarketplace.Item memory"
																				}
																			},
																			"src": "4361:33:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
																				"typeString": "struct NFTMarketplace.Item memory"
																			}
																		},
																		"id": 3474,
																		"nodeType": "ExpressionStatement",
																		"src": "4361:33:15"
																	},
																	{
																		"expression": {
																			"id": 3477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3475,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3392,
																				"src": "4413:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4429:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4413:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3478,
																		"nodeType": "ExpressionStatement",
																		"src": "4413:17:15"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3438,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3435,
														"src": "4145:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3439,
														"name": "totalListedItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3382,
														"src": "4149:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4145:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3482,
												"initializationExpression": {
													"assignments": [
														3435
													],
													"declarations": [
														{
															"constant": false,
															"id": 3435,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4138:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3482,
															"src": "4133:6:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3434,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4133:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3437,
													"initialValue": {
														"hexValue": "30",
														"id": 3436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4142:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4133:10:15"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4167:3:15",
														"subExpression": {
															"id": 3441,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3435,
															"src": "4167:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3443,
													"nodeType": "ExpressionStatement",
													"src": "4167:3:15"
												},
												"nodeType": "ForStatement",
												"src": "4128:329:15"
											},
											{
												"expression": {
													"id": 3483,
													"name": "items",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3426,
													"src": "4476:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.Item memory[] memory"
													}
												},
												"functionReturnParameters": 3380,
												"id": 3484,
												"nodeType": "Return",
												"src": "4469:12:15"
											}
										]
									},
									"functionSelector": "f9319c53",
									"id": 3486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSellerListedItems",
									"nameLocation": "3713:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3733:2:15"
									},
									"returnParameters": {
										"id": 3380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "3759:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Item_$3112_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTMarketplace.Item[]"
												},
												"typeName": {
													"baseType": {
														"id": 3377,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3376,
															"name": "Item",
															"nameLocations": [
																"3759:4:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3112,
															"src": "3759:4:15"
														},
														"referencedDeclaration": 3112,
														"src": "3759:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
															"typeString": "struct NFTMarketplace.Item"
														}
													},
													"id": 3378,
													"nodeType": "ArrayTypeName",
													"src": "3759:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$3112_storage_$dyn_storage_ptr",
														"typeString": "struct NFTMarketplace.Item[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3758:15:15"
									},
									"scope": 3889,
									"src": "3704:785:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3498,
										"nodeType": "Block",
										"src": "4575:40:15",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3494,
														"name": "Items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3117,
														"src": "4593:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
														}
													},
													"id": 3496,
													"indexExpression": {
														"id": 3495,
														"name": "_itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3488,
														"src": "4599:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4593:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$3112_storage",
														"typeString": "struct NFTMarketplace.Item storage ref"
													}
												},
												"functionReturnParameters": 3493,
												"id": 3497,
												"nodeType": "Return",
												"src": "4586:21:15"
											}
										]
									},
									"functionSelector": "f2a7a2b4",
									"id": 3499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getParticularItem",
									"nameLocation": "4506:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3488,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "4532:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3499,
												"src": "4524:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4523:17:15"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3499,
												"src": "4563:11:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
													"typeString": "struct NFTMarketplace.Item"
												},
												"typeName": {
													"id": 3491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3490,
														"name": "Item",
														"nameLocations": [
															"4563:4:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3112,
														"src": "4563:4:15"
													},
													"referencedDeclaration": 3112,
													"src": "4563:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$3112_storage_ptr",
														"typeString": "struct NFTMarketplace.Item"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4562:13:15"
									},
									"scope": 3889,
									"src": "4497:118:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3611,
										"nodeType": "Block",
										"src": "4771:1515:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3510,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3505,
														"src": "4786:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4796:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4786:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3518,
												"nodeType": "IfStatement",
												"src": "4782:120:15",
												"trueBody": {
													"id": 3517,
													"nodeType": "Block",
													"src": "4799:103:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4974656d205072696365206973207a65726f",
																		"id": 3514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4869:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f99fcefe44b2d6c729beaa170337e140da4ca44ee3c99eaaa4bafcc0b9e7c622",
																			"typeString": "literal_string \"Item Price is zero\""
																		},
																		"value": "Item Price is zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f99fcefe44b2d6c729beaa170337e140da4ca44ee3c99eaaa4bafcc0b9e7c622",
																			"typeString": "literal_string \"Item Price is zero\""
																		}
																	],
																	"id": 3513,
																	"name": "NFTMarketplace__ItemPriceIsZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3040,
																	"src": "4837:31:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 3515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4837:53:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3516,
															"nodeType": "RevertStatement",
															"src": "4830:60:15"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 3521,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5188:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5192:6:15",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5188:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3525,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5208:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 3524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5200:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3523,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5200:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5200:13:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 3519,
																"name": "tradingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3077,
																"src": "5165:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$279",
																	"typeString": "contract IERC20"
																}
															},
															"id": 3520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5178:9:15",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "5165:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 3527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5165:49:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3528,
														"name": "listingPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3074,
														"src": "5217:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5165:64:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3535,
												"nodeType": "IfStatement",
												"src": "5161:168:15",
												"trueBody": {
													"id": 3534,
													"nodeType": "Block",
													"src": "5231:98:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4c697374696e67207072696365206973206e6f74206d6574",
																		"id": 3531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5290:26:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_26c10054244c2acbf2a9a08ccdf7f5bfa4dc8d416cce2204430e2dabe22a96eb",
																			"typeString": "literal_string \"Listing price is not met\""
																		},
																		"value": "Listing price is not met"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_26c10054244c2acbf2a9a08ccdf7f5bfa4dc8d416cce2204430e2dabe22a96eb",
																			"typeString": "literal_string \"Listing price is not met\""
																		}
																	],
																	"id": 3530,
																	"name": "NFTMarketplace__ListingPriceIsNotMet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3048,
																	"src": "5253:36:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 3532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5253:64:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3533,
															"nodeType": "RevertStatement",
															"src": "5246:71:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3539,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5437:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5441:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5437:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3543,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5457:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5449:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5449:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5449:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3545,
															"name": "listingPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "5464:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3536,
															"name": "tradingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "5411:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$279",
																"typeString": "contract IERC20"
															}
														},
														"id": 3538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5424:12:15",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "5411:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5411:66:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3547,
												"nodeType": "ExpressionStatement",
												"src": "5411:66:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3548,
															"name": "s_nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3061,
															"src": "5488:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3550,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5497:9:15",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "5488:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1512_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3552,
												"nodeType": "ExpressionStatement",
												"src": "5488:20:15"
											},
											{
												"assignments": [
													3554
												],
												"declarations": [
													{
														"constant": false,
														"id": 3554,
														"mutability": "mutable",
														"name": "newNftId",
														"nameLocation": "5524:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 3611,
														"src": "5519:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3553,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5519:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3558,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3555,
															"name": "s_nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3061,
															"src": "5535:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5544:7:15",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1524,
														"src": "5535:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1512_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5519:34:15"
											},
											{
												"expression": {
													"id": 3575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3559,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3117,
															"src": "5566:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
															}
														},
														"id": 3561,
														"indexExpression": {
															"id": 3560,
															"name": "newNftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3554,
															"src": "5572:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5566:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage",
															"typeString": "struct NFTMarketplace.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3563,
																"name": "newNftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3554,
																"src": "5603:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3564,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3501,
																"src": "5626:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3565,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3503,
																"src": "5652:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3566,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5675:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5679:6:15",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5675:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3570,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5708:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 3569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5700:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3568,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5700:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5700:13:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3572,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3505,
																"src": "5728:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5749:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3562,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3112,
															"src": "5584:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$3112_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.Item storage pointer)"
															}
														},
														"id": 3574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5584:181:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_memory_ptr",
															"typeString": "struct NFTMarketplace.Item memory"
														}
													},
													"src": "5566:199:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$3112_storage",
														"typeString": "struct NFTMarketplace.Item storage ref"
													}
												},
												"id": 3576,
												"nodeType": "ExpressionStatement",
												"src": "5566:199:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3581,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5812:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5816:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5812:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3585,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5832:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5824:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3583,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5824:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5824:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3587,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3503,
															"src": "5839:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3578,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3501,
																	"src": "5786:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3577,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "5778:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1353_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5778:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1353",
																"typeString": "contract IERC721"
															}
														},
														"id": 3580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5799:12:15",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1318,
														"src": "5778:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5778:70:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3589,
												"nodeType": "ExpressionStatement",
												"src": "5778:70:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3591,
															"name": "newNftId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3554,
															"src": "5889:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3592,
															"name": "_nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3501,
															"src": "5912:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3593,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3503,
															"src": "5938:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3594,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5961:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5965:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5961:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3598,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5994:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5986:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3596,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5986:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5986:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3600,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3505,
															"src": "6014:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 3601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6035:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3590,
														"name": "ItemList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "5866:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,uint256,address,address,uint256,bool)"
														}
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5866:185:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3603,
												"nodeType": "EmitStatement",
												"src": "5861:190:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3607,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "6237:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3608,
															"name": "listingPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "6244:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3604,
															"name": "tradingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "6215:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$279",
																"typeString": "contract IERC20"
															}
														},
														"id": 3606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6228:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 246,
														"src": "6215:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6215:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3610,
												"nodeType": "ExpressionStatement",
												"src": "6215:42:15"
											}
										]
									},
									"functionSelector": "89bfd38f",
									"id": 3612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3507,
												"name": "nonReentrant",
												"nameLocations": [
													"4758:12:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "4758:12:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4758:12:15"
										}
									],
									"name": "listItem",
									"nameLocation": "4653:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3501,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "4680:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3612,
												"src": "4672:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3503,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4710:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3612,
												"src": "4702:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3505,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "4737:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3612,
												"src": "4729:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:89:15"
									},
									"returnParameters": {
										"id": 3509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4771:0:15"
									},
									"scope": 3889,
									"src": "4644:1642:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3724,
										"nodeType": "Block",
										"src": "6411:1152:15",
										"statements": [
											{
												"assignments": [
													3622
												],
												"declarations": [
													{
														"constant": false,
														"id": 3622,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "6430:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "6422:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6422:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3627,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3623,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3117,
															"src": "6438:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
															}
														},
														"id": 3625,
														"indexExpression": {
															"id": 3624,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3616,
															"src": "6444:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6438:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage",
															"typeString": "struct NFTMarketplace.Item storage ref"
														}
													},
													"id": 3626,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6453:5:15",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3109,
													"src": "6438:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6422:36:15"
											},
											{
												"assignments": [
													3629
												],
												"declarations": [
													{
														"constant": false,
														"id": 3629,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "6477:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "6469:15:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6469:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3634,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3630,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3117,
															"src": "6487:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
															}
														},
														"id": 3632,
														"indexExpression": {
															"id": 3631,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3616,
															"src": "6493:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6487:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage",
															"typeString": "struct NFTMarketplace.Item storage ref"
														}
													},
													"id": 3633,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6502:7:15",
													"memberName": "tokenId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3103,
													"src": "6487:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6469:40:15"
											},
											{
												"assignments": [
													3636
												],
												"declarations": [
													{
														"constant": false,
														"id": 3636,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "6528:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "6520:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6520:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3641,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3637,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3117,
															"src": "6537:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
															}
														},
														"id": 3639,
														"indexExpression": {
															"id": 3638,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3616,
															"src": "6543:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6537:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage",
															"typeString": "struct NFTMarketplace.Item storage ref"
														}
													},
													"id": 3640,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6552:6:15",
													"memberName": "seller",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3105,
													"src": "6537:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6520:38:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 3644,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6768:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6772:6:15",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6768:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3648,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6788:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 3647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6780:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6780:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6780:13:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 3642,
																"name": "tradingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3077,
																"src": "6745:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$279",
																	"typeString": "contract IERC20"
																}
															},
															"id": 3643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6758:9:15",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "6745:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 3650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6745:49:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3651,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3622,
														"src": "6797:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6745:57:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3658,
												"nodeType": "IfStatement",
												"src": "6741:161:15",
												"trueBody": {
													"id": 3657,
													"nodeType": "Block",
													"src": "6804:98:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4c697374696e67205072696365206973206e6f74206d6574",
																		"id": 3654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6863:26:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7c2070eb6044bab832f5a7b52eb617410e2bfe7b6a3d87012b83b486a16fa344",
																			"typeString": "literal_string \"Listing Price is not met\""
																		},
																		"value": "Listing Price is not met"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_7c2070eb6044bab832f5a7b52eb617410e2bfe7b6a3d87012b83b486a16fa344",
																			"typeString": "literal_string \"Listing Price is not met\""
																		}
																	],
																	"id": 3653,
																	"name": "NFTMarketplace__ListingPriceIsNotMet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3048,
																	"src": "6826:36:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 3655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6826:64:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3656,
															"nodeType": "RevertStatement",
															"src": "6819:71:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3662,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7010:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7014:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7010:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3666,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7030:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7022:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7022:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7022:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3668,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3622,
															"src": "7037:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3659,
															"name": "tradingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "6984:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$279",
																"typeString": "contract IERC20"
															}
														},
														"id": 3661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6997:12:15",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "6984:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 3669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:59:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3670,
												"nodeType": "ExpressionStatement",
												"src": "6984:59:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3677,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7138:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7130:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3675,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7130:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7130:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3679,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7145:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7149:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7145:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3681,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3629,
															"src": "7157:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3672,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3614,
																	"src": "7104:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3671,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "7096:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1353_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7096:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1353",
																"typeString": "contract IERC721"
															}
														},
														"id": 3674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7117:12:15",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1318,
														"src": "7096:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7096:69:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3683,
												"nodeType": "ExpressionStatement",
												"src": "7096:69:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3687,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3636,
															"src": "7198:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3688,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3622,
															"src": "7206:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3684,
															"name": "tradingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "7176:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$279",
																"typeString": "contract IERC20"
															}
														},
														"id": 3686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7189:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 246,
														"src": "7176:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7176:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3690,
												"nodeType": "ExpressionStatement",
												"src": "7176:36:15"
											},
											{
												"expression": {
													"id": 3697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3691,
																"name": "Items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "7274:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																}
															},
															"id": 3693,
															"indexExpression": {
																"id": 3692,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3616,
																"src": "7280:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7274:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$3112_storage",
																"typeString": "struct NFTMarketplace.Item storage ref"
															}
														},
														"id": 3694,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7289:5:15",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3107,
														"src": "7274:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3695,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7297:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7301:6:15",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7297:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7274:33:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3698,
												"nodeType": "ExpressionStatement",
												"src": "7274:33:15"
											},
											{
												"expression": {
													"id": 3704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3699,
																"name": "Items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "7318:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																}
															},
															"id": 3701,
															"indexExpression": {
																"id": 3700,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3616,
																"src": "7324:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7318:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$3112_storage",
																"typeString": "struct NFTMarketplace.Item storage ref"
															}
														},
														"id": 3702,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7333:4:15",
														"memberName": "sold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3111,
														"src": "7318:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7340:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7318:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3705,
												"nodeType": "ExpressionStatement",
												"src": "7318:26:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3706,
															"name": "s_nftSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "7355:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3708,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7365:9:15",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1538,
														"src": "7355:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1512_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7355:21:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3710,
												"nodeType": "ExpressionStatement",
												"src": "7355:21:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3712,
															"name": "_nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3614,
															"src": "7419:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3713,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3629,
															"src": "7445:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3716,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7475:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7467:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3714,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7467:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7467:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3718,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7495:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7499:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7495:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3720,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3622,
															"src": "7520:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7540:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3711,
														"name": "ItemBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "7394:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256,bool)"
														}
													},
													"id": 3722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7394:161:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3723,
												"nodeType": "EmitStatement",
												"src": "7389:166:15"
											}
										]
									},
									"functionSelector": "9f37092a",
									"id": 3725,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3619,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3618,
												"name": "nonReentrant",
												"nameLocations": [
													"6393:12:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "6393:12:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "6393:12:15"
										}
									],
									"name": "buyItem",
									"nameLocation": "6320:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "6336:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6328:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "6357:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6349:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:38:15"
									},
									"returnParameters": {
										"id": 3620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6411:0:15"
									},
									"scope": 3889,
									"src": "6311:1252:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3855,
										"nodeType": "Block",
										"src": "7714:1248:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3736,
																"name": "Items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "7729:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																}
															},
															"id": 3738,
															"indexExpression": {
																"id": 3737,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3729,
																"src": "7735:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7729:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$3112_storage",
																"typeString": "struct NFTMarketplace.Item storage ref"
															}
														},
														"id": 3739,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7744:5:15",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3107,
														"src": "7729:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 3740,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7753:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7757:6:15",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7753:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7729:34:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3748,
												"nodeType": "IfStatement",
												"src": "7725:152:15",
												"trueBody": {
													"id": 3747,
													"nodeType": "Block",
													"src": "7765:112:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973206974656d",
																		"id": 3744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7828:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5729c5951217e82698b009f0228c772240632422f06d27d3078726c074a78ad",
																			"typeString": "literal_string \"You are not the owner of this item\""
																		},
																		"value": "You are not the owner of this item"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5729c5951217e82698b009f0228c772240632422f06d27d3078726c074a78ad",
																			"typeString": "literal_string \"You are not the owner of this item\""
																		}
																	],
																	"id": 3743,
																	"name": "NFTMarketplace__YouAreNotOwnerOfThisItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3052,
																	"src": "7787:40:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 3745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7787:78:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3746,
															"nodeType": "RevertStatement",
															"src": "7780:85:15"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 3751,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8106:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8110:6:15",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8106:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3755,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "8126:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 3754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8118:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8118:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8118:13:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 3749,
																"name": "tradingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3077,
																"src": "8083:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$279",
																	"typeString": "contract IERC20"
																}
															},
															"id": 3750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8096:9:15",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "8083:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 3757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8083:49:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3758,
														"name": "listingPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3074,
														"src": "8135:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8083:64:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3765,
												"nodeType": "IfStatement",
												"src": "8079:168:15",
												"trueBody": {
													"id": 3764,
													"nodeType": "Block",
													"src": "8149:98:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4c697374696e67207072696365206973206e6f74206d6574",
																		"id": 3761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8208:26:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_26c10054244c2acbf2a9a08ccdf7f5bfa4dc8d416cce2204430e2dabe22a96eb",
																			"typeString": "literal_string \"Listing price is not met\""
																		},
																		"value": "Listing price is not met"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_26c10054244c2acbf2a9a08ccdf7f5bfa4dc8d416cce2204430e2dabe22a96eb",
																			"typeString": "literal_string \"Listing price is not met\""
																		}
																	],
																	"id": 3760,
																	"name": "NFTMarketplace__ListingPriceIsNotMet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3048,
																	"src": "8171:36:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 3762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8171:64:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3763,
															"nodeType": "RevertStatement",
															"src": "8164:71:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8355:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8359:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8355:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3773,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8375:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8367:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8367:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8367:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3775,
															"name": "listingPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "8382:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3766,
															"name": "tradingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "8329:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$279",
																"typeString": "contract IERC20"
															}
														},
														"id": 3768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8342:12:15",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "8329:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 3776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8329:66:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3777,
												"nodeType": "ExpressionStatement",
												"src": "8329:66:15"
											},
											{
												"expression": {
													"id": 3783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3778,
																"name": "Items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "8406:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																}
															},
															"id": 3780,
															"indexExpression": {
																"id": 3779,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3729,
																"src": "8412:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8406:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$3112_storage",
																"typeString": "struct NFTMarketplace.Item storage ref"
															}
														},
														"id": 3781,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8421:4:15",
														"memberName": "sold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3111,
														"src": "8406:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8428:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8406:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3784,
												"nodeType": "ExpressionStatement",
												"src": "8406:27:15"
											},
											{
												"expression": {
													"id": 3790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3785,
																"name": "Items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "8444:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																}
															},
															"id": 3787,
															"indexExpression": {
																"id": 3786,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3729,
																"src": "8450:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8444:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$3112_storage",
																"typeString": "struct NFTMarketplace.Item storage ref"
															}
														},
														"id": 3788,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8459:5:15",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3109,
														"src": "8444:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3789,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3731,
														"src": "8467:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8444:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3791,
												"nodeType": "ExpressionStatement",
												"src": "8444:29:15"
											},
											{
												"expression": {
													"id": 3798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3792,
																"name": "Items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "8484:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																}
															},
															"id": 3794,
															"indexExpression": {
																"id": 3793,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3729,
																"src": "8490:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8484:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$3112_storage",
																"typeString": "struct NFTMarketplace.Item storage ref"
															}
														},
														"id": 3795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8499:6:15",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3105,
														"src": "8484:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3796,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8508:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8512:6:15",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8508:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8484:34:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3799,
												"nodeType": "ExpressionStatement",
												"src": "8484:34:15"
											},
											{
												"expression": {
													"id": 3808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3800,
																"name": "Items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "8529:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																}
															},
															"id": 3802,
															"indexExpression": {
																"id": 3801,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3729,
																"src": "8535:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8529:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$3112_storage",
																"typeString": "struct NFTMarketplace.Item storage ref"
															}
														},
														"id": 3803,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8544:5:15",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3107,
														"src": "8529:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3806,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8560:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																	"typeString": "contract NFTMarketplace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																	"typeString": "contract NFTMarketplace"
																}
															],
															"id": 3805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8552:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3804,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8552:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 3807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8552:13:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8529:36:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3809,
												"nodeType": "ExpressionStatement",
												"src": "8529:36:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3810,
															"name": "s_nftSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "8576:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1512_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3812,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8586:9:15",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1566,
														"src": "8576:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1512_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1512_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8576:21:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3814,
												"nodeType": "ExpressionStatement",
												"src": "8576:21:15"
											},
											{
												"assignments": [
													3816
												],
												"declarations": [
													{
														"constant": false,
														"id": 3816,
														"mutability": "mutable",
														"name": "_tokenId",
														"nameLocation": "8615:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 3855,
														"src": "8610:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3815,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8610:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3821,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3817,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3117,
															"src": "8626:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
															}
														},
														"id": 3819,
														"indexExpression": {
															"id": 3818,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3729,
															"src": "8632:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8626:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage",
															"typeString": "struct NFTMarketplace.Item storage ref"
														}
													},
													"id": 3820,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8641:7:15",
													"memberName": "tokenId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3103,
													"src": "8626:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8610:38:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3826,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8693:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8697:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8693:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3830,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8713:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3828,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3832,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3816,
															"src": "8720:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3823,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3727,
																	"src": "8667:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3822,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "8659:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$1353_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 3824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8659:20:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1353",
																"typeString": "contract IERC721"
															}
														},
														"id": 3825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8680:12:15",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1318,
														"src": "8659:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8659:70:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3834,
												"nodeType": "ExpressionStatement",
												"src": "8659:70:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3836,
															"name": "_nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3727,
															"src": "8758:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3837,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3816,
															"src": "8771:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3838,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8781:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8785:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8781:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3842,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8801:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$3889",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8793:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8793:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8793:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3844,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3731,
															"src": "8808:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 3845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8816:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3835,
														"name": "ItemResell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3161,
														"src": "8747:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256,bool)"
														}
													},
													"id": 3846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8747:75:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3847,
												"nodeType": "EmitStatement",
												"src": "8742:80:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3851,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3066,
															"src": "8913:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3852,
															"name": "listingPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "8920:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3848,
															"name": "tradingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "8891:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$279",
																"typeString": "contract IERC20"
															}
														},
														"id": 3850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8904:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 246,
														"src": "8891:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8891:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3854,
												"nodeType": "ExpressionStatement",
												"src": "8891:42:15"
											}
										]
									},
									"functionSelector": "8f0af0f9",
									"id": 3856,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3733,
												"name": "nonReentrant",
												"nameLocations": [
													"7701:12:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "7701:12:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "7701:12:15"
										}
									],
									"name": "resellItem",
									"nameLocation": "7595:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3727,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "7624:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3856,
												"src": "7616:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7616:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3729,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "7654:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3856,
												"src": "7646:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7646:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3731,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "7680:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3856,
												"src": "7672:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7672:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:88:15"
									},
									"returnParameters": {
										"id": 3735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7714:0:15"
									},
									"scope": 3889,
									"src": "7586:1376:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3887,
										"nodeType": "Block",
										"src": "9016:313:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3861,
																	"name": "Items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3117,
																	"src": "9031:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																	}
																},
																"id": 3863,
																"indexExpression": {
																	"id": 3862,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3858,
																	"src": "9037:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9031:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage",
																	"typeString": "struct NFTMarketplace.Item storage ref"
																}
															},
															"id": 3864,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9046:6:15",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3105,
															"src": "9031:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 3865,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9056:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9060:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9056:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9031:35:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3868,
																	"name": "Items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3117,
																	"src": "9070:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
																	}
																},
																"id": 3870,
																"indexExpression": {
																	"id": 3869,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3858,
																	"src": "9076:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9070:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$3112_storage",
																	"typeString": "struct NFTMarketplace.Item storage ref"
																}
															},
															"id": 3871,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9085:5:15",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3107,
															"src": "9070:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 3872,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9094:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9098:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9094:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9070:34:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9031:73:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3881,
												"nodeType": "IfStatement",
												"src": "9027:191:15",
												"trueBody": {
													"id": 3880,
													"nodeType": "Block",
													"src": "9106:112:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973206974656d",
																		"id": 3877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9169:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5729c5951217e82698b009f0228c772240632422f06d27d3078726c074a78ad",
																			"typeString": "literal_string \"You are not the owner of this item\""
																		},
																		"value": "You are not the owner of this item"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5729c5951217e82698b009f0228c772240632422f06d27d3078726c074a78ad",
																			"typeString": "literal_string \"You are not the owner of this item\""
																		}
																	],
																	"id": 3876,
																	"name": "NFTMarketplace__YouAreNotOwnerOfThisItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3052,
																	"src": "9128:40:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 3878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9128:78:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3879,
															"nodeType": "RevertStatement",
															"src": "9121:85:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9300:21:15",
													"subExpression": {
														"baseExpression": {
															"id": 3882,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3117,
															"src": "9307:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3112_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.Item storage ref)"
															}
														},
														"id": 3884,
														"indexExpression": {
															"id": 3883,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3858,
															"src": "9313:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9307:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3112_storage",
															"typeString": "struct NFTMarketplace.Item storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3886,
												"nodeType": "ExpressionStatement",
												"src": "9300:21:15"
											}
										]
									},
									"functionSelector": "5a599da8",
									"id": 3888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlistItem",
									"nameLocation": "8979:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3858,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "8998:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "8990:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8990:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8989:17:15"
									},
									"returnParameters": {
										"id": 3860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9016:0:15"
									},
									"scope": 3889,
									"src": "8970:359:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3890,
							"src": "566:8766:15",
							"usedErrors": [
								3040,
								3048,
								3052
							],
							"usedEvents": [
								3133,
								3147,
								3161
							]
						}
					],
					"src": "33:9301:15"
				},
				"id": 15
			}
		}
	}
}